<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="d2/d36/classBrush_1_1Data_1_1Dataset" kind="class" language="C++" prot="public">
    <compoundname>Brush::Data::Dataset</compoundname>
    <includes refid="d2/dbd/data_8h" local="no">data.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d2/d36/classBrush_1_1Data_1_1Dataset_1a4112a2cb86ce4138c3c4bea966c96b65" prot="private" static="no" mutable="no">
        <type>vector&lt; size_t &gt;</type>
        <definition>vector&lt;size_t&gt; Brush::Data::Dataset::training_data_idx</definition>
        <argsstring></argsstring>
        <name>training_data_idx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="53" column="16" bodyfile="/home/runner/work/brush/brush/src/data/data.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d36/classBrush_1_1Data_1_1Dataset_1ab8f3010fa3099efe3aac8fcd3140faf6" prot="private" static="no" mutable="no">
        <type>vector&lt; size_t &gt;</type>
        <definition>vector&lt;size_t&gt; Brush::Data::Dataset::validation_data_idx</definition>
        <argsstring></argsstring>
        <name>validation_data_idx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="54" column="16" bodyfile="/home/runner/work/brush/brush/src/data/data.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="d2/d36/classBrush_1_1Data_1_1Dataset_1a96fc30b35f152f425377e1ae34398779" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="dc/d5c/namespaceBrush_1a3f2c9b744330ba4a561ac72f048a1a5f" kindref="member">DataType</ref> &gt;</type>
        <definition>std::vector&lt;DataType&gt; Brush::Data::Dataset::unique_data_types</definition>
        <argsstring></argsstring>
        <name>unique_data_types</name>
        <briefdescription>
<para>keeps track of the unique data types in the dataset. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="58" column="21" bodyfile="/home/runner/work/brush/brush/src/data/data.h" bodystart="58" bodyend="-1"/>
        <referencedby refid="d4/dc3/structBrush_1_1SearchSpace_1a88636b9ece72850950f3b37b660d0be0" compoundref="da/d48/search__space_8cpp" startline="144" endline="178">Brush::SearchSpace::init</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d2/d36/classBrush_1_1Data_1_1Dataset_1a52d591cce797480e80f8cf1f1482702e" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="dc/d5c/namespaceBrush_1a3f2c9b744330ba4a561ac72f048a1a5f" kindref="member">DataType</ref> &gt;</type>
        <definition>std::vector&lt;DataType&gt; Brush::Data::Dataset::feature_types</definition>
        <argsstring></argsstring>
        <name>feature_types</name>
        <briefdescription>
<para>types of data in the features. <linebreak/>
 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="61" column="21" bodyfile="/home/runner/work/brush/brush/src/data/data.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d36/classBrush_1_1Data_1_1Dataset_1a652aba735323fddf7bf79407e7e4fc83" prot="public" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="dc/d5c/namespaceBrush_1a3f2c9b744330ba4a561ac72f048a1a5f" kindref="member">DataType</ref>, vector&lt; string &gt; &gt;</type>
        <definition>std::unordered_map&lt;DataType,vector&lt;string&gt; &gt; Brush::Data::Dataset::features_of_type</definition>
        <argsstring></argsstring>
        <name>features_of_type</name>
        <briefdescription>
<para>map from data types to features having that type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="64" column="28" bodyfile="/home/runner/work/brush/brush/src/data/data.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d36/classBrush_1_1Data_1_1Dataset_1a23f1c86e056b6806e7fa66c8fe6ea9ff" prot="public" static="no" mutable="no">
        <type>std::map&lt; string, <ref refid="d9/d1c/namespaceBrush_1_1Data_1aeec1ea0d55dd44db207801471be4f09c" kindref="member">State</ref> &gt;</type>
        <definition>std::map&lt;string, State&gt; Brush::Data::Dataset::features</definition>
        <argsstring></argsstring>
        <name>features</name>
        <briefdescription>
<para>dataset features, as key value pairs </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="67" column="18" bodyfile="/home/runner/work/brush/brush/src/data/data.h" bodystart="67" bodyend="-1"/>
        <referencedby refid="dc/d5c/namespaceBrush_1a08d191fd1a609031bd321d66312c988d" compoundref="da/d48/search__space_8cpp" startline="39" endline="136">Brush::generate_terminals</referencedby>
        <referencedby refid="d2/d36/classBrush_1_1Data_1_1Dataset_1a2b7b42b1b16630554b2e49102098a170" compoundref="d2/dbd/data_8h" startline="177" endline="182">get_n_samples</referencedby>
        <referencedby refid="d2/d36/classBrush_1_1Data_1_1Dataset_1a86f779c55c96ff7182b4e649f87fbf24" compoundref="d2/dbd/data_8h" startline="192" endline="197">operator[]</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d2/d36/classBrush_1_1Data_1_1Dataset_1ade105f069d4f745d44374b7b8a3a9b0d" prot="public" static="no" mutable="no">
        <type>ArrayXf</type>
        <definition>ArrayXf Brush::Data::Dataset::y</definition>
        <argsstring></argsstring>
        <name>y</name>
        <briefdescription>
<para>length N array, the target label </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="72" column="17" bodyfile="/home/runner/work/brush/brush/src/data/data.h" bodystart="72" bodyend="-1"/>
        <referencedby refid="dc/d5c/namespaceBrush_1a08d191fd1a609031bd321d66312c988d" compoundref="da/d48/search__space_8cpp" startline="39" endline="136">Brush::generate_terminals</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d2/d36/classBrush_1_1Data_1_1Dataset_1a1a8a1e77afdecb032696bdf38e5c424c" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Brush::Data::Dataset::classification</definition>
        <argsstring></argsstring>
        <name>classification</name>
        <briefdescription>
<para>whether this is a classification problem </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="75" column="14" bodyfile="/home/runner/work/brush/brush/src/data/data.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d36/classBrush_1_1Data_1_1Dataset_1a8a1a428f46a5c80322000f4bef0a09d4" prot="public" static="no" mutable="no">
        <type>std::optional&lt; std::reference_wrapper&lt; const ArrayXXf &gt; &gt;</type>
        <definition>std::optional&lt;std::reference_wrapper&lt;const ArrayXXf&gt; &gt; Brush::Data::Dataset::Xref</definition>
        <argsstring></argsstring>
        <name>Xref</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="76" column="23" bodyfile="/home/runner/work/brush/brush/src/data/data.h" bodystart="76" bodyend="-1"/>
        <referencedby refid="d2/d36/classBrush_1_1Data_1_1Dataset_1a44ebc4ada574ea7a3a843ae74810aac9" compoundref="d2/dbd/data_8h" startline="165" endline="170">get_X</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d2/d36/classBrush_1_1Data_1_1Dataset_1aae2b4b532ccc55a95f65b75a5cd9e176" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float Brush::Data::Dataset::validation_size</definition>
        <argsstring></argsstring>
        <name>validation_size</name>
        <briefdescription>
<para>percentage of original data used for train. if 0.0, then all data is used for train and validation </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="79" column="15" bodyfile="/home/runner/work/brush/brush/src/data/data.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d36/classBrush_1_1Data_1_1Dataset_1a6cadfbd9f8a4700361e63defb7d6f6e0" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Brush::Data::Dataset::use_validation</definition>
        <argsstring></argsstring>
        <name>use_validation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="80" column="14" bodyfile="/home/runner/work/brush/brush/src/data/data.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d36/classBrush_1_1Data_1_1Dataset_1a6ac1f4f56991e43a782dd519c414916a" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float Brush::Data::Dataset::batch_size</definition>
        <argsstring></argsstring>
        <name>batch_size</name>
        <briefdescription>
<para>percentage of training data size to use in each batch. if 1.0, then all data is used </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="83" column="15" bodyfile="/home/runner/work/brush/brush/src/data/data.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d36/classBrush_1_1Data_1_1Dataset_1a8cba7a5f962538d67012264fb6c97ed4" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Brush::Data::Dataset::use_batch</definition>
        <argsstring></argsstring>
        <name>use_batch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="84" column="14" bodyfile="/home/runner/work/brush/brush/src/data/data.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d2/d36/classBrush_1_1Data_1_1Dataset_1afa676d96150281b2384a07e4a3fcc352" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/d36/classBrush_1_1Data_1_1Dataset" kindref="compound">Dataset</ref></type>
        <definition>Dataset Brush::Data::Dataset::operator()</definition>
        <argsstring>(const vector&lt; size_t &gt; &amp;idx) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const vector&lt; size_t &gt; &amp;</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
<para>return a slice of the data using indices idx </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="86" column="17" bodyfile="/home/runner/work/brush/brush/src/data/data.cpp" bodystart="107" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="d2/d36/classBrush_1_1Data_1_1Dataset_1aacd5afd19b9cee9d9d84e4290eeabb6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Brush::Data::Dataset::init</definition>
        <argsstring>()</argsstring>
        <name>init</name>
        <briefdescription>
<para>call init at the end of constructors to define metafeatures of the data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="89" column="14" bodyfile="/home/runner/work/brush/brush/src/data/data.cpp" bodystart="165" bodyend="215"/>
        <references refid="da/d41/error_8h_1aa4c550bcd71e4ec1c97b111e1360509a" compoundref="da/d41/error_8h" startline="24">HANDLE_ERROR_THROW</references>
        <references refid="d6/d2e/namespaceBrush_1_1Util_1af7dd70e54015821d96e3a1afed6344ca" compoundref="d2/da9/rnd_8h" startline="176">Brush::Util::r</references>
        <references refid="d2/d2d/classBrush_1_1Util_1_1Rnd_1a5ec3a29d75a9154bbfdf3488db64fb69" compoundref="de/d67/rnd_8cpp" startline="121" endline="127">Brush::Util::Rnd::shuffled_index</references>
        <references refid="d9/d1c/namespaceBrush_1_1Data_1a6c00d36ba6aefd852544da96a089754a" compoundref="da/dc9/data_8cpp" startline="64" endline="67">Brush::Data::StateType</references>
        <references refid="d6/d2e/namespaceBrush_1_1Util_1ac697e701ef641df7a4cff481c667c9f7" compoundref="d5/d60/utils_8h" startline="602" endline="607">Brush::Util::unique_insert</references>
        <referencedby refid="d2/d36/classBrush_1_1Data_1_1Dataset_1aa9fa70bb9e8720a3b9ceafb9aa643df4" compoundref="d2/dbd/data_8h" startline="98" endline="111">Dataset</referencedby>
      </memberdef>
      <memberdef kind="function" id="d2/d36/classBrush_1_1Data_1_1Dataset_1ab709f6732a1854b45418e7f14dd759ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>map&lt; string, <ref refid="d9/d1c/namespaceBrush_1_1Data_1aeec1ea0d55dd44db207801471be4f09c" kindref="member">State</ref> &gt;</type>
        <definition>map&lt; string, State &gt; Brush::Data::Dataset::make_features</definition>
        <argsstring>(const ArrayXXf &amp;X, const map&lt; string, State &gt; &amp;Z={}, const vector&lt; string &gt; &amp;vn={})</argsstring>
        <name>make_features</name>
        <param>
          <type>const ArrayXXf &amp;</type>
          <declname>X</declname>
        </param>
        <param>
          <type>const map&lt; string, <ref refid="d9/d1c/namespaceBrush_1_1Data_1aeec1ea0d55dd44db207801471be4f09c" kindref="member">State</ref> &gt; &amp;</type>
          <declname>Z</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>const vector&lt; string &gt; &amp;</type>
          <declname>vn</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
<para>turns input data into a feature map </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="92" column="13" bodyfile="/home/runner/work/brush/brush/src/data/data.cpp" bodystart="224" bodyend="266"/>
        <references refid="d9/d1c/namespaceBrush_1_1Data_1a1087f7155f1e2855ed2821058b6ab036" compoundref="da/dc9/data_8cpp" startline="68" endline="104">Brush::Data::check_type</references>
        <references refid="da/d41/error_8h_1aa4c550bcd71e4ec1c97b111e1360509a" compoundref="da/d41/error_8h" startline="24">HANDLE_ERROR_THROW</references>
        <references refid="d6/d2e/namespaceBrush_1_1Util_1a9cd8004de7aab46b7a06f27d440064ed" compoundref="d5/d60/utils_8h" startline="321" endline="326">Brush::Util::to_string</references>
      </memberdef>
      <memberdef kind="function" id="d2/d36/classBrush_1_1Data_1_1Dataset_1aa9fa70bb9e8720a3b9ceafb9aa643df4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Brush::Data::Dataset::Dataset</definition>
        <argsstring>(std::map&lt; string, State &gt; &amp;d, const Ref&lt; const ArrayXf &gt; &amp;y_=ArrayXf(), bool c=false, float validation_size=0.0, float batch_size=1.0)</argsstring>
        <name>Dataset</name>
        <param>
          <type>std::map&lt; string, <ref refid="d9/d1c/namespaceBrush_1_1Data_1aeec1ea0d55dd44db207801471be4f09c" kindref="member">State</ref> &gt; &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type>const Ref&lt; const ArrayXf &gt; &amp;</type>
          <declname>y_</declname>
          <defval>ArrayXf()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>c</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>float</type>
          <declname>validation_size</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>float</type>
          <declname>batch_size</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><orderedlist>
<listitem><para>initialize data from a map. </para>
</listitem></orderedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="98" column="9" bodyfile="/home/runner/work/brush/brush/src/data/data.h" bodystart="98" bodyend="111"/>
        <references refid="d2/d36/classBrush_1_1Data_1_1Dataset_1aacd5afd19b9cee9d9d84e4290eeabb6f" compoundref="da/dc9/data_8cpp" startline="165" endline="215">init</references>
      </memberdef>
      <memberdef kind="function" id="d2/d36/classBrush_1_1Data_1_1Dataset_1ac99a56b161c19d868efc3317545b6ca2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Brush::Data::Dataset::Dataset</definition>
        <argsstring>(const ArrayXXf &amp;X, const Ref&lt; const ArrayXf &gt; &amp;y_=ArrayXf(), const vector&lt; string &gt; &amp;vn={}, const map&lt; string, State &gt; &amp;Z={}, bool c=false, float validation_size=0.0, float batch_size=1.0)</argsstring>
        <name>Dataset</name>
        <param>
          <type>const ArrayXXf &amp;</type>
          <declname>X</declname>
        </param>
        <param>
          <type>const Ref&lt; const ArrayXf &gt; &amp;</type>
          <declname>y_</declname>
          <defval>ArrayXf()</defval>
        </param>
        <param>
          <type>const vector&lt; string &gt; &amp;</type>
          <declname>vn</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>const map&lt; string, <ref refid="d9/d1c/namespaceBrush_1_1Data_1aeec1ea0d55dd44db207801471be4f09c" kindref="member">State</ref> &gt; &amp;</type>
          <declname>Z</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>c</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>float</type>
          <declname>validation_size</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>float</type>
          <declname>batch_size</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><orderedlist>
<listitem><para>initialize data from a matrix with feature columns. </para>
</listitem></orderedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="114" column="9" bodyfile="/home/runner/work/brush/brush/src/data/data.h" bodystart="114" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="d2/d36/classBrush_1_1Data_1_1Dataset_1ac8408acfe0af60124592299a1336166f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Brush::Data::Dataset::Dataset</definition>
        <argsstring>(const ArrayXXf &amp;X, const vector&lt; string &gt; &amp;vn, float validation_size=0.0, float batch_size=1.0)</argsstring>
        <name>Dataset</name>
        <param>
          <type>const ArrayXXf &amp;</type>
          <declname>X</declname>
        </param>
        <param>
          <type>const vector&lt; string &gt; &amp;</type>
          <declname>vn</declname>
        </param>
        <param>
          <type>float</type>
          <declname>validation_size</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>float</type>
          <declname>batch_size</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><orderedlist>
<listitem><para>initialize data from X and feature names </para>
</listitem></orderedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="135" column="9" bodyfile="/home/runner/work/brush/brush/src/data/data.h" bodystart="135" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="d2/d36/classBrush_1_1Data_1_1Dataset_1a59ec8554d617a4a99ba7feec09bdc62c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Brush::Data::Dataset::print</definition>
        <argsstring>() const</argsstring>
        <name>print</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="149" column="14" bodyfile="/home/runner/work/brush/brush/src/data/data.h" bodystart="149" bodyend="164"/>
        <references refid="d2/d36/classBrush_1_1Data_1_1Dataset_1a6edc04702aee605a766f4a79c375d0c6" compoundref="d2/dbd/data_8h" startline="183" endline="183">get_n_features</references>
        <references refid="d2/d36/classBrush_1_1Data_1_1Dataset_1a2b7b42b1b16630554b2e49102098a170" compoundref="d2/dbd/data_8h" startline="177" endline="182">get_n_samples</references>
        <references refid="d6/d2e/namespaceBrush_1_1Util_1a0fca88a717680a76c4b7b9b082675f89" compoundref="d5/d60/utils_8h" startline="455" endline="462">Brush::Util::print</references>
      </memberdef>
      <memberdef kind="function" id="d2/d36/classBrush_1_1Data_1_1Dataset_1a44ebc4ada574ea7a3a843ae74810aac9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Brush::Data::Dataset::get_X</definition>
        <argsstring>() const</argsstring>
        <name>get_X</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="165" column="14" bodyfile="/home/runner/work/brush/brush/src/data/data.h" bodystart="165" bodyend="170"/>
        <references refid="da/d41/error_8h_1aa4c550bcd71e4ec1c97b111e1360509a" compoundref="da/d41/error_8h" startline="24">HANDLE_ERROR_THROW</references>
        <references refid="d2/d36/classBrush_1_1Data_1_1Dataset_1a8a1a428f46a5c80322000f4bef0a09d4" compoundref="d2/dbd/data_8h" startline="76">Xref</references>
      </memberdef>
      <memberdef kind="function" id="d2/d36/classBrush_1_1Data_1_1Dataset_1ae69087b8c020840f254e3679cd324ba5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/d36/classBrush_1_1Data_1_1Dataset" kindref="compound">Dataset</ref></type>
        <definition>Dataset Brush::Data::Dataset::get_training_data</definition>
        <argsstring>() const</argsstring>
        <name>get_training_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="174" column="17" bodyfile="/home/runner/work/brush/brush/src/data/data.cpp" bodystart="160" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="d2/d36/classBrush_1_1Data_1_1Dataset_1a1ddb847fd1ceff63e60ffd79542409d9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/d36/classBrush_1_1Data_1_1Dataset" kindref="compound">Dataset</ref></type>
        <definition>Dataset Brush::Data::Dataset::get_validation_data</definition>
        <argsstring>() const</argsstring>
        <name>get_validation_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="175" column="17" bodyfile="/home/runner/work/brush/brush/src/data/data.cpp" bodystart="161" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="d2/d36/classBrush_1_1Data_1_1Dataset_1a2b7b42b1b16630554b2e49102098a170" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Brush::Data::Dataset::get_n_samples</definition>
        <argsstring>() const</argsstring>
        <name>get_n_samples</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="177" column="20" bodyfile="/home/runner/work/brush/brush/src/data/data.h" bodystart="177" bodyend="182"/>
        <references refid="d2/d36/classBrush_1_1Data_1_1Dataset_1a23f1c86e056b6806e7fa66c8fe6ea9ff" compoundref="d2/dbd/data_8h" startline="67">features</references>
        <referencedby refid="df/dc1/structBrush_1_1Operator_3_01NodeType_1_1Constant_00_01S_00_01Fit_01_4_1a1309f7a7253c0899447c91ebfee84a3a" compoundref="d7/de0/operator_8h" startline="297" endline="305">Brush::Operator&lt; NodeType::Constant, S, Fit &gt;::eval</referencedby>
        <referencedby refid="d2/d36/classBrush_1_1Data_1_1Dataset_1a59ec8554d617a4a99ba7feec09bdc62c" compoundref="d2/dbd/data_8h" startline="149" endline="164">print</referencedby>
      </memberdef>
      <memberdef kind="function" id="d2/d36/classBrush_1_1Data_1_1Dataset_1a6edc04702aee605a766f4a79c375d0c6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Brush::Data::Dataset::get_n_features</definition>
        <argsstring>() const</argsstring>
        <name>get_n_features</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="183" column="20" bodyfile="/home/runner/work/brush/brush/src/data/data.h" bodystart="183" bodyend="183"/>
        <referencedby refid="df/dc1/structBrush_1_1Operator_3_01NodeType_1_1Constant_00_01S_00_01Fit_01_4_1a1309f7a7253c0899447c91ebfee84a3a" compoundref="d7/de0/operator_8h" startline="297" endline="305">Brush::Operator&lt; NodeType::Constant, S, Fit &gt;::eval</referencedby>
        <referencedby refid="d2/d36/classBrush_1_1Data_1_1Dataset_1a59ec8554d617a4a99ba7feec09bdc62c" compoundref="d2/dbd/data_8h" startline="149" endline="164">print</referencedby>
      </memberdef>
      <memberdef kind="function" id="d2/d36/classBrush_1_1Data_1_1Dataset_1a5020e43def6267598be0ba3d2b46e616" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/d36/classBrush_1_1Data_1_1Dataset" kindref="compound">Dataset</ref></type>
        <definition>Dataset Brush::Data::Dataset::get_batch</definition>
        <argsstring>() const</argsstring>
        <name>get_batch</name>
        <briefdescription>
<para>select random subset of data for training weights. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="185" column="17" bodyfile="/home/runner/work/brush/brush/src/data/data.cpp" bodystart="133" bodyend="147"/>
        <references refid="d6/d2e/namespaceBrush_1_1Util_1af7dd70e54015821d96e3a1afed6344ca" compoundref="d2/da9/rnd_8h" startline="176">Brush::Util::r</references>
        <references refid="d2/d2d/classBrush_1_1Util_1_1Rnd_1a5ec3a29d75a9154bbfdf3488db64fb69" compoundref="de/d67/rnd_8cpp" startline="121" endline="127">Brush::Util::Rnd::shuffled_index</references>
      </memberdef>
      <memberdef kind="function" id="d2/d36/classBrush_1_1Data_1_1Dataset_1ade358be2a762f2a6df738a41fe1095b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Brush::Data::Dataset::get_batch_size</definition>
        <argsstring>()</argsstring>
        <name>get_batch_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="187" column="15" bodyfile="/home/runner/work/brush/brush/src/data/data.cpp" bodystart="217" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="d2/d36/classBrush_1_1Data_1_1Dataset_1afa07fa8dff0f8e01293509d6b7cc0dc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Brush::Data::Dataset::set_batch_size</definition>
        <argsstring>(float new_size)</argsstring>
        <name>set_batch_size</name>
        <param>
          <type>float</type>
          <declname>new_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="188" column="14" bodyfile="/home/runner/work/brush/brush/src/data/data.cpp" bodystart="218" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="d2/d36/classBrush_1_1Data_1_1Dataset_1ade5da9269ebc099385d6f79cf4a53f9f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::array&lt; <ref refid="d2/d36/classBrush_1_1Data_1_1Dataset" kindref="compound">Dataset</ref>, 2 &gt;</type>
        <definition>array&lt; Dataset, 2 &gt; Brush::Data::Dataset::split</definition>
        <argsstring>(const ArrayXb &amp;mask) const</argsstring>
        <name>split</name>
        <param>
          <type>const <ref refid="dc/d5c/namespaceBrush_1a1c0079df772d6e050857327591514810" kindref="member">ArrayXb</ref> &amp;</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="190" column="20" bodyfile="/home/runner/work/brush/brush/src/data/data.cpp" bodystart="149" bodyend="158"/>
        <references refid="d6/d2e/namespaceBrush_1_1Util_1afc397ee448b473fec9502461f3e75eae" compoundref="de/d06/utils_8cpp" startline="405" endline="415">Brush::Util::mask_to_index</references>
      </memberdef>
      <memberdef kind="function" id="d2/d36/classBrush_1_1Data_1_1Dataset_1a86f779c55c96ff7182b4e649f87fbf24" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d9/d1c/namespaceBrush_1_1Data_1aeec1ea0d55dd44db207801471be4f09c" kindref="member">State</ref></type>
        <definition>State Brush::Data::Dataset::operator[]</definition>
        <argsstring>(std::string name) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="192" column="15" bodyfile="/home/runner/work/brush/brush/src/data/data.h" bodystart="192" bodyend="197"/>
        <references refid="d2/d36/classBrush_1_1Data_1_1Dataset_1a23f1c86e056b6806e7fa66c8fe6ea9ff" compoundref="d2/dbd/data_8h" startline="67">features</references>
        <references refid="da/d41/error_8h_1aa4c550bcd71e4ec1c97b111e1360509a" compoundref="da/d41/error_8h" startline="24">HANDLE_ERROR_THROW</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>holds variable type data. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="9">
        <label>std::unordered_map&lt; DataType, vector&lt; string &gt; &gt;</label>
        <childnode refid="8" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>Brush::Data::Dataset</label>
        <link refid="d2/d36/classBrush_1_1Data_1_1Dataset"/>
        <childnode refid="2" relation="usage">
          <edgelabel>y</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>features</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>feature_types</edgelabel>
          <edgelabel>unique_data_types</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>features_of_type</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>training_data_idx</edgelabel>
          <edgelabel>validation_data_idx</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>std::vector&lt; DataType &gt;</label>
        <childnode refid="8" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>std::vector&lt; string &gt;</label>
        <childnode refid="5" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>ArrayXf</label>
      </node>
      <node id="6">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="8">
        <label>DataType</label>
      </node>
      <node id="4">
        <label>State</label>
      </node>
      <node id="11">
        <label>std::vector&lt; size_t &gt;</label>
      </node>
      <node id="3">
        <label>std::map&lt; string, State &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>std::string</label>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/brush/brush/src/data/data.h" line="46" column="1" bodyfile="/home/runner/work/brush/brush/src/data/data.h" bodystart="47" bodyend="200"/>
    <listofallmembers>
      <member refid="d2/d36/classBrush_1_1Data_1_1Dataset_1a6ac1f4f56991e43a782dd519c414916a" prot="public" virt="non-virtual"><scope>Brush::Data::Dataset</scope><name>batch_size</name></member>
      <member refid="d2/d36/classBrush_1_1Data_1_1Dataset_1a1a8a1e77afdecb032696bdf38e5c424c" prot="public" virt="non-virtual"><scope>Brush::Data::Dataset</scope><name>classification</name></member>
      <member refid="d2/d36/classBrush_1_1Data_1_1Dataset_1aa9fa70bb9e8720a3b9ceafb9aa643df4" prot="public" virt="non-virtual"><scope>Brush::Data::Dataset</scope><name>Dataset</name></member>
      <member refid="d2/d36/classBrush_1_1Data_1_1Dataset_1ac99a56b161c19d868efc3317545b6ca2" prot="public" virt="non-virtual"><scope>Brush::Data::Dataset</scope><name>Dataset</name></member>
      <member refid="d2/d36/classBrush_1_1Data_1_1Dataset_1ac8408acfe0af60124592299a1336166f" prot="public" virt="non-virtual"><scope>Brush::Data::Dataset</scope><name>Dataset</name></member>
      <member refid="d2/d36/classBrush_1_1Data_1_1Dataset_1a52d591cce797480e80f8cf1f1482702e" prot="public" virt="non-virtual"><scope>Brush::Data::Dataset</scope><name>feature_types</name></member>
      <member refid="d2/d36/classBrush_1_1Data_1_1Dataset_1a23f1c86e056b6806e7fa66c8fe6ea9ff" prot="public" virt="non-virtual"><scope>Brush::Data::Dataset</scope><name>features</name></member>
      <member refid="d2/d36/classBrush_1_1Data_1_1Dataset_1a652aba735323fddf7bf79407e7e4fc83" prot="public" virt="non-virtual"><scope>Brush::Data::Dataset</scope><name>features_of_type</name></member>
      <member refid="d2/d36/classBrush_1_1Data_1_1Dataset_1a5020e43def6267598be0ba3d2b46e616" prot="public" virt="non-virtual"><scope>Brush::Data::Dataset</scope><name>get_batch</name></member>
      <member refid="d2/d36/classBrush_1_1Data_1_1Dataset_1ade358be2a762f2a6df738a41fe1095b5" prot="public" virt="non-virtual"><scope>Brush::Data::Dataset</scope><name>get_batch_size</name></member>
      <member refid="d2/d36/classBrush_1_1Data_1_1Dataset_1a6edc04702aee605a766f4a79c375d0c6" prot="public" virt="non-virtual"><scope>Brush::Data::Dataset</scope><name>get_n_features</name></member>
      <member refid="d2/d36/classBrush_1_1Data_1_1Dataset_1a2b7b42b1b16630554b2e49102098a170" prot="public" virt="non-virtual"><scope>Brush::Data::Dataset</scope><name>get_n_samples</name></member>
      <member refid="d2/d36/classBrush_1_1Data_1_1Dataset_1ae69087b8c020840f254e3679cd324ba5" prot="public" virt="non-virtual"><scope>Brush::Data::Dataset</scope><name>get_training_data</name></member>
      <member refid="d2/d36/classBrush_1_1Data_1_1Dataset_1a1ddb847fd1ceff63e60ffd79542409d9" prot="public" virt="non-virtual"><scope>Brush::Data::Dataset</scope><name>get_validation_data</name></member>
      <member refid="d2/d36/classBrush_1_1Data_1_1Dataset_1a44ebc4ada574ea7a3a843ae74810aac9" prot="public" virt="non-virtual"><scope>Brush::Data::Dataset</scope><name>get_X</name></member>
      <member refid="d2/d36/classBrush_1_1Data_1_1Dataset_1aacd5afd19b9cee9d9d84e4290eeabb6f" prot="public" virt="non-virtual"><scope>Brush::Data::Dataset</scope><name>init</name></member>
      <member refid="d2/d36/classBrush_1_1Data_1_1Dataset_1ab709f6732a1854b45418e7f14dd759ea" prot="public" virt="non-virtual"><scope>Brush::Data::Dataset</scope><name>make_features</name></member>
      <member refid="d2/d36/classBrush_1_1Data_1_1Dataset_1afa676d96150281b2384a07e4a3fcc352" prot="public" virt="non-virtual"><scope>Brush::Data::Dataset</scope><name>operator()</name></member>
      <member refid="d2/d36/classBrush_1_1Data_1_1Dataset_1a86f779c55c96ff7182b4e649f87fbf24" prot="public" virt="non-virtual"><scope>Brush::Data::Dataset</scope><name>operator[]</name></member>
      <member refid="d2/d36/classBrush_1_1Data_1_1Dataset_1a59ec8554d617a4a99ba7feec09bdc62c" prot="public" virt="non-virtual"><scope>Brush::Data::Dataset</scope><name>print</name></member>
      <member refid="d2/d36/classBrush_1_1Data_1_1Dataset_1afa07fa8dff0f8e01293509d6b7cc0dc3" prot="public" virt="non-virtual"><scope>Brush::Data::Dataset</scope><name>set_batch_size</name></member>
      <member refid="d2/d36/classBrush_1_1Data_1_1Dataset_1ade5da9269ebc099385d6f79cf4a53f9f" prot="public" virt="non-virtual"><scope>Brush::Data::Dataset</scope><name>split</name></member>
      <member refid="d2/d36/classBrush_1_1Data_1_1Dataset_1a4112a2cb86ce4138c3c4bea966c96b65" prot="private" virt="non-virtual"><scope>Brush::Data::Dataset</scope><name>training_data_idx</name></member>
      <member refid="d2/d36/classBrush_1_1Data_1_1Dataset_1a96fc30b35f152f425377e1ae34398779" prot="public" virt="non-virtual"><scope>Brush::Data::Dataset</scope><name>unique_data_types</name></member>
      <member refid="d2/d36/classBrush_1_1Data_1_1Dataset_1a8cba7a5f962538d67012264fb6c97ed4" prot="public" virt="non-virtual"><scope>Brush::Data::Dataset</scope><name>use_batch</name></member>
      <member refid="d2/d36/classBrush_1_1Data_1_1Dataset_1a6cadfbd9f8a4700361e63defb7d6f6e0" prot="public" virt="non-virtual"><scope>Brush::Data::Dataset</scope><name>use_validation</name></member>
      <member refid="d2/d36/classBrush_1_1Data_1_1Dataset_1ab8f3010fa3099efe3aac8fcd3140faf6" prot="private" virt="non-virtual"><scope>Brush::Data::Dataset</scope><name>validation_data_idx</name></member>
      <member refid="d2/d36/classBrush_1_1Data_1_1Dataset_1aae2b4b532ccc55a95f65b75a5cd9e176" prot="public" virt="non-virtual"><scope>Brush::Data::Dataset</scope><name>validation_size</name></member>
      <member refid="d2/d36/classBrush_1_1Data_1_1Dataset_1a8a1a428f46a5c80322000f4bef0a09d4" prot="public" virt="non-virtual"><scope>Brush::Data::Dataset</scope><name>Xref</name></member>
      <member refid="d2/d36/classBrush_1_1Data_1_1Dataset_1ade105f069d4f745d44374b7b8a3a9b0d" prot="public" virt="non-virtual"><scope>Brush::Data::Dataset</scope><name>y</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
