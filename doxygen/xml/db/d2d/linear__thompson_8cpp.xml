<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="db/d2d/linear__thompson_8cpp" kind="file" language="C++">
    <compoundname>linear_thompson.cpp</compoundname>
    <includes refid="d9/df5/linear__thompson_8h" local="yes">linear_thompson.h</includes>
    <includedby refid="d8/df7/bind__variation_8h" local="yes">bind_variation.h</includedby>
    <incdepgraph>
      <node id="50">
        <label>../../thirdparty/tree.hh</label>
      </node>
      <node id="3">
        <label>bandit_operator.h</label>
        <link refid="da/d8e/bandit__operator_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>linear_thompson.cpp</label>
        <link refid="db/d2d/linear__thompson_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>linear_thompson.h</label>
        <link refid="d9/df5/linear__thompson_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>../data/data.h</label>
        <link refid="d2/dbd/data_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>timeseries.h</label>
        <link refid="d9/df7/timeseries_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>../ind/fitness.h</label>
        <link refid="dc/d7a/fitness_8h"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>../init.h</label>
        <link refid="d8/dc0/init_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>../params.h</label>
        <link refid="da/d33/params_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>dispatch_table.h</label>
        <link refid="df/d61/dispatch__table_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>functions.h</label>
        <link refid="d8/d5c/functions_8h"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>node.h</label>
        <link refid="d1/d77/node_8h"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>nodetype.h</label>
        <link refid="de/d26/nodetype_8h"/>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>signatures.h</label>
        <link refid="d8/d8b/signatures_8h"/>
      </node>
      <node id="33">
        <label>../program/tree_node.h</label>
        <link refid="d1/da6/tree__node_8h"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>types.h</label>
        <link refid="d9/d49/types_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>error.h</label>
        <link refid="da/d41/error_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>util/logger.h</label>
        <link refid="d1/d8c/logger_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>../util/rnd.h</label>
        <link refid="d2/da9/rnd_8h"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>util/utils.h</label>
        <link refid="d5/d60/utils_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>Eigen/Dense</label>
      </node>
      <node id="43">
        <label>bitset</label>
      </node>
      <node id="54">
        <label>boost/math/distributions/gamma.hpp</label>
      </node>
      <node id="21">
        <label>ceres/jet.h</label>
      </node>
      <node id="26">
        <label>chrono</label>
      </node>
      <node id="48">
        <label>cmath</label>
      </node>
      <node id="22">
        <label>concepts</label>
      </node>
      <node id="52">
        <label>cstddef</label>
      </node>
      <node id="31">
        <label>execution</label>
      </node>
      <node id="16">
        <label>fmt/format.h</label>
      </node>
      <node id="15">
        <label>fmt/ostream.h</label>
      </node>
      <node id="17">
        <label>fmt/ranges.h</label>
      </node>
      <node id="9">
        <label>fstream</label>
      </node>
      <node id="49">
        <label>functional</label>
      </node>
      <node id="8">
        <label>iostream</label>
      </node>
      <node id="30">
        <label>iterator</label>
      </node>
      <node id="38">
        <label>limits</label>
      </node>
      <node id="11">
        <label>map</label>
      </node>
      <node id="7">
        <label>memory</label>
      </node>
      <node id="18">
        <label>nlohmann/json.hpp</label>
      </node>
      <node id="10">
        <label>numeric</label>
      </node>
      <node id="40">
        <label>optional</label>
      </node>
      <node id="27">
        <label>ostream</label>
      </node>
      <node id="37">
        <label>random</label>
      </node>
      <node id="12">
        <label>set</label>
      </node>
      <node id="5">
        <label>stdint.h</label>
      </node>
      <node id="14">
        <label>string</label>
      </node>
      <node id="32">
        <label>tuple</label>
      </node>
      <node id="44">
        <label>type_traits</label>
      </node>
      <node id="29">
        <label>typeindex</label>
      </node>
      <node id="34">
        <label>unordered_map</label>
      </node>
      <node id="45">
        <label>utility</label>
      </node>
      <node id="20">
        <label>variant</label>
      </node>
      <node id="13">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>linear_thompson.cpp</label>
        <link refid="db/d2d/linear__thompson_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>bind_variation.cpp</label>
        <link refid="df/d41/bind__variation_8cpp"/>
      </node>
      <node id="2">
        <label>bind_variation.h</label>
        <link refid="d8/df7/bind__variation_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innernamespace refid="dc/d5c/namespaceBrush">Brush</innernamespace>
    <innernamespace refid="da/d94/namespaceBrush_1_1MAB">Brush::MAB</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d9/df5/linear__thompson_8h" kindref="compound">linear_thompson.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="dc/d5c/namespaceBrush" kindref="compound">Brush</ref><sp/>{</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="da/d94/namespaceBrush_1_1MAB" kindref="compound">MAB</ref><sp/>{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="7" refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a2bd0d7f8c8b66c9f496b61eab5162c52" refkind="member"><highlight class="normal"><ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a2bd0d7f8c8b66c9f496b61eab5162c52" kindref="member">LinearThompsonSamplingBandit&lt;T&gt;::LinearThompsonSamplingBandit</ref>(vector&lt;T&gt;<sp/>arms)</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="df/dde/classBrush_1_1MAB_1_1BanditOperator_1a7ab649ed7a9fde167743426d98e6d8e3" kindref="member">BanditOperator</ref>&lt;T&gt;(arms)</highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a83fc3b17b578fd142e7a133f7577b9c1" kindref="member">n_arms</ref><sp/>=<sp/>arms.size();</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>Eigen<sp/>matrices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1aad6f4d0116ad438722227a489489af92" kindref="member">arm_index_to_key</ref>.resize(0);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a484e952555e3341bc76fbf8464d38b91" kindref="member">B</ref>.resize(0);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a28cb0fe52e3b5a4d4ab535a4f49da007" kindref="member">B_inv</ref>.resize(0);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a9f5ab2b4048b75e78910418a31f6f2d6" kindref="member">B_inv_sqrt</ref>.resize(0);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a5e168e18791717f56a55761abdbbb827" kindref="member">m2_r</ref><sp/>=<sp/>MatrixXf::Zero(<ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a83fc3b17b578fd142e7a133f7577b9c1" kindref="member">n_arms</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a1eddae63d888c3833d86f4b48ebabd46" kindref="member">mean</ref><sp/>=<sp/>MatrixXf::Zero(<ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a83fc3b17b578fd142e7a133f7577b9c1" kindref="member">n_arms</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a83fc3b17b578fd142e7a133f7577b9c1" kindref="member">n_arms</ref>;<sp/>++i)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>one<sp/>for<sp/>each<sp/>arm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1aad6f4d0116ad438722227a489489af92" kindref="member">arm_index_to_key</ref>[i]<sp/>=<sp/>arms[i];</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="27" refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a093105d297be747cdbbd0d5a0f6363dd" refkind="member"><highlight class="normal"><ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a2bd0d7f8c8b66c9f496b61eab5162c52" kindref="member">LinearThompsonSamplingBandit&lt;T&gt;::LinearThompsonSamplingBandit</ref>(map&lt;T,<sp/>float&gt;<sp/>arms_probs)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="df/dde/classBrush_1_1MAB_1_1BanditOperator_1a7ab649ed7a9fde167743426d98e6d8e3" kindref="member">BanditOperator</ref>&lt;T&gt;(arms_probs)</highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a83fc3b17b578fd142e7a133f7577b9c1" kindref="member">n_arms</ref><sp/>=<sp/>arms_probs.size();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a484e952555e3341bc76fbf8464d38b91" kindref="member">B</ref>.resize(0);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a28cb0fe52e3b5a4d4ab535a4f49da007" kindref="member">B_inv</ref>.resize(0);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a9f5ab2b4048b75e78910418a31f6f2d6" kindref="member">B_inv_sqrt</ref>.resize(0);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a5e168e18791717f56a55761abdbbb827" kindref="member">m2_r</ref><sp/>=<sp/>MatrixXf::Zero(<ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a83fc3b17b578fd142e7a133f7577b9c1" kindref="member">n_arms</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a1eddae63d888c3833d86f4b48ebabd46" kindref="member">mean</ref><sp/>=<sp/>MatrixXf::Zero(<ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a83fc3b17b578fd142e7a133f7577b9c1" kindref="member">n_arms</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>pair<sp/>:<sp/>arms_probs)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>making<sp/>sure<sp/>we<sp/>have<sp/>the<sp/>same<sp/>order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1aad6f4d0116ad438722227a489489af92" kindref="member">arm_index_to_key</ref>[index++]<sp/>=<sp/>pair.first;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal">};</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="47" refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1ab34b8398265597de0bf6111cd6f4e2cf" refkind="member"><highlight class="normal">std::map&lt;T,<sp/>float&gt;<sp/><ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1ab34b8398265597de0bf6111cd6f4e2cf" kindref="member">LinearThompsonSamplingBandit&lt;T&gt;::sample_probs</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a04b009f72a2707924d2da4dbeb0f6d5a" kindref="member">update</ref>)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cout<sp/>&lt;&lt;<sp/>&quot;sampling<sp/>probs<sp/>started&quot;<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a04b009f72a2707924d2da4dbeb0f6d5a" kindref="member">update</ref><sp/>&amp;&amp;<sp/><ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a484e952555e3341bc76fbf8464d38b91" kindref="member">B</ref>.size()&gt;0)<sp/></highlight><highlight class="comment">//<sp/>must<sp/>be<sp/>called<sp/>after<sp/>at<sp/>least<sp/>one<sp/>choose</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>context_size<sp/>=<sp/><ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a484e952555e3341bc76fbf8464d38b91" kindref="member">B</ref>.at(0).rows();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MatrixXf<sp/>w(<ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a83fc3b17b578fd142e7a133f7577b9c1" kindref="member">n_arms</ref>,<sp/>context_size);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MatrixXf<sp/><ref refid="d6/d2e/namespaceBrush_1_1Util_1af7dd70e54015821d96e3a1afed6344ca" kindref="member">r</ref><sp/>=<sp/>MatrixXf::Random(<ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a83fc3b17b578fd142e7a133f7577b9c1" kindref="member">n_arms</ref>,<sp/>context_size);<sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>use<sp/>random<sp/>generator<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a83fc3b17b578fd142e7a133f7577b9c1" kindref="member">n_arms</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w.row(i)<sp/>=<sp/><ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a9f5ab2b4048b75e78910418a31f6f2d6" kindref="member">B_inv_sqrt</ref>[i]<sp/>*<sp/><ref refid="d6/d2e/namespaceBrush_1_1Util_1af7dd70e54015821d96e3a1afed6344ca" kindref="member">r</ref>.row(i);<sp/></highlight><highlight class="comment">//<sp/>mat<sp/>mul</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>=<sp/><ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a1eddae63d888c3833d86f4b48ebabd46" kindref="member">mean</ref><sp/>+<sp/>w;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VectorXf<sp/>u(<ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a83fc3b17b578fd142e7a133f7577b9c1" kindref="member">n_arms</ref>);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VectorXf<sp/>last_context<sp/>=<sp/>ArrayXf::Random(context_size);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u<sp/>=<sp/>w<sp/>*<sp/>last_context;<sp/></highlight><highlight class="comment">//<sp/>mat<sp/>mul</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>total_prob<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a83fc3b17b578fd142e7a133f7577b9c1" kindref="member">n_arms</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>prob<sp/>=<sp/>std::exp(u(i))<sp/>/<sp/>std::exp(u.maxCoeff());</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="df/dde/classBrush_1_1MAB_1_1BanditOperator_1a9b732dfe2c3292ce4c420e5a66ff33c6" kindref="member">probabilities</ref>[<ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1aad6f4d0116ad438722227a489489af92" kindref="member">arm_index_to_key</ref>[i]]<sp/>=<sp/>prob;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_prob<sp/>+=<sp/>prob;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(total_prob<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Total<sp/>probability<sp/>must<sp/>be<sp/>greater<sp/>than<sp/>zero&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Normalize<sp/>probabilities<sp/>to<sp/>ensure<sp/>they<sp/>sum<sp/>to<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>[k,<sp/>v]<sp/>:<sp/>this-&gt;<ref refid="df/dde/classBrush_1_1MAB_1_1BanditOperator_1a9b732dfe2c3292ce4c420e5a66ff33c6" kindref="member">probabilities</ref>)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;probabilities[k]<sp/>=<sp/>std::min(this-&gt;probabilities[k],<sp/>1.0f);<sp/></highlight><highlight class="comment">//<sp/>/<sp/>total_prob</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="df/dde/classBrush_1_1MAB_1_1BanditOperator_1a9b732dfe2c3292ce4c420e5a66ff33c6" kindref="member">probabilities</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cout<sp/>&lt;&lt;<sp/>&quot;sampling<sp/>probs<sp/>finished&quot;<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="87" refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1ad714bc78451d66dcb7499c29463cffaf" refkind="member"><highlight class="normal">T<sp/><ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1ad714bc78451d66dcb7499c29463cffaf" kindref="member">LinearThompsonSamplingBandit&lt;T&gt;::choose</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VectorXf&amp;<sp/>context)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>context_size<sp/>=<sp/>context.size();</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a484e952555e3341bc76fbf8464d38b91" kindref="member">B</ref>.size()==0){</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cout<sp/>&lt;&lt;<sp/>&quot;INITIALIZING<sp/>BANDIT<sp/>&quot;<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a83fc3b17b578fd142e7a133f7577b9c1" kindref="member">n_arms</ref>;<sp/>++i)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>one<sp/>for<sp/>each<sp/>arm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a484e952555e3341bc76fbf8464d38b91" kindref="member">B</ref>.push_back(<sp/>MatrixXf::Identity(context_size,<sp/>context_size)<sp/>);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a28cb0fe52e3b5a4d4ab535a4f49da007" kindref="member">B_inv</ref>.push_back(<sp/>MatrixXf::Identity(context_size,<sp/>context_size)<sp/>);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a9f5ab2b4048b75e78910418a31f6f2d6" kindref="member">B_inv_sqrt</ref>.push_back(<sp/>MatrixXf::Identity(context_size,<sp/>context_size)<sp/>);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a5e168e18791717f56a55761abdbbb827" kindref="member">m2_r</ref><sp/>=<sp/>MatrixXf::Zero(<ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a83fc3b17b578fd142e7a133f7577b9c1" kindref="member">n_arms</ref>,<sp/>context_size);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a1eddae63d888c3833d86f4b48ebabd46" kindref="member">mean</ref><sp/>=<sp/>MatrixXf::Zero(<ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a83fc3b17b578fd142e7a133f7577b9c1" kindref="member">n_arms</ref>,<sp/>context_size);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>MatrixXf<sp/>w(<ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a83fc3b17b578fd142e7a133f7577b9c1" kindref="member">n_arms</ref>,<sp/>context_size);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>MatrixXf<sp/><ref refid="d6/d2e/namespaceBrush_1_1Util_1af7dd70e54015821d96e3a1afed6344ca" kindref="member">r</ref><sp/>=<sp/>MatrixXf::Random(<ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a83fc3b17b578fd142e7a133f7577b9c1" kindref="member">n_arms</ref>,<sp/>context_size);<sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>use<sp/>random<sp/>generator<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a83fc3b17b578fd142e7a133f7577b9c1" kindref="member">n_arms</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w.row(i)<sp/>=<sp/><ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a9f5ab2b4048b75e78910418a31f6f2d6" kindref="member">B_inv_sqrt</ref>[i]<sp/>*<sp/><ref refid="d6/d2e/namespaceBrush_1_1Util_1af7dd70e54015821d96e3a1afed6344ca" kindref="member">r</ref>.row(i);<sp/></highlight><highlight class="comment">//<sp/>mat<sp/>mul</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>w<sp/>=<sp/><ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a1eddae63d888c3833d86f4b48ebabd46" kindref="member">mean</ref><sp/>+<sp/>w;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cout<sp/>&lt;&lt;<sp/>&quot;w:<sp/>&quot;<sp/>&lt;&lt;<sp/>w<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>VectorXf<sp/>u(<ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a83fc3b17b578fd142e7a133f7577b9c1" kindref="member">n_arms</ref>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>u<sp/>=<sp/>w<sp/>*<sp/>context;<sp/></highlight><highlight class="comment">//<sp/>mat<sp/>mul</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cout<sp/>&lt;&lt;<sp/>&quot;u:<sp/>&quot;<sp/>&lt;&lt;<sp/>u<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Index<sp/>max_index;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>max_value<sp/>=<sp/>u.maxCoeff(&amp;max_index);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cout<sp/>&lt;&lt;<sp/>&quot;max_index:<sp/>&quot;<sp/>&lt;&lt;<sp/>max_index<sp/>&lt;&lt;<sp/>&quot;,<sp/>max_value:<sp/>&quot;<sp/>&lt;&lt;<sp/>max_value<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cout<sp/>&lt;&lt;<sp/>&quot;choose<sp/>finished&quot;<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1aad6f4d0116ad438722227a489489af92" kindref="member">arm_index_to_key</ref>[max_index];</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="125" refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a04b009f72a2707924d2da4dbeb0f6d5a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a04b009f72a2707924d2da4dbeb0f6d5a" kindref="member">LinearThompsonSamplingBandit&lt;T&gt;::update</ref>(T<sp/>arm,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>reward,<sp/>VectorXf&amp;<sp/>context)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>context_size<sp/>=<sp/>context.size();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a484e952555e3341bc76fbf8464d38b91" kindref="member">B</ref>.size()==0){</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cout<sp/>&lt;&lt;<sp/>&quot;INITIALIZING<sp/>BANDIT<sp/>&quot;<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a83fc3b17b578fd142e7a133f7577b9c1" kindref="member">n_arms</ref>;<sp/>++i)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>one<sp/>for<sp/>each<sp/>arm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a484e952555e3341bc76fbf8464d38b91" kindref="member">B</ref>.push_back(<sp/>MatrixXf::Identity(context_size,<sp/>context_size)<sp/>);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a28cb0fe52e3b5a4d4ab535a4f49da007" kindref="member">B_inv</ref>.push_back(<sp/>MatrixXf::Identity(context_size,<sp/>context_size)<sp/>);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a9f5ab2b4048b75e78910418a31f6f2d6" kindref="member">B_inv_sqrt</ref>.push_back(<sp/>MatrixXf::Identity(context_size,<sp/>context_size)<sp/>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a5e168e18791717f56a55761abdbbb827" kindref="member">m2_r</ref><sp/>=<sp/>MatrixXf::Zero(<ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a83fc3b17b578fd142e7a133f7577b9c1" kindref="member">n_arms</ref>,<sp/>context_size);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a1eddae63d888c3833d86f4b48ebabd46" kindref="member">mean</ref><sp/>=<sp/>MatrixXf::Zero(<ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a83fc3b17b578fd142e7a133f7577b9c1" kindref="member">n_arms</ref>,<sp/>context_size);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>have<sp/>a<sp/>more<sp/>efficient<sp/>way<sp/>of<sp/>doing<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>arm<sp/>index<sp/>using<sp/>our<sp/>mapping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>std::find_if(<ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1aad6f4d0116ad438722227a489489af92" kindref="member">arm_index_to_key</ref>.begin(),<sp/><ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1aad6f4d0116ad438722227a489489af92" kindref="member">arm_index_to_key</ref>.end(),</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[&amp;arm](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>pair)<sp/>{<sp/>return<sp/>pair.second<sp/>==<sp/>arm;<sp/>});</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/><ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1aad6f4d0116ad438722227a489489af92" kindref="member">arm_index_to_key</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(</highlight><highlight class="stringliteral">&quot;Arm<sp/>not<sp/>found<sp/>in<sp/>the<sp/>arm_index_to_key<sp/>map&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arm_index<sp/>=<sp/>it-&gt;first;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cout<sp/>&lt;&lt;<sp/>&quot;Arm<sp/>index:<sp/>&quot;<sp/>&lt;&lt;<sp/>arm_index<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cout<sp/>&lt;&lt;<sp/>&quot;Context:<sp/>&quot;<sp/>&lt;&lt;<sp/>context.size()<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cout<sp/>&lt;&lt;<sp/>&quot;B[arm_index]<sp/>before<sp/>update:<sp/>&quot;<sp/>&lt;&lt;<sp/>B[arm_index].size()<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cout<sp/>&lt;&lt;<sp/>&quot;m2_r.row(arm_index)<sp/>before<sp/>update:<sp/>&quot;<sp/>&lt;&lt;<sp/>m2_r.row(arm_index).size()<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a484e952555e3341bc76fbf8464d38b91" kindref="member">B</ref>[arm_index]<sp/>+=<sp/>context<sp/>*<sp/>context.transpose();</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cout<sp/>&lt;&lt;<sp/>&quot;B[arm_index]<sp/>after<sp/>update:<sp/>&quot;<sp/>&lt;&lt;<sp/>B[arm_index].size()<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a5e168e18791717f56a55761abdbbb827" kindref="member">m2_r</ref>.row(arm_index)<sp/>+=<sp/>(context<sp/>*<sp/>reward).transpose();</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cout<sp/>&lt;&lt;<sp/>&quot;m2_r.row(arm_index)<sp/>after<sp/>update:<sp/>&quot;<sp/>&lt;&lt;<sp/>m2_r.row(arm_index).size()<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a28cb0fe52e3b5a4d4ab535a4f49da007" kindref="member">B_inv</ref>[arm_index]<sp/>=<sp/><ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a484e952555e3341bc76fbf8464d38b91" kindref="member">B</ref>[arm_index].inverse();</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cout<sp/>&lt;&lt;<sp/>&quot;B_inv[arm_index]:<sp/>&quot;<sp/>&lt;&lt;<sp/>B_inv[arm_index].size()<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a9f5ab2b4048b75e78910418a31f6f2d6" kindref="member">B_inv_sqrt</ref>[arm_index]<sp/>=<sp/><ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a28cb0fe52e3b5a4d4ab535a4f49da007" kindref="member">B_inv</ref>[arm_index].ldlt().matrixL();</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cout<sp/>&lt;&lt;<sp/>&quot;B_inv_sqrt[arm_index]:<sp/>&quot;<sp/>&lt;&lt;<sp/>B_inv_sqrt[arm_index].size()<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a1eddae63d888c3833d86f4b48ebabd46" kindref="member">mean</ref>.row(arm_index)<sp/>=<sp/><ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a28cb0fe52e3b5a4d4ab535a4f49da007" kindref="member">B_inv</ref>[arm_index]<sp/>*<sp/><ref refid="d1/d67/classBrush_1_1MAB_1_1LinearThompsonSamplingBandit_1a5e168e18791717f56a55761abdbbb827" kindref="member">m2_r</ref>.row(arm_index).transpose();<sp/></highlight><highlight class="comment">//<sp/>mat<sp/>mul</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cout<sp/>&lt;&lt;<sp/>&quot;mean.row(arm_index):<sp/>&quot;<sp/>&lt;&lt;<sp/>mean.row(arm_index).size()<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cout<sp/>&lt;&lt;<sp/>&quot;update<sp/>finished&quot;<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>MAB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>Brush</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/brush/brush/src/bandit/linear_thompson.cpp"/>
  </compounddef>
</doxygen>
