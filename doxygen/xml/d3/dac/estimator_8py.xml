<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="d3/dac/estimator_8py" kind="file" language="Python">
    <compoundname>estimator.py</compoundname>
    <innerclass refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator" prot="public">brush::estimator::BrushEstimator</innerclass>
    <innerclass refid="d0/d6a/classbrush_1_1estimator_1_1BrushClassifier" prot="public">brush::estimator::BrushClassifier</innerclass>
    <innerclass refid="da/d81/classbrush_1_1estimator_1_1BrushRegressor" prot="public">brush::estimator::BrushRegressor</innerclass>
    <innernamespace refid="d9/dbc/namespacebrush_1_1estimator">brush::estimator</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="d9/dbc/namespacebrush_1_1estimator" refkind="compound"><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="2"><highlight class="stringliteral">sklearn-compatible<sp/>wrapper<sp/>for<sp/>GP<sp/>analyses.</highlight></codeline>
<codeline lineno="3"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="4"><highlight class="stringliteral">See<sp/>brushgp.cpp<sp/>for<sp/>Python<sp/>(via<sp/>pybind11)<sp/>modules<sp/>that<sp/>give<sp/>more<sp/>fine-grained</highlight></codeline>
<codeline lineno="5"><highlight class="stringliteral">control<sp/>of<sp/>the<sp/>underlying<sp/>GP<sp/>objects.</highlight></codeline>
<codeline lineno="6"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>sklearn.base<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>BaseEstimator,<sp/>ClassifierMixin,<sp/>RegressorMixin,<sp/>TransformerMixin</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#<sp/>from<sp/>sklearn.metrics<sp/>import<sp/>mean_squared_error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>pandas<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>pd</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">#<sp/>import<sp/>deap<sp/>as<sp/>dp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>deap<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>algorithms,<sp/>base,<sp/>creator,<sp/>tools</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">#<sp/>from<sp/>tqdm<sp/>import<sp/>tqdm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>types<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>NoneType</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>_brush</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.deap_api<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>nsga2,<sp/>DeapIndividual<sp/></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">#<sp/>from<sp/>_brush<sp/>import<sp/>Dataset,<sp/>SearchSpace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator" kindref="compound">BrushEstimator</ref>(BaseEstimator):</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="22"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>This<sp/>is<sp/>the<sp/>base<sp/>class<sp/>for<sp/>Brush<sp/>estimators.<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>This<sp/>class<sp/>shouldn&apos;t<sp/>be<sp/>called<sp/>directly;<sp/>instead,<sp/>call<sp/>a<sp/>child<sp/>class<sp/>like<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:py:class:`BrushRegressor<sp/>&lt;brush.estimator.BrushRegressor&gt;`<sp/>or<sp/>:py:class:`BrushClassifier<sp/>&lt;brush.estimator.BrushClassifier&gt;`.<sp/></highlight></codeline>
<codeline lineno="25"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>All<sp/>of<sp/>the<sp/>shared<sp/>parameters<sp/>are<sp/>documented<sp/>here.<sp/></highlight></codeline>
<codeline lineno="26"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="27"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="28"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="29"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>mode<sp/>:<sp/>str,<sp/>default<sp/>&apos;classification&apos;</highlight></codeline>
<codeline lineno="30"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>mode<sp/>of<sp/>the<sp/>estimator.<sp/>Used<sp/>by<sp/>subclasses</highlight></codeline>
<codeline lineno="31"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>pop_size<sp/>:<sp/>int,<sp/>default<sp/>100</highlight></codeline>
<codeline lineno="32"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Population<sp/>size.</highlight></codeline>
<codeline lineno="33"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>max_gen<sp/>:<sp/>int,<sp/>default<sp/>100</highlight></codeline>
<codeline lineno="34"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Maximum<sp/>iterations<sp/>of<sp/>the<sp/>algorithm.</highlight></codeline>
<codeline lineno="35"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>verbosity<sp/>:<sp/>int,<sp/>default<sp/>0</highlight></codeline>
<codeline lineno="36"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Controls<sp/>level<sp/>of<sp/>printouts.</highlight></codeline>
<codeline lineno="37"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>max_depth<sp/>:<sp/>int,<sp/>default<sp/>0</highlight></codeline>
<codeline lineno="38"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Maximum<sp/>depth<sp/>of<sp/>GP<sp/>trees<sp/>in<sp/>the<sp/>GP<sp/>program.<sp/>Use<sp/>0<sp/>for<sp/>no<sp/>limit.</highlight></codeline>
<codeline lineno="39"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>max_size<sp/>:<sp/>int,<sp/>default<sp/>0</highlight></codeline>
<codeline lineno="40"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Maximum<sp/>number<sp/>of<sp/>nodes<sp/>in<sp/>a<sp/>tree.<sp/>Use<sp/>0<sp/>for<sp/>no<sp/>limit.</highlight></codeline>
<codeline lineno="41"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>cx_prob<sp/>:<sp/>float,<sp/>default<sp/>1/7</highlight></codeline>
<codeline lineno="42"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Probability<sp/>of<sp/>applying<sp/>the<sp/>crossover<sp/>variation<sp/>when<sp/>generating<sp/>the<sp/>offspring,</highlight></codeline>
<codeline lineno="43"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>must<sp/>be<sp/>between<sp/>0<sp/>and<sp/>1.</highlight></codeline>
<codeline lineno="44"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Given<sp/>that<sp/>there<sp/>are<sp/>`n`<sp/>mutations,<sp/>and<sp/>either<sp/>crossover<sp/>or<sp/>mutation<sp/>is<sp/></highlight></codeline>
<codeline lineno="45"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>used<sp/>to<sp/>generate<sp/>each<sp/>individual<sp/>in<sp/>the<sp/>offspring<sp/>(but<sp/>not<sp/>both<sp/>at<sp/>the</highlight></codeline>
<codeline lineno="46"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>same<sp/>time),<sp/>we<sp/>want<sp/>to<sp/>have<sp/>by<sp/>default<sp/>an<sp/>uniform<sp/>probability<sp/>between</highlight></codeline>
<codeline lineno="47"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crossover<sp/>and<sp/>every<sp/>possible<sp/>mutation.<sp/>By<sp/>setting<sp/>`cx_prob=1/(n+1)`,<sp/>and</highlight></codeline>
<codeline lineno="48"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>`1/n`<sp/>for<sp/>each<sp/>mutation,<sp/>we<sp/>can<sp/>achieve<sp/>an<sp/>uniform<sp/>distribution.</highlight></codeline>
<codeline lineno="49"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>mutation_options<sp/>:<sp/>dict,<sp/>default<sp/>{&quot;point&quot;:1/6,<sp/>&quot;insert&quot;:1/6,<sp/>&quot;delete&quot;:1/6,<sp/>&quot;subtree&quot;:1/6,<sp/>&quot;toggle_weight_on&quot;:1/6,<sp/>&quot;toggle_weight_off&quot;:1/6}</highlight></codeline>
<codeline lineno="50"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>dictionary<sp/>with<sp/>keys<sp/>naming<sp/>the<sp/>types<sp/>of<sp/>mutation<sp/>and<sp/>floating<sp/>point<sp/></highlight></codeline>
<codeline lineno="51"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>values<sp/>specifying<sp/>the<sp/>fraction<sp/>of<sp/>total<sp/>mutations<sp/>to<sp/>do<sp/>with<sp/>that<sp/>method.</highlight></codeline>
<codeline lineno="52"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>probability<sp/>of<sp/>having<sp/>a<sp/>mutation<sp/>is<sp/>`(1-cx_prob)`<sp/>and,<sp/>in<sp/>case<sp/>the<sp/>mutation</highlight></codeline>
<codeline lineno="53"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>applied,<sp/>then<sp/>each<sp/>mutation<sp/>option<sp/>is<sp/>sampled<sp/>based<sp/>on<sp/>the<sp/>probabilities</highlight></codeline>
<codeline lineno="54"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>defined<sp/>in<sp/>`mutation_options`.<sp/>The<sp/>set<sp/>of<sp/>probabilities<sp/>should<sp/>add<sp/>up<sp/>to<sp/>1.0.</highlight></codeline>
<codeline lineno="55"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>functions:<sp/>dict[str,float]<sp/>or<sp/>list[str],<sp/>default<sp/>{}</highlight></codeline>
<codeline lineno="56"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>dictionary<sp/>with<sp/>keys<sp/>naming<sp/>the<sp/>function<sp/>set<sp/>and<sp/>values<sp/>giving<sp/>the<sp/>probability</highlight></codeline>
<codeline lineno="57"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>sampling<sp/>them,<sp/>or<sp/>a<sp/>list<sp/>of<sp/>functions<sp/>which<sp/>will<sp/>be<sp/>weighted<sp/>uniformly.</highlight></codeline>
<codeline lineno="58"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>empty,<sp/>all<sp/>available<sp/>functions<sp/>are<sp/>included<sp/>in<sp/>the<sp/>search<sp/>space.</highlight></codeline>
<codeline lineno="59"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>initialization<sp/>:<sp/>{&quot;grow&quot;,<sp/>&quot;full&quot;},<sp/>default<sp/>&quot;grow&quot;<sp/></highlight></codeline>
<codeline lineno="60"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Strategy<sp/>to<sp/>create<sp/>the<sp/>initial<sp/>population.<sp/>If<sp/>`full`,<sp/>then<sp/>every<sp/>expression<sp/>is<sp/>created</highlight></codeline>
<codeline lineno="61"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>`max_size`<sp/>nodes.<sp/>If<sp/>`grow`,<sp/>size<sp/>will<sp/>be<sp/>uniformly<sp/>distributed.</highlight></codeline>
<codeline lineno="62"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>validation_size<sp/>:<sp/>float,<sp/>default<sp/>0.0</highlight></codeline>
<codeline lineno="63"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Percentage<sp/>of<sp/>samples<sp/>to<sp/>use<sp/>as<sp/>a<sp/>hold-out<sp/>partition.<sp/>These<sp/>samples<sp/>are<sp/>used</highlight></codeline>
<codeline lineno="64"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>calculate<sp/>statistics<sp/>during<sp/>evolution,<sp/>but<sp/>not<sp/>used<sp/>to<sp/>train<sp/>the<sp/>models.</highlight></codeline>
<codeline lineno="65"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>`best_estimator_`<sp/>will<sp/>be<sp/>selected<sp/>using<sp/>this<sp/>partition.<sp/>If<sp/>zero,<sp/>then</highlight></codeline>
<codeline lineno="66"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>same<sp/>data<sp/>used<sp/>for<sp/>training<sp/>is<sp/>used<sp/>for<sp/>validation.</highlight></codeline>
<codeline lineno="67"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>batch_size<sp/>:<sp/>float,<sp/>default<sp/>1.0</highlight></codeline>
<codeline lineno="68"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Percentage<sp/>of<sp/>training<sp/>data<sp/>to<sp/>sample<sp/>every<sp/>generation.<sp/>If<sp/>`1.0`,<sp/>then</highlight></codeline>
<codeline lineno="69"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all<sp/>data<sp/>is<sp/>used.<sp/>Very<sp/>small<sp/>values<sp/>can<sp/>improve<sp/>execution<sp/>time,<sp/>but<sp/></highlight></codeline>
<codeline lineno="70"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>also<sp/>lead<sp/>to<sp/>underfit.</highlight></codeline>
<codeline lineno="71"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>random_state:<sp/>int<sp/>or<sp/>None,<sp/>default<sp/>None</highlight></codeline>
<codeline lineno="72"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>int,<sp/>then<sp/>the<sp/>value<sp/>is<sp/>used<sp/>to<sp/>seed<sp/>the<sp/>c++<sp/>random<sp/>generator;<sp/>if<sp/>None,</highlight></codeline>
<codeline lineno="73"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>then<sp/>a<sp/>seed<sp/>will<sp/>be<sp/>generated<sp/>using<sp/>a<sp/>non-deterministic<sp/>generator.<sp/>It<sp/>is</highlight></codeline>
<codeline lineno="74"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>important<sp/>to<sp/>notice<sp/>that,<sp/>even<sp/>if<sp/>the<sp/>random<sp/>state<sp/>is<sp/>fixed,<sp/>it<sp/>is</highlight></codeline>
<codeline lineno="75"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unlikely<sp/>that<sp/>running<sp/>brush<sp/>using<sp/>multiple<sp/>threads<sp/>will<sp/>have<sp/>the<sp/>same</highlight></codeline>
<codeline lineno="76"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>results.<sp/>This<sp/>happens<sp/>because<sp/>the<sp/>Operating<sp/>System&apos;s<sp/>scheduler<sp/>is</highlight></codeline>
<codeline lineno="77"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>responsible<sp/>to<sp/>choose<sp/>which<sp/>thread<sp/>will<sp/>run<sp/>at<sp/>any<sp/>given<sp/>time,<sp/>thus<sp/></highlight></codeline>
<codeline lineno="78"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reproductibility<sp/>is<sp/>not<sp/>guaranteed.</highlight></codeline>
<codeline lineno="79"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="80"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Attributes</highlight></codeline>
<codeline lineno="81"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="82"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>best_estimator_<sp/>:<sp/>_brush.Program</highlight></codeline>
<codeline lineno="83"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>final<sp/>model<sp/>picked<sp/>from<sp/>training.<sp/>Used<sp/>in<sp/>subsequent<sp/>calls<sp/>to<sp/>:func:`predict`.<sp/></highlight></codeline>
<codeline lineno="84"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>archive_<sp/>:<sp/>list[deap_api.DeapIndividual]</highlight></codeline>
<codeline lineno="85"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>final<sp/>population<sp/>from<sp/>training.<sp/></highlight></codeline>
<codeline lineno="86"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>data_<sp/>:<sp/>_brush.Dataset</highlight></codeline>
<codeline lineno="87"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>complete<sp/>data<sp/>in<sp/>Brush<sp/>format.<sp/></highlight></codeline>
<codeline lineno="88"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>train_<sp/>:<sp/>_brush.Dataset</highlight></codeline>
<codeline lineno="89"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Partition<sp/>of<sp/>`data_`<sp/>containing<sp/>`(1-validation_size)`%<sp/>of<sp/>the<sp/>data,<sp/>in<sp/>Brush<sp/>format.</highlight></codeline>
<codeline lineno="90"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>validation_<sp/>:<sp/>_brush.Dataset</highlight></codeline>
<codeline lineno="91"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Partition<sp/>of<sp/>`data_`<sp/>containing<sp/>`(validation_size)`%<sp/>of<sp/>the<sp/>data,<sp/>in<sp/>Brush<sp/>format.</highlight></codeline>
<codeline lineno="92"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>search_space_<sp/>:<sp/>a<sp/>Brush<sp/>`SearchSpace`<sp/>object.<sp/></highlight></codeline>
<codeline lineno="93"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Holds<sp/>the<sp/>operators<sp/>and<sp/>terminals<sp/>and<sp/>sampling<sp/>utilities<sp/>to<sp/>update<sp/>programs.</highlight></codeline>
<codeline lineno="94"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>toolbox_<sp/>:<sp/>deap.Toolbox</highlight></codeline>
<codeline lineno="95"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>toolbox<sp/>used<sp/>by<sp/>DEAP<sp/>for<sp/>EA<sp/>algorithm.<sp/></highlight></codeline>
<codeline lineno="96"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="97"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="99" refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1ae301c7dfd48f350b1f6ea6d0269bf0c1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1ae301c7dfd48f350b1f6ea6d0269bf0c1" kindref="member">__init__</ref>(</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self,<sp/></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode=&apos;classification&apos;,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pop_size=100,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_gen=100,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verbosity=0,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_depth=3,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_size=20,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cx_prob=<sp/>1/7,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mutation_options<sp/>=<sp/>{&quot;point&quot;:1/6,<sp/></highlight><highlight class="stringliteral">&quot;insert&quot;</highlight><highlight class="normal">:1/6,<sp/></highlight><highlight class="stringliteral">&quot;delete&quot;</highlight><highlight class="normal">:1/6,<sp/></highlight><highlight class="stringliteral">&quot;subtree&quot;</highlight><highlight class="normal">:1/6,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;toggle_weight_on&quot;</highlight><highlight class="normal">:1/6,<sp/></highlight><highlight class="stringliteral">&quot;toggle_weight_off&quot;</highlight><highlight class="normal">:1/6},</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>functions:<sp/>list[str]|dict[str,float]<sp/>=<sp/>{},</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialization=</highlight><highlight class="stringliteral">&quot;grow&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>random_state=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>validation_size:<sp/>float<sp/>=<sp/>0.0,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>batch_size:<sp/>float<sp/>=<sp/>1.0</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>):</highlight></codeline>
<codeline lineno="116" refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1ab2416cb2e4a9327b93fe8397d0ba8572" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1ab2416cb2e4a9327b93fe8397d0ba8572" kindref="member">pop_size</ref>pop_size=pop_size</highlight></codeline>
<codeline lineno="117" refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1a3b4adff253c20efd315e9f8789503b4b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1a3b4adff253c20efd315e9f8789503b4b" kindref="member">max_gen</ref>max_gen=max_gen</highlight></codeline>
<codeline lineno="118" refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1a0d186a49025ec8370f4c5b2c61d1304f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1a0d186a49025ec8370f4c5b2c61d1304f" kindref="member">verbosity</ref>verbosity=verbosity</highlight></codeline>
<codeline lineno="119" refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1a5d1704a652d6d5ea0e5e98125702719a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1a5d1704a652d6d5ea0e5e98125702719a" kindref="member">mode</ref>mode=mode</highlight></codeline>
<codeline lineno="120" refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1a2526c6813d622c1ac125e5fb7b6ba128" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1a2526c6813d622c1ac125e5fb7b6ba128" kindref="member">max_depth</ref>max_depth=max_depth</highlight></codeline>
<codeline lineno="121" refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1af75977b66a8836d700221adcb701b067" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1af75977b66a8836d700221adcb701b067" kindref="member">max_size</ref>max_size=max_size</highlight></codeline>
<codeline lineno="122" refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1a11b523668027fa92e77ca1733b884242" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1a11b523668027fa92e77ca1733b884242" kindref="member">cx_prob</ref>cx_prob=cx_prob</highlight></codeline>
<codeline lineno="123" refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1a0174bd91eccdf68b8885ae6b5ef4db76" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1a0174bd91eccdf68b8885ae6b5ef4db76" kindref="member">mutation_options</ref>mutation_options=mutation_options</highlight></codeline>
<codeline lineno="124" refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1af9065286a6d4c5f2dcd6e3bcc539c08b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1af9065286a6d4c5f2dcd6e3bcc539c08b" kindref="member">functions</ref>functions=functions</highlight></codeline>
<codeline lineno="125" refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1aaefc227004ceb4da83998e498e529afa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1aaefc227004ceb4da83998e498e529afa" kindref="member">initialization</ref>initialization=initialization</highlight></codeline>
<codeline lineno="126" refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1a4ee31cd0a6c1de0442588838b855e833" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1a4ee31cd0a6c1de0442588838b855e833" kindref="member">random_state</ref>random_state=random_state</highlight></codeline>
<codeline lineno="127" refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1aa71f7e6d68f5ce219d65b7f7b863fa6e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1aa71f7e6d68f5ce219d65b7f7b863fa6e" kindref="member">batch_size</ref>batch_size=batch_size</highlight></codeline>
<codeline lineno="128" refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1ab63da0cd1f018c603a11cd246ecb26bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1ab63da0cd1f018c603a11cd246ecb26bf" kindref="member">validation_size</ref>validation_size=validation_size</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1a8e36fceb064db20d53b4043909a022a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1a8e36fceb064db20d53b4043909a022a8" kindref="member">_setup_toolbox</ref>(self,<sp/>data_train,<sp/>data_validation):</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Setup<sp/>the<sp/>deap<sp/>toolbox&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>toolbox:<sp/>base.Toolbox<sp/>=<sp/>base.Toolbox()</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>creator.create<sp/>is<sp/>used<sp/>to<sp/>&quot;create<sp/>new<sp/>functions&quot;,<sp/>and<sp/>takes<sp/>at<sp/>least</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>2<sp/>arguments:<sp/>the<sp/>name<sp/>of<sp/>the<sp/>newly<sp/>created<sp/>class<sp/>and<sp/>a<sp/>base<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Minimizing/maximizing<sp/>problem:<sp/>negative/positive<sp/>weight,<sp/>respectively.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Our<sp/>classification<sp/>is<sp/>using<sp/>the<sp/>error<sp/>as<sp/>a<sp/>metric</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Comparing<sp/>fitnesses:<sp/>https://deap.readthedocs.io/en/master/api/base.html#deap.base.Fitness</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>creator.create(</highlight><highlight class="stringliteral">&quot;FitnessMulti&quot;</highlight><highlight class="normal">,<sp/>base.Fitness,<sp/>weights=self.weights)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>create<sp/>Individual<sp/>class,<sp/>inheriting<sp/>from<sp/>self.Individual<sp/>with<sp/>a<sp/>fitness<sp/>attribute</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>creator.create(</highlight><highlight class="stringliteral">&quot;Individual&quot;</highlight><highlight class="normal">,<sp/>DeapIndividual,<sp/>fitness=creator.FitnessMulti)<sp/><sp/></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>toolbox.register(</highlight><highlight class="stringliteral">&quot;mate&quot;</highlight><highlight class="normal">,<sp/>self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1af7d065d73b3f1ec7f9e11799167da014" kindref="member">_crossover</ref>_crossover)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>toolbox.register(</highlight><highlight class="stringliteral">&quot;mutate&quot;</highlight><highlight class="normal">,<sp/>self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1a8edd942e828516255af2ae908a8e4666" kindref="member">_mutate</ref>_mutate)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>When<sp/>solving<sp/>multi-objective<sp/>problems,<sp/>selection<sp/>and<sp/>survival<sp/>must</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>support<sp/>this<sp/>feature.<sp/>This<sp/>means<sp/>that<sp/>these<sp/>selection<sp/>operators<sp/>must</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>accept<sp/>a<sp/>tuple<sp/>of<sp/>fitnesses<sp/>as<sp/>argument)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>toolbox.register(</highlight><highlight class="stringliteral">&quot;select&quot;</highlight><highlight class="normal">,<sp/>tools.selTournamentDCD)<sp/></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>toolbox.register(</highlight><highlight class="stringliteral">&quot;survive&quot;</highlight><highlight class="normal">,<sp/>tools.selNSGA2)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>toolbox.population<sp/>will<sp/>return<sp/>a<sp/>list<sp/>of<sp/>elements<sp/>by<sp/>calling<sp/>toolbox.individual</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>toolbox.register(</highlight><highlight class="stringliteral">&quot;createRandom&quot;</highlight><highlight class="normal">,<sp/>self._make_individual)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>toolbox.register(</highlight><highlight class="stringliteral">&quot;population&quot;</highlight><highlight class="normal">,<sp/>tools.initRepeat,<sp/>list,<sp/>toolbox.createRandom)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>toolbox.register(</highlight><highlight class="stringliteral">&quot;getBatch&quot;</highlight><highlight class="normal">,<sp/>data_train.get_batch)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>toolbox.register(</highlight><highlight class="stringliteral">&quot;evaluate&quot;</highlight><highlight class="normal">,<sp/>self._fitness_function,<sp/>data=data_train)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>toolbox.register(</highlight><highlight class="stringliteral">&quot;evaluateValidation&quot;</highlight><highlight class="normal">,<sp/>self._fitness_validation,<sp/>data=data_validation)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>toolbox</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1af7d065d73b3f1ec7f9e11799167da014" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1af7d065d73b3f1ec7f9e11799167da014" kindref="member">_crossover</ref>(self,<sp/>ind1,<sp/>ind2):</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offspring<sp/>=<sp/>[]<sp/></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i,j<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>[(ind1,ind2),(ind2,ind1)]:</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>child<sp/>=<sp/>i.prg.cross(j.prg)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>child:</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offspring.append(creator.Individual(child))</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">#<sp/>so<sp/>we&apos;ll<sp/>always<sp/>have<sp/>two<sp/>elements<sp/>to<sp/>unpack<sp/>in<sp/>`offspring`</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offspring.append(</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>offspring[0],<sp/>offspring[1]</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179" refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1a8edd942e828516255af2ae908a8e4666" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1a8edd942e828516255af2ae908a8e4666" kindref="member">_mutate</ref>(self,<sp/>ind1):</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>offspring<sp/>=<sp/>(creator.Individual(ind1.prg.mutate(self.search_space_)),)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offspring<sp/>=<sp/>ind1.prg.mutate()</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>offspring:</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>creator.Individual(offspring)</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1a86918636dd7cd887005649b62d14d1be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1a86918636dd7cd887005649b62d14d1be" kindref="member">fit</ref>(self,<sp/>X,<sp/>y):</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="191"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Fit<sp/>an<sp/>estimator<sp/>to<sp/>X,y.</highlight></codeline>
<codeline lineno="192"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="193"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="194"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="195"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X<sp/>:<sp/>np.ndarray</highlight></codeline>
<codeline lineno="196"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2-d<sp/>array<sp/>of<sp/>input<sp/>data.</highlight></codeline>
<codeline lineno="197"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>:<sp/>np.ndarray</highlight></codeline>
<codeline lineno="198"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1-d<sp/>array<sp/>of<sp/>(boolean)<sp/>target<sp/>values.</highlight></codeline>
<codeline lineno="199"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_brush.set_params(self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1a3808a9773d5a42827cc28aaf3f97b694" kindref="member">get_params</ref>get_params())</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1a4ee31cd0a6c1de0442588838b855e833" kindref="member">random_state</ref>random_state<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_brush.set_random_state(self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1a4ee31cd0a6c1de0442588838b855e833" kindref="member">random_state</ref>random_state)</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205" refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1a0a312180a4bb723670ab37a417074a0e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1a0a312180a4bb723670ab37a417074a0e" kindref="member">data_</ref>data_<sp/>=<sp/>self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1a1d3591f8cb1747d6d66ec6df612d13da" kindref="member">_make_data</ref>_make_data(X,y,<sp/>validation_size=self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1ab63da0cd1f018c603a11cd246ecb26bf" kindref="member">validation_size</ref>validation_size)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>set<sp/>n<sp/>classes<sp/>if<sp/>relevant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1a5d1704a652d6d5ea0e5e98125702719a" kindref="member">mode</ref>mode==</highlight><highlight class="stringliteral">&quot;classification&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="209" refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1a0b22b0ef09f113dfd3871d328090499c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1a0b22b0ef09f113dfd3871d328090499c" kindref="member">n_classes_</ref>n_classes_<sp/>=<sp/>len(np.unique(y))</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>These<sp/>have<sp/>a<sp/>default<sp/>behavior<sp/>to<sp/>return<sp/>something<sp/>meaningfull<sp/>if<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>no<sp/>values<sp/>are<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213" refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1a792179c847ba4a82a276a93a70ce855b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1a792179c847ba4a82a276a93a70ce855b" kindref="member">train_</ref>train_<sp/>=<sp/>self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1a0a312180a4bb723670ab37a417074a0e" kindref="member">data_</ref>data_.get_training_data()</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1a792179c847ba4a82a276a93a70ce855b" kindref="member">train_</ref>train_.set_batch_size(self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1aa71f7e6d68f5ce219d65b7f7b863fa6e" kindref="member">batch_size</ref>batch_size)</highlight></codeline>
<codeline lineno="215" refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1a294bbf4dffdc46c11d803297e7aedb49" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1a294bbf4dffdc46c11d803297e7aedb49" kindref="member">validation_</ref>validation_<sp/>=<sp/>self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1a0a312180a4bb723670ab37a417074a0e" kindref="member">data_</ref>data_.get_validation_data()</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinstance(self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1af9065286a6d4c5f2dcd6e3bcc539c08b" kindref="member">functions</ref>functions,<sp/>list):</highlight></codeline>
<codeline lineno="218" refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1ab25513e9cb65475b41f18804257a49b6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1ab25513e9cb65475b41f18804257a49b6" kindref="member">functions_</ref>functions_<sp/>=<sp/>{k:1.0<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1af9065286a6d4c5f2dcd6e3bcc539c08b" kindref="member">functions</ref>functions}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1ab25513e9cb65475b41f18804257a49b6" kindref="member">functions_</ref>functions_<sp/>=<sp/>self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1af9065286a6d4c5f2dcd6e3bcc539c08b" kindref="member">functions</ref>functions</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222" refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1ae60d91755de9e541295e25c49ecfb591" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1ae60d91755de9e541295e25c49ecfb591" kindref="member">search_space_</ref>search_space_<sp/>=<sp/>_brush.SearchSpace(self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1a792179c847ba4a82a276a93a70ce855b" kindref="member">train_</ref>train_,<sp/>self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1ab25513e9cb65475b41f18804257a49b6" kindref="member">functions_</ref>functions_)</highlight></codeline>
<codeline lineno="223" refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1ab7642f08b6d239392ecaa4a78b730957" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1ab7642f08b6d239392ecaa4a78b730957" kindref="member">toolbox_</ref>toolbox_<sp/>=<sp/>self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1a8e36fceb064db20d53b4043909a022a8" kindref="member">_setup_toolbox</ref>_setup_toolbox(data_train=self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1a792179c847ba4a82a276a93a70ce855b" kindref="member">train_</ref>train_,<sp/>data_validation=self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1a294bbf4dffdc46c11d803297e7aedb49" kindref="member">validation_</ref>validation_)</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>archive,<sp/>logbook<sp/>=<sp/><ref refid="d1/d49/namespacebrush_1_1deap__api_1_1nsga2_1add04e7f2398a62b2281dc302ff00f596" kindref="member">nsga2</ref>(</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1ab7642f08b6d239392ecaa4a78b730957" kindref="member">toolbox_</ref>toolbox_,<sp/>self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1a3b4adff253c20efd315e9f8789503b4b" kindref="member">max_gen</ref>max_gen,<sp/>self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1ab2416cb2e4a9327b93fe8397d0ba8572" kindref="member">pop_size</ref>pop_size,<sp/>self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1a11b523668027fa92e77ca1733b884242" kindref="member">cx_prob</ref>cx_prob,<sp/></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0.0&lt;self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1aa71f7e6d68f5ce219d65b7f7b863fa6e" kindref="member">batch_size</ref>batch_size&lt;1.0),<sp/>self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1a0d186a49025ec8370f4c5b2c61d1304f" kindref="member">verbosity</ref>verbosity,<sp/>_brush.rnd_flt)</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="229" refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1ada78ab3e85a2edecbd8bf256009f014c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1ada78ab3e85a2edecbd8bf256009f014c" kindref="member">archive_</ref>archive_<sp/>=<sp/>archive</highlight></codeline>
<codeline lineno="230" refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1adf8b06ad9d173369bed66b07444ddd6d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1adf8b06ad9d173369bed66b07444ddd6d" kindref="member">logbook_</ref>logbook_<sp/>=<sp/>logbook</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>final_ind_idx<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Each<sp/>individual<sp/>is<sp/>a<sp/>point<sp/>in<sp/>the<sp/>Multi-Objective<sp/>space.<sp/>We<sp/>multiply</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>the<sp/>fitness<sp/>by<sp/>the<sp/>weights<sp/>so<sp/>greater<sp/>numbers<sp/>are<sp/>always<sp/>better</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points<sp/>=<sp/>np.array([self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1ab7642f08b6d239392ecaa4a78b730957" kindref="member">toolbox_</ref>toolbox_.evaluateValidation(ind)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ind<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1ada78ab3e85a2edecbd8bf256009f014c" kindref="member">archive_</ref>archive_])</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points<sp/>=<sp/>points*np.array(self.weights)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1ab63da0cd1f018c603a11cd246ecb26bf" kindref="member">validation_size</ref>validation_size==0.0:<sp/><sp/></highlight><highlight class="comment">#<sp/>Using<sp/>the<sp/>multi-criteria<sp/>decision<sp/>making<sp/>on<sp/>training<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Selecting<sp/>the<sp/>best<sp/>estimator<sp/>using<sp/>training<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>(train<sp/>data==val<sp/>data<sp/>if<sp/>validation_size<sp/>is<sp/>set<sp/>to<sp/>0.0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>and<sp/>multi-criteria<sp/>decision<sp/>making</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Normalizing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_vals<sp/>=<sp/>np.min(points,<sp/>axis=0)</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_vals<sp/>=<sp/>np.max(points,<sp/>axis=0)</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points<sp/>=<sp/>(points<sp/>-<sp/>min_vals)<sp/>/<sp/>(max_vals<sp/>-<sp/>min_vals)</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Reference<sp/>should<sp/>be<sp/>best<sp/>value<sp/>each<sp/>obj.<sp/>can<sp/>have<sp/>(after<sp/>normalization)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reference<sp/>=<sp/>np.array([1,<sp/>1])</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>closest<sp/>to<sp/>the<sp/>reference</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>final_ind_idx<sp/>=<sp/>np.argmin(<sp/>np.linalg.norm(points<sp/>-<sp/>reference,<sp/>axis=1)<sp/>)</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">#<sp/>Best<sp/>in<sp/>obj.1<sp/>(loss)<sp/>in<sp/>validation<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>final_ind_idx<sp/>=<sp/>np.argmax(<sp/>points[:,<sp/>0]<sp/>)</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257" refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1a44422c9d94c587951537f62fdfe95739" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1a44422c9d94c587951537f62fdfe95739" kindref="member">best_estimator_</ref>best_estimator_<sp/>=<sp/>self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1ada78ab3e85a2edecbd8bf256009f014c" kindref="member">archive_</ref>archive_[final_ind_idx].prg</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1a0d186a49025ec8370f4c5b2c61d1304f" kindref="member">verbosity</ref>verbosity<sp/>&gt;<sp/>0:</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d6/d2e/namespaceBrush_1_1Util_1a0fca88a717680a76c4b7b9b082675f89" kindref="member">print</ref>(f</highlight><highlight class="stringliteral">&apos;best<sp/>model<sp/>{self.best_estimator_.get_model()}&apos;</highlight><highlight class="normal">+</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f</highlight><highlight class="stringliteral">&apos;<sp/>with<sp/>size<sp/>{self.best_estimator_.size()},<sp/>&apos;</highlight><highlight class="normal"><sp/><sp/><sp/>+</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f</highlight><highlight class="stringliteral">&apos;<sp/>depth<sp/>{self.best_estimator_.depth()},<sp/>&apos;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>+</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f</highlight><highlight class="stringliteral">&apos;<sp/>and<sp/>fitness<sp/>{self.archive_[0].fitness}&apos;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="267" refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1a1d3591f8cb1747d6d66ec6df612d13da" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1a1d3591f8cb1747d6d66ec6df612d13da" kindref="member">_make_data</ref>(self,<sp/>X,<sp/>y=None,<sp/>validation_size=0.0):</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>This<sp/>function<sp/>should<sp/>not<sp/>partition<sp/>data<sp/>(as<sp/>it<sp/>is<sp/>used<sp/>in<sp/>predict).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>partitioning<sp/>is<sp/>done<sp/>in<sp/>fit().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinstance(y,<sp/>pd.Series):</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>y.values</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinstance(X,<sp/>pd.DataFrame):</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>self.data_<sp/>=<sp/>_brush.Dataset(X.to_dict(orient=&apos;list&apos;),<sp/>y)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature_names<sp/>=<sp/>X.columns.to_list()</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X<sp/>=<sp/>X.values</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinstance(y,<sp/>NoneType):</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_brush.Dataset(X,</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature_names=feature_names,<sp/>validation_size=validation_size)</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_brush.Dataset(X,<sp/>y,</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature_names=feature_names,<sp/>validation_size=validation_size)</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>isinstance(X,<sp/>np.ndarray)</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>if<sp/>there<sp/>is<sp/>no<sp/>label,<sp/>don&apos;t<sp/>include<sp/>it<sp/>in<sp/>library<sp/>call<sp/>to<sp/>Dataset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinstance(y,<sp/>NoneType):</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_brush.Dataset(X,<sp/>validation_size=validation_size)</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_brush.Dataset(X,<sp/>y,<sp/>validation_size=validation_size)</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293" refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1a87709a26a92ac4e24a4f3106b2bdd139" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1a87709a26a92ac4e24a4f3106b2bdd139" kindref="member">predict</ref>(self,<sp/>X):</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Predict<sp/>using<sp/>the<sp/>best<sp/>estimator<sp/>in<sp/>the<sp/>archive.<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/>self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1a1d3591f8cb1747d6d66ec6df612d13da" kindref="member">_make_data</ref>_make_data(X)</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1a44422c9d94c587951537f62fdfe95739" kindref="member">best_estimator_</ref>best_estimator_.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1a87709a26a92ac4e24a4f3106b2bdd139" kindref="member">predict</ref>(data)</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>def<sp/>_setup_population(self):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;initialize<sp/>programs&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>if<sp/>self.mode<sp/>==<sp/>&apos;classification&apos;:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>generate<sp/>=<sp/>self.search_space_.make_classifier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>else:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>generate<sp/>=<sp/>self.search_space_.make_regressor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>programs<sp/>=<sp/>[</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DeapIndividual(generate(self.max_depth,<sp/>self.max_size))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>i<sp/>in<sp/>range(self.pop_size)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>#<sp/>return<sp/>[self._create_deap_individual_(p)<sp/>for<sp/>p<sp/>in<sp/>programs]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>return<sp/>programs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312" refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1a3808a9773d5a42827cc28aaf3f97b694" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1a3808a9773d5a42827cc28aaf3f97b694" kindref="member">get_params</ref>(self):</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{k:v<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k,v<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.__dict__.items()<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>k.endswith(</highlight><highlight class="stringliteral">&apos;_&apos;</highlight><highlight class="normal">)}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316" refid="d0/d6a/classbrush_1_1estimator_1_1BrushClassifier" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d0/d6a/classbrush_1_1estimator_1_1BrushClassifier" kindref="compound">BrushClassifier</ref>(<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator" kindref="compound">BrushEstimator</ref>,ClassifierMixin):</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Brush<sp/>for<sp/>classification.</highlight></codeline>
<codeline lineno="318"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="319"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>For<sp/>options,<sp/>see<sp/>:py:class:`BrushEstimator<sp/>&lt;brush.estimator.BrushEstimator&gt;`.<sp/></highlight></codeline>
<codeline lineno="320"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="321"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Examples</highlight></codeline>
<codeline lineno="322"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>--------</highlight></codeline>
<codeline lineno="323"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>import<sp/>pandas<sp/>as<sp/>pd</highlight></codeline>
<codeline lineno="324"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>df<sp/>=<sp/>pd.read_csv(&apos;docs/examples/datasets/d_analcatdata_aids.csv&apos;)</highlight></codeline>
<codeline lineno="325"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>X<sp/>=<sp/>df.drop(columns=&apos;target&apos;)</highlight></codeline>
<codeline lineno="326"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>y<sp/>=<sp/>df[&apos;target&apos;]</highlight></codeline>
<codeline lineno="327"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>from<sp/>brush<sp/>import<sp/>BrushClassifier</highlight></codeline>
<codeline lineno="328"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>est<sp/>=<sp/>BrushClassifier()</highlight></codeline>
<codeline lineno="329"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>est.fit(X,y)</highlight></codeline>
<codeline lineno="330"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>print(&apos;score:&apos;,<sp/>est.score(X,y))</highlight></codeline>
<codeline lineno="331"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332" refid="d0/d6a/classbrush_1_1estimator_1_1BrushClassifier_1af96b165dab470191a26fcd9a87908040" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d0/d6a/classbrush_1_1estimator_1_1BrushClassifier_1af96b165dab470191a26fcd9a87908040" kindref="member">__init__</ref>(<sp/>self,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super().<ref refid="d0/d6a/classbrush_1_1estimator_1_1BrushClassifier_1af96b165dab470191a26fcd9a87908040" kindref="member">__init__</ref>(mode=</highlight><highlight class="stringliteral">&apos;classification&apos;</highlight><highlight class="normal">,**kwargs)</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Weight<sp/>of<sp/>each<sp/>objective<sp/>(+<sp/>for<sp/>maximization,<sp/>-<sp/>for<sp/>minimization)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336" refid="d0/d6a/classbrush_1_1estimator_1_1BrushClassifier_1a6523559d0596f47ca85c4dfb8bae407d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d0/d6a/classbrush_1_1estimator_1_1BrushClassifier_1a6523559d0596f47ca85c4dfb8bae407d" kindref="member">weights</ref>weights<sp/>=<sp/>(+1.0,-1.0)</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338" refid="d0/d6a/classbrush_1_1estimator_1_1BrushClassifier_1a90c37921fdb354cbb7d90ab2caaf57aa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d0/d6a/classbrush_1_1estimator_1_1BrushClassifier_1a90c37921fdb354cbb7d90ab2caaf57aa" kindref="member">_fitness_validation</ref>(self,<sp/>ind,<sp/>data:<sp/>_brush.Dataset):</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Fitness<sp/>without<sp/>fitting<sp/>the<sp/>expression,<sp/>used<sp/>with<sp/>validation<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="comment">#<sp/>(accuracy,<sp/>size)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(data.y==ind.prg.predict(data)).sum()<sp/>/<sp/>data.y.shape[0],<sp/></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ind.prg.size()</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345" refid="d0/d6a/classbrush_1_1estimator_1_1BrushClassifier_1a57f9821e2eb132e67a4dcbd97ffa472f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d0/d6a/classbrush_1_1estimator_1_1BrushClassifier_1a57f9821e2eb132e67a4dcbd97ffa472f" kindref="member">_fitness_function</ref>(self,<sp/>ind,<sp/>data:<sp/>_brush.Dataset):</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ind.prg.fit(data)</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="comment">#<sp/>(accuracy,<sp/>size)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(data.y==ind.prg.predict(data)).sum()<sp/>/<sp/>data.y.shape[0],<sp/></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ind.prg.size()</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="352" refid="d0/d6a/classbrush_1_1estimator_1_1BrushClassifier_1a2f7af58230ed6d27a92c6c727b600820" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d0/d6a/classbrush_1_1estimator_1_1BrushClassifier_1a2f7af58230ed6d27a92c6c727b600820" kindref="member">_make_individual</ref>(self):</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>C++&apos;s<sp/>PTC2-based<sp/>`make_individual`<sp/>will<sp/>create<sp/>a<sp/>tree<sp/>of<sp/>at<sp/>least</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>the<sp/>given<sp/>size.<sp/>By<sp/>uniformly<sp/>sampling<sp/>the<sp/>size,<sp/>we<sp/>can<sp/>instantiate<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>population<sp/>with<sp/>more<sp/>diversity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1aaefc227004ceb4da83998e498e529afa" kindref="member">initialization</ref><ref refid="d0/d6a/classbrush_1_1estimator_1_1BrushClassifier_1a86b82af9915d8e9d11e28c81d75c7014" kindref="member">initialization</ref>initialization<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>[</highlight><highlight class="stringliteral">&quot;grow&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;full&quot;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(f</highlight><highlight class="stringliteral">&quot;Invalid<sp/>argument<sp/>value<sp/>for<sp/>`initialization`.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f</highlight><highlight class="stringliteral">&quot;expected<sp/>&apos;full&apos;<sp/>or<sp/>&apos;grow&apos;.<sp/>got<sp/>{self.initialization}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>creator.Individual(</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1ae60d91755de9e541295e25c49ecfb591" kindref="member">search_space_</ref>search_space_.make_classifier(</highlight></codeline>
<codeline lineno="363" refid="d0/d6a/classbrush_1_1estimator_1_1BrushClassifier_1a86b82af9915d8e9d11e28c81d75c7014" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1a2526c6813d622c1ac125e5fb7b6ba128" kindref="member">max_depth</ref>max_depth,(0<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1aaefc227004ceb4da83998e498e529afa" kindref="member">initialization</ref><ref refid="d0/d6a/classbrush_1_1estimator_1_1BrushClassifier_1a86b82af9915d8e9d11e28c81d75c7014" kindref="member">initialization</ref>initialization==</highlight><highlight class="stringliteral">&apos;grow&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1af75977b66a8836d700221adcb701b067" kindref="member">max_size</ref>max_size))</highlight></codeline>
<codeline lineno="364" refid="d0/d6a/classbrush_1_1estimator_1_1BrushClassifier_1aca99ed7b077b0023be91bbf4609511c1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1a0b22b0ef09f113dfd3871d328090499c" kindref="member">n_classes_</ref><ref refid="d0/d6a/classbrush_1_1estimator_1_1BrushClassifier_1aca99ed7b077b0023be91bbf4609511c1" kindref="member">n_classes_</ref>n_classes_<sp/>==<sp/>2<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1ae60d91755de9e541295e25c49ecfb591" kindref="member">search_space_</ref>search_space_.make_multiclass_classifier(</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1a2526c6813d622c1ac125e5fb7b6ba128" kindref="member">max_depth</ref>max_depth,<sp/>(0<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1aaefc227004ceb4da83998e498e529afa" kindref="member">initialization</ref><ref refid="d0/d6a/classbrush_1_1estimator_1_1BrushClassifier_1a86b82af9915d8e9d11e28c81d75c7014" kindref="member">initialization</ref>initialization==</highlight><highlight class="stringliteral">&apos;grow&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1af75977b66a8836d700221adcb701b067" kindref="member">max_size</ref>max_size))</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369" refid="d0/d6a/classbrush_1_1estimator_1_1BrushClassifier_1a0a089fd905951f470a57fd267890511c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d0/d6a/classbrush_1_1estimator_1_1BrushClassifier_1a0a089fd905951f470a57fd267890511c" kindref="member">predict_proba</ref>(self,<sp/>X):</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Predict<sp/>class<sp/>probabilities<sp/>for<sp/>X.</highlight></codeline>
<codeline lineno="371"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="372"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="373"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="374"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X<sp/>:<sp/>{array-like,<sp/>sparse<sp/>matrix}<sp/>of<sp/>shape<sp/>(n_samples,<sp/>n_features)</highlight></codeline>
<codeline lineno="375"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>input<sp/>samples.<sp/>Internally,<sp/>it<sp/>will<sp/>be<sp/>converted<sp/>to</highlight></codeline>
<codeline lineno="376"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>``dtype=np.float32``.</highlight></codeline>
<codeline lineno="377"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="378"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns</highlight></codeline>
<codeline lineno="379"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-------</highlight></codeline>
<codeline lineno="380"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>:<sp/>ndarray<sp/>of<sp/>shape<sp/>(n_samples,<sp/>n_classes)</highlight></codeline>
<codeline lineno="381"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>class<sp/>probabilities<sp/>of<sp/>the<sp/>input<sp/>samples.<sp/>The<sp/>order<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="382"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classes<sp/>corresponds<sp/>to<sp/>that<sp/>in<sp/>the<sp/>attribute<sp/>:term:`classes_`.</highlight></codeline>
<codeline lineno="383"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="384"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/>self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1a1d3591f8cb1747d6d66ec6df612d13da" kindref="member">_make_data</ref>_make_data(X)</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1a44422c9d94c587951537f62fdfe95739" kindref="member">best_estimator_</ref>best_estimator_.<ref refid="d0/d6a/classbrush_1_1estimator_1_1BrushClassifier_1a0a089fd905951f470a57fd267890511c" kindref="member">predict_proba</ref>(data)</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388" refid="da/d81/classbrush_1_1estimator_1_1BrushRegressor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="da/d81/classbrush_1_1estimator_1_1BrushRegressor" kindref="compound">BrushRegressor</ref>(<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator" kindref="compound">BrushEstimator</ref>,<sp/>RegressorMixin):</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Brush<sp/>for<sp/>regression.</highlight></codeline>
<codeline lineno="390"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="391"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>For<sp/>options,<sp/>see<sp/>:py:class:`BrushEstimator<sp/>&lt;brush.estimator.BrushEstimator&gt;`.<sp/></highlight></codeline>
<codeline lineno="392"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="393"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Examples</highlight></codeline>
<codeline lineno="394"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>--------</highlight></codeline>
<codeline lineno="395"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>import<sp/>pandas<sp/>as<sp/>pd</highlight></codeline>
<codeline lineno="396"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>df<sp/>=<sp/>pd.read_csv(&apos;docs/examples/datasets/d_enc.csv&apos;)</highlight></codeline>
<codeline lineno="397"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>X<sp/>=<sp/>df.drop(columns=&apos;label&apos;)</highlight></codeline>
<codeline lineno="398"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>y<sp/>=<sp/>df[&apos;label&apos;]</highlight></codeline>
<codeline lineno="399"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>from<sp/>brush<sp/>import<sp/>BrushRegressor</highlight></codeline>
<codeline lineno="400"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>est<sp/>=<sp/>BrushRegressor()</highlight></codeline>
<codeline lineno="401"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>est.fit(X,y)</highlight></codeline>
<codeline lineno="402"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>print(&apos;score:&apos;,<sp/>est.score(X,y))</highlight></codeline>
<codeline lineno="403"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404" refid="da/d81/classbrush_1_1estimator_1_1BrushRegressor_1a8f27759d9f9dbd6cc519a867e6a5822e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="da/d81/classbrush_1_1estimator_1_1BrushRegressor_1a8f27759d9f9dbd6cc519a867e6a5822e" kindref="member">__init__</ref>(self,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super().<ref refid="da/d81/classbrush_1_1estimator_1_1BrushRegressor_1a8f27759d9f9dbd6cc519a867e6a5822e" kindref="member">__init__</ref>(mode=</highlight><highlight class="stringliteral">&apos;regressor&apos;</highlight><highlight class="normal">,**kwargs)</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Weight<sp/>of<sp/>each<sp/>objective<sp/>(+<sp/>for<sp/>maximization,<sp/>-<sp/>for<sp/>minimization)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408" refid="da/d81/classbrush_1_1estimator_1_1BrushRegressor_1a267dd11788897163c612378c232cb63f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="da/d81/classbrush_1_1estimator_1_1BrushRegressor_1a267dd11788897163c612378c232cb63f" kindref="member">weights</ref>weights<sp/>=<sp/>(-1.0,-1.0)</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410" refid="da/d81/classbrush_1_1estimator_1_1BrushRegressor_1aed568e829f5d037cab0f4abf70e27f5a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="da/d81/classbrush_1_1estimator_1_1BrushRegressor_1aed568e829f5d037cab0f4abf70e27f5a" kindref="member">_fitness_validation</ref>(self,<sp/>ind,<sp/>data:<sp/>_brush.Dataset):</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Fitness<sp/>without<sp/>fitting<sp/>the<sp/>expression,<sp/>used<sp/>with<sp/>validation<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MSE<sp/>=<sp/>np.mean(<sp/>(data.y-ind.prg.predict(data))**2<sp/>)</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>np.isfinite(MSE):<sp/></highlight><highlight class="comment">#<sp/>numeric<sp/>erros,<sp/>np.nan,<sp/>+-np.inf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MSE<sp/>=<sp/>np.inf</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>MSE,<sp/>ind.prg.size()<sp/>)</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419" refid="da/d81/classbrush_1_1estimator_1_1BrushRegressor_1ac1eabaaaed9126e30f5858da65daf472" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="da/d81/classbrush_1_1estimator_1_1BrushRegressor_1ac1eabaaaed9126e30f5858da65daf472" kindref="member">_fitness_function</ref>(self,<sp/>ind,<sp/>data:<sp/>_brush.Dataset):</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ind.prg.fit(data)</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MSE<sp/>=<sp/>np.mean(<sp/>(data.y-ind.prg.predict(data))**2<sp/>)</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>np.isfinite(MSE):<sp/></highlight><highlight class="comment">#<sp/>numeric<sp/>erros,<sp/>np.nan,<sp/>+-np.inf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MSE<sp/>=<sp/>np.inf</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>MSE,<sp/>ind.prg.size()<sp/>)</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428" refid="da/d81/classbrush_1_1estimator_1_1BrushRegressor_1aa2445be9821177293be3585174333928" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="da/d81/classbrush_1_1estimator_1_1BrushRegressor_1aa2445be9821177293be3585174333928" kindref="member">_make_individual</ref>(self):</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1aaefc227004ceb4da83998e498e529afa" kindref="member">initialization</ref><ref refid="da/d81/classbrush_1_1estimator_1_1BrushRegressor_1a36915e908169ee8f4ffeb65a6953d1f4" kindref="member">initialization</ref>initialization<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>[</highlight><highlight class="stringliteral">&quot;grow&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;full&quot;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(f</highlight><highlight class="stringliteral">&quot;Invalid<sp/>argument<sp/>value<sp/>for<sp/>`initialization`.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f</highlight><highlight class="stringliteral">&quot;expected<sp/>&apos;full&apos;<sp/>or<sp/>&apos;grow&apos;.<sp/>got<sp/>{self.initialization}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>creator.Individual(<sp/></highlight><highlight class="comment">#<sp/>No<sp/>arguments<sp/>(or<sp/>zero):<sp/>brush<sp/>will<sp/>use<sp/>PARAMS<sp/>passed<sp/>in<sp/>set_params.<sp/>max_size<sp/>is<sp/>sampled<sp/>between<sp/>1<sp/>and<sp/>params[&apos;max_size&apos;]<sp/>if<sp/>zero<sp/>is<sp/>provided</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1ae60d91755de9e541295e25c49ecfb591" kindref="member">search_space_</ref>search_space_.make_regressor(</highlight></codeline>
<codeline lineno="435" refid="da/d81/classbrush_1_1estimator_1_1BrushRegressor_1a36915e908169ee8f4ffeb65a6953d1f4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1a2526c6813d622c1ac125e5fb7b6ba128" kindref="member">max_depth</ref>max_depth,<sp/>(0<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1aaefc227004ceb4da83998e498e529afa" kindref="member">initialization</ref><ref refid="da/d81/classbrush_1_1estimator_1_1BrushRegressor_1a36915e908169ee8f4ffeb65a6953d1f4" kindref="member">initialization</ref>initialization==</highlight><highlight class="stringliteral">&apos;grow&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>self.<ref refid="d0/dc4/classbrush_1_1estimator_1_1BrushEstimator_1af75977b66a8836d700221adcb701b067" kindref="member">max_size</ref>max_size))</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Under<sp/>development</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="comment">#<sp/>class<sp/>BrushRepresenter(BrushEstimator,<sp/>TransformerMixin):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;Brush<sp/>for<sp/>representation<sp/>learning.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>For<sp/>options,<sp/>see<sp/>:py:class:`BrushEstimator<sp/>&lt;brush.estimator.BrushEstimator&gt;`.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>Examples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>--------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>import<sp/>pandas<sp/>as<sp/>pd</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>df<sp/>=<sp/>pd.read_csv(&apos;docs/examples/datasets/d_enc.csv&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>X<sp/>=<sp/>df.drop(columns=&apos;label&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>y<sp/>=<sp/>df[&apos;label&apos;]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>from<sp/>brush<sp/>import<sp/>BrushRegressor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>est<sp/>=<sp/>BrushRegressor()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>est.fit(X,y)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>print(&apos;score:&apos;,<sp/>est.score(X,y))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>def<sp/>__init__(self,<sp/>**kwargs):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super().__init__(mode=&apos;regressor&apos;,**kwargs)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>def<sp/>_fitness_function(self,<sp/>ind,<sp/>data:<sp/>_brush.Dataset):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ind.prg.fit(data)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>todo:<sp/>need<sp/>to<sp/>return<sp/>a<sp/>matrix<sp/>from<sp/>X<sp/>for<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>np.sum((data.get_X()-<sp/>ind.prg.predict(data))**2),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ind.prg.size()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>def<sp/>_make_individual(self):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>creator.Individual(</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.search_space_.make_representer(self.max_depth,<sp/>self.max_size)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>def<sp/>transform(self,<sp/>X):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;Transform<sp/>X<sp/>using<sp/>the<sp/>best<sp/>estimator<sp/>in<sp/>the<sp/>archive.<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>self.predict(X)</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/brush/brush/src/brush/estimator.py"/>
  </compounddef>
</doxygen>
