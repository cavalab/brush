<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="d2/d36/classBrush_1_1Data_1_1Dataset" kind="class" language="C++" prot="public">
    <compoundname>Brush::Data::Dataset</compoundname>
    <includes refid="d2/dbd/data_8h" local="no">data.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="d2/d36/classBrush_1_1Data_1_1Dataset_1a96fc30b35f152f425377e1ae34398779" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="dc/d5c/namespaceBrush_1a3f2c9b744330ba4a561ac72f048a1a5f" kindref="member">DataType</ref> &gt;</type>
        <definition>std::vector&lt;DataType&gt; Brush::Data::Dataset::unique_data_types</definition>
        <argsstring></argsstring>
        <name>unique_data_types</name>
        <briefdescription>
<para>keeps track of the unique data types in the dataset. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="55" column="21" bodyfile="/home/runner/work/brush/brush/src/data/data.h" bodystart="55" bodyend="-1"/>
        <referencedby refid="d4/dc3/structBrush_1_1SearchSpace_1a88636b9ece72850950f3b37b660d0be0" compoundref="da/d48/search__space_8cpp" startline="45" endline="81">Brush::SearchSpace::init</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d2/d36/classBrush_1_1Data_1_1Dataset_1a52d591cce797480e80f8cf1f1482702e" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="dc/d5c/namespaceBrush_1a3f2c9b744330ba4a561ac72f048a1a5f" kindref="member">DataType</ref> &gt;</type>
        <definition>std::vector&lt;DataType&gt; Brush::Data::Dataset::feature_types</definition>
        <argsstring></argsstring>
        <name>feature_types</name>
        <briefdescription>
<para>types of data in the features. <linebreak/>
 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="57" column="21" bodyfile="/home/runner/work/brush/brush/src/data/data.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d36/classBrush_1_1Data_1_1Dataset_1a652aba735323fddf7bf79407e7e4fc83" prot="public" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="dc/d5c/namespaceBrush_1a3f2c9b744330ba4a561ac72f048a1a5f" kindref="member">DataType</ref>, vector&lt; string &gt; &gt;</type>
        <definition>std::unordered_map&lt;DataType,vector&lt;string&gt; &gt; Brush::Data::Dataset::features_of_type</definition>
        <argsstring></argsstring>
        <name>features_of_type</name>
        <briefdescription>
<para>map from data types to features having that type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="59" column="28" bodyfile="/home/runner/work/brush/brush/src/data/data.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d36/classBrush_1_1Data_1_1Dataset_1a23f1c86e056b6806e7fa66c8fe6ea9ff" prot="public" static="no" mutable="no">
        <type>std::map&lt; string, <ref refid="d9/d1c/namespaceBrush_1_1Data_1aeec1ea0d55dd44db207801471be4f09c" kindref="member">State</ref> &gt;</type>
        <definition>std::map&lt;string, State&gt; Brush::Data::Dataset::features</definition>
        <argsstring></argsstring>
        <name>features</name>
        <briefdescription>
<para>dataset features, as key value pairs </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="63" column="18" bodyfile="/home/runner/work/brush/brush/src/data/data.h" bodystart="63" bodyend="-1"/>
        <referencedby refid="dc/d5c/namespaceBrush_1a08d191fd1a609031bd321d66312c988d" compoundref="da/d48/search__space_8cpp" startline="10" endline="37">Brush::generate_terminals</referencedby>
        <referencedby refid="d2/d36/classBrush_1_1Data_1_1Dataset_1a2b7b42b1b16630554b2e49102098a170" compoundref="d2/dbd/data_8h" startline="142" endline="147">get_n_samples</referencedby>
        <referencedby refid="d2/d36/classBrush_1_1Data_1_1Dataset_1a86f779c55c96ff7182b4e649f87fbf24" compoundref="d2/dbd/data_8h" startline="154" endline="159">operator[]</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d2/d36/classBrush_1_1Data_1_1Dataset_1ade105f069d4f745d44374b7b8a3a9b0d" prot="public" static="no" mutable="no">
        <type>ArrayXf</type>
        <definition>ArrayXf Brush::Data::Dataset::y</definition>
        <argsstring></argsstring>
        <name>y</name>
        <briefdescription>
<para>length N array, the target label </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="69" column="17" bodyfile="/home/runner/work/brush/brush/src/data/data.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d36/classBrush_1_1Data_1_1Dataset_1a1a8a1e77afdecb032696bdf38e5c424c" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Brush::Data::Dataset::classification</definition>
        <argsstring></argsstring>
        <name>classification</name>
        <briefdescription>
<para>whether this is a classification problem </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="71" column="14" bodyfile="/home/runner/work/brush/brush/src/data/data.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d36/classBrush_1_1Data_1_1Dataset_1a8a1a428f46a5c80322000f4bef0a09d4" prot="public" static="no" mutable="no">
        <type>std::optional&lt; std::reference_wrapper&lt; const ArrayXXf &gt; &gt;</type>
        <definition>std::optional&lt;std::reference_wrapper&lt;const ArrayXXf&gt; &gt; Brush::Data::Dataset::Xref</definition>
        <argsstring></argsstring>
        <name>Xref</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="72" column="23" bodyfile="/home/runner/work/brush/brush/src/data/data.h" bodystart="72" bodyend="-1"/>
        <referencedby refid="d2/d36/classBrush_1_1Data_1_1Dataset_1a44ebc4ada574ea7a3a843ae74810aac9" compoundref="d2/dbd/data_8h" startline="134" endline="140">get_X</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d2/d36/classBrush_1_1Data_1_1Dataset_1afa676d96150281b2384a07e4a3fcc352" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/d36/classBrush_1_1Data_1_1Dataset" kindref="compound">Dataset</ref></type>
        <definition>Dataset Brush::Data::Dataset::operator()</definition>
        <argsstring>(const vector&lt; size_t &gt; &amp;idx) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const vector&lt; size_t &gt; &amp;</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
<para>return a slice of the data using indices idx </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="74" column="17" bodyfile="/home/runner/work/brush/brush/src/data/data.cpp" bodystart="107" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="d2/d36/classBrush_1_1Data_1_1Dataset_1aacd5afd19b9cee9d9d84e4290eeabb6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Brush::Data::Dataset::init</definition>
        <argsstring>()</argsstring>
        <name>init</name>
        <briefdescription>
<para>call init at the end of constructors to define metafeatures of the data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="77" column="14" bodyfile="/home/runner/work/brush/brush/src/data/data.cpp" bodystart="149" bodyend="168"/>
        <references refid="d9/d1c/namespaceBrush_1_1Data_1a6c00d36ba6aefd852544da96a089754a" compoundref="da/dc9/data_8cpp" startline="64" endline="67">Brush::Data::StateType</references>
        <references refid="d6/d2e/namespaceBrush_1_1Util_1ac697e701ef641df7a4cff481c667c9f7" compoundref="d5/d60/utils_8h" startline="602" endline="607">Brush::Util::unique_insert</references>
        <referencedby refid="d2/d36/classBrush_1_1Data_1_1Dataset_1ae6546575b94db839bd256e19ad936eea" compoundref="d2/dbd/data_8h" startline="86" endline="93">Dataset</referencedby>
      </memberdef>
      <memberdef kind="function" id="d2/d36/classBrush_1_1Data_1_1Dataset_1ab709f6732a1854b45418e7f14dd759ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>map&lt; string, <ref refid="d9/d1c/namespaceBrush_1_1Data_1aeec1ea0d55dd44db207801471be4f09c" kindref="member">State</ref> &gt;</type>
        <definition>map&lt; string, State &gt; Brush::Data::Dataset::make_features</definition>
        <argsstring>(const ArrayXXf &amp;X, const map&lt; string, State &gt; &amp;Z={}, const vector&lt; string &gt; &amp;vn={})</argsstring>
        <name>make_features</name>
        <param>
          <type>const ArrayXXf &amp;</type>
          <declname>X</declname>
        </param>
        <param>
          <type>const map&lt; string, <ref refid="d9/d1c/namespaceBrush_1_1Data_1aeec1ea0d55dd44db207801471be4f09c" kindref="member">State</ref> &gt; &amp;</type>
          <declname>Z</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>const vector&lt; string &gt; &amp;</type>
          <declname>vn</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
<para>turns input data into a feature map </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="80" column="13" bodyfile="/home/runner/work/brush/brush/src/data/data.cpp" bodystart="171" bodyend="213"/>
        <references refid="d9/d1c/namespaceBrush_1_1Data_1a1087f7155f1e2855ed2821058b6ab036" compoundref="da/dc9/data_8cpp" startline="68" endline="104">Brush::Data::check_type</references>
        <references refid="da/d41/error_8h_1aa4c550bcd71e4ec1c97b111e1360509a" compoundref="da/d41/error_8h" startline="24">HANDLE_ERROR_THROW</references>
        <references refid="d6/d2e/namespaceBrush_1_1Util_1a9cd8004de7aab46b7a06f27d440064ed" compoundref="d5/d60/utils_8h" startline="321" endline="326">Brush::Util::to_string</references>
      </memberdef>
      <memberdef kind="function" id="d2/d36/classBrush_1_1Data_1_1Dataset_1ae6546575b94db839bd256e19ad936eea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Brush::Data::Dataset::Dataset</definition>
        <argsstring>(std::map&lt; string, State &gt; &amp;d, const Ref&lt; const ArrayXf &gt; &amp;y_=ArrayXf(), bool c=false)</argsstring>
        <name>Dataset</name>
        <param>
          <type>std::map&lt; string, <ref refid="d9/d1c/namespaceBrush_1_1Data_1aeec1ea0d55dd44db207801471be4f09c" kindref="member">State</ref> &gt; &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type>const Ref&lt; const ArrayXf &gt; &amp;</type>
          <declname>y_</declname>
          <defval>ArrayXf()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>c</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>initialize data from a map. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="86" column="9" bodyfile="/home/runner/work/brush/brush/src/data/data.h" bodystart="86" bodyend="93"/>
        <references refid="d2/d36/classBrush_1_1Data_1_1Dataset_1aacd5afd19b9cee9d9d84e4290eeabb6f" compoundref="da/dc9/data_8cpp" startline="149" endline="168">init</references>
      </memberdef>
      <memberdef kind="function" id="d2/d36/classBrush_1_1Data_1_1Dataset_1a35960657734ec9071c6f4a7e9830d6d0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Brush::Data::Dataset::Dataset</definition>
        <argsstring>(const ArrayXXf &amp;X, const Ref&lt; const ArrayXf &gt; &amp;y_=ArrayXf(), const vector&lt; string &gt; &amp;vn={}, const map&lt; string, State &gt; &amp;Z={}, bool c=false)</argsstring>
        <name>Dataset</name>
        <param>
          <type>const ArrayXXf &amp;</type>
          <declname>X</declname>
        </param>
        <param>
          <type>const Ref&lt; const ArrayXf &gt; &amp;</type>
          <declname>y_</declname>
          <defval>ArrayXf()</defval>
        </param>
        <param>
          <type>const vector&lt; string &gt; &amp;</type>
          <declname>vn</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>const map&lt; string, <ref refid="d9/d1c/namespaceBrush_1_1Data_1aeec1ea0d55dd44db207801471be4f09c" kindref="member">State</ref> &gt; &amp;</type>
          <declname>Z</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>c</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>initialize data from a matrix with feature columns. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="96" column="9" bodyfile="/home/runner/work/brush/brush/src/data/data.h" bodystart="96" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="d2/d36/classBrush_1_1Data_1_1Dataset_1af5283fa3ea1d1aaf543ce9b394e7bf4b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Brush::Data::Dataset::Dataset</definition>
        <argsstring>(const ArrayXXf &amp;X, const vector&lt; string &gt; &amp;vn)</argsstring>
        <name>Dataset</name>
        <param>
          <type>const ArrayXXf &amp;</type>
          <declname>X</declname>
        </param>
        <param>
          <type>const vector&lt; string &gt; &amp;</type>
          <declname>vn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="110" column="9" bodyfile="/home/runner/work/brush/brush/src/data/data.h" bodystart="110" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="d2/d36/classBrush_1_1Data_1_1Dataset_1a59ec8554d617a4a99ba7feec09bdc62c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Brush::Data::Dataset::print</definition>
        <argsstring>() const</argsstring>
        <name>print</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="118" column="14" bodyfile="/home/runner/work/brush/brush/src/data/data.h" bodystart="118" bodyend="133"/>
        <references refid="d2/d36/classBrush_1_1Data_1_1Dataset_1a6edc04702aee605a766f4a79c375d0c6" compoundref="d2/dbd/data_8h" startline="148" endline="148">get_n_features</references>
        <references refid="d2/d36/classBrush_1_1Data_1_1Dataset_1a2b7b42b1b16630554b2e49102098a170" compoundref="d2/dbd/data_8h" startline="142" endline="147">get_n_samples</references>
        <references refid="d6/d2e/namespaceBrush_1_1Util_1a0fca88a717680a76c4b7b9b082675f89" compoundref="d5/d60/utils_8h" startline="455" endline="462">Brush::Util::print</references>
      </memberdef>
      <memberdef kind="function" id="d2/d36/classBrush_1_1Data_1_1Dataset_1a44ebc4ada574ea7a3a843ae74810aac9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Brush::Data::Dataset::get_X</definition>
        <argsstring>() const</argsstring>
        <name>get_X</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="134" column="14" bodyfile="/home/runner/work/brush/brush/src/data/data.h" bodystart="134" bodyend="140"/>
        <references refid="da/d41/error_8h_1aa4c550bcd71e4ec1c97b111e1360509a" compoundref="da/d41/error_8h" startline="24">HANDLE_ERROR_THROW</references>
        <references refid="d2/d36/classBrush_1_1Data_1_1Dataset_1a8a1a428f46a5c80322000f4bef0a09d4" compoundref="d2/dbd/data_8h" startline="72">Xref</references>
      </memberdef>
      <memberdef kind="function" id="d2/d36/classBrush_1_1Data_1_1Dataset_1ace534b17622ccb93170c74f99f30c7fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Brush::Data::Dataset::set_validation</definition>
        <argsstring>(bool v=true)</argsstring>
        <name>set_validation</name>
        <param>
          <type>bool</type>
          <declname>v</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="141" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d2/d36/classBrush_1_1Data_1_1Dataset_1a2b7b42b1b16630554b2e49102098a170" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Brush::Data::Dataset::get_n_samples</definition>
        <argsstring>() const</argsstring>
        <name>get_n_samples</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="142" column="20" bodyfile="/home/runner/work/brush/brush/src/data/data.h" bodystart="142" bodyend="147"/>
        <references refid="d2/d36/classBrush_1_1Data_1_1Dataset_1a23f1c86e056b6806e7fa66c8fe6ea9ff" compoundref="d2/dbd/data_8h" startline="63">features</references>
        <referencedby refid="df/dc1/structBrush_1_1Operator_3_01NodeType_1_1Constant_00_01S_00_01Fit_01_4_1a1309f7a7253c0899447c91ebfee84a3a" compoundref="d7/de0/operator_8h" startline="277" endline="285">Brush::Operator&lt; NodeType::Constant, S, Fit &gt;::eval</referencedby>
        <referencedby refid="d2/d36/classBrush_1_1Data_1_1Dataset_1a59ec8554d617a4a99ba7feec09bdc62c" compoundref="d2/dbd/data_8h" startline="118" endline="133">print</referencedby>
      </memberdef>
      <memberdef kind="function" id="d2/d36/classBrush_1_1Data_1_1Dataset_1a6edc04702aee605a766f4a79c375d0c6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Brush::Data::Dataset::get_n_features</definition>
        <argsstring>() const</argsstring>
        <name>get_n_features</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="148" column="20" bodyfile="/home/runner/work/brush/brush/src/data/data.h" bodystart="148" bodyend="148"/>
        <referencedby refid="df/dc1/structBrush_1_1Operator_3_01NodeType_1_1Constant_00_01S_00_01Fit_01_4_1a1309f7a7253c0899447c91ebfee84a3a" compoundref="d7/de0/operator_8h" startline="277" endline="285">Brush::Operator&lt; NodeType::Constant, S, Fit &gt;::eval</referencedby>
        <referencedby refid="d2/d36/classBrush_1_1Data_1_1Dataset_1a59ec8554d617a4a99ba7feec09bdc62c" compoundref="d2/dbd/data_8h" startline="118" endline="133">print</referencedby>
      </memberdef>
      <memberdef kind="function" id="d2/d36/classBrush_1_1Data_1_1Dataset_1a3a5e9892d57ffee97276bbf30ede2582" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/d36/classBrush_1_1Data_1_1Dataset" kindref="compound">Dataset</ref></type>
        <definition>Dataset Brush::Data::Dataset::get_batch</definition>
        <argsstring>(int batch_size) const</argsstring>
        <name>get_batch</name>
        <param>
          <type>int</type>
          <declname>batch_size</declname>
        </param>
        <briefdescription>
<para>select random subset of data for training weights. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="150" column="17" bodyfile="/home/runner/work/brush/brush/src/data/data.cpp" bodystart="133" bodyend="138"/>
        <references refid="d6/d2e/namespaceBrush_1_1Util_1af7dd70e54015821d96e3a1afed6344ca" compoundref="d2/da9/rnd_8h" startline="151">Brush::Util::r</references>
        <references refid="d2/d2d/classBrush_1_1Util_1_1Rnd_1a5ec3a29d75a9154bbfdf3488db64fb69" compoundref="de/d67/rnd_8cpp" startline="117" endline="123">Brush::Util::Rnd::shuffled_index</references>
      </memberdef>
      <memberdef kind="function" id="d2/d36/classBrush_1_1Data_1_1Dataset_1ade5da9269ebc099385d6f79cf4a53f9f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::array&lt; <ref refid="d2/d36/classBrush_1_1Data_1_1Dataset" kindref="compound">Dataset</ref>, 2 &gt;</type>
        <definition>array&lt; Dataset, 2 &gt; Brush::Data::Dataset::split</definition>
        <argsstring>(const ArrayXb &amp;mask) const</argsstring>
        <name>split</name>
        <param>
          <type>const <ref refid="dc/d5c/namespaceBrush_1a1c0079df772d6e050857327591514810" kindref="member">ArrayXb</ref> &amp;</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="152" column="20" bodyfile="/home/runner/work/brush/brush/src/data/data.cpp" bodystart="140" bodyend="146"/>
        <references refid="d6/d2e/namespaceBrush_1_1Util_1afc397ee448b473fec9502461f3e75eae" compoundref="de/d06/utils_8cpp" startline="405" endline="415">Brush::Util::mask_to_index</references>
      </memberdef>
      <memberdef kind="function" id="d2/d36/classBrush_1_1Data_1_1Dataset_1a86f779c55c96ff7182b4e649f87fbf24" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d9/d1c/namespaceBrush_1_1Data_1aeec1ea0d55dd44db207801471be4f09c" kindref="member">State</ref></type>
        <definition>State Brush::Data::Dataset::operator[]</definition>
        <argsstring>(std::string name) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="154" column="15" bodyfile="/home/runner/work/brush/brush/src/data/data.h" bodystart="154" bodyend="159"/>
        <references refid="d2/d36/classBrush_1_1Data_1_1Dataset_1a23f1c86e056b6806e7fa66c8fe6ea9ff" compoundref="d2/dbd/data_8h" startline="63">features</references>
        <references refid="da/d41/error_8h_1aa4c550bcd71e4ec1c97b111e1360509a" compoundref="da/d41/error_8h" startline="24">HANDLE_ERROR_THROW</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>holds variable type data. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="9">
        <label>std::unordered_map&lt; DataType, vector&lt; string &gt; &gt;</label>
        <childnode refid="8" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>Brush::Data::Dataset</label>
        <link refid="d2/d36/classBrush_1_1Data_1_1Dataset"/>
        <childnode refid="2" relation="usage">
          <edgelabel>y</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>features</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>feature_types</edgelabel>
          <edgelabel>unique_data_types</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>features_of_type</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>std::vector&lt; DataType &gt;</label>
        <childnode refid="8" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>std::vector&lt; string &gt;</label>
        <childnode refid="5" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>ArrayXf</label>
      </node>
      <node id="6">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="8">
        <label>DataType</label>
      </node>
      <node id="4">
        <label>State</label>
      </node>
      <node id="3">
        <label>std::map&lt; string, State &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>std::string</label>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/brush/brush/src/data/data.h" line="46" column="1" bodyfile="/home/runner/work/brush/brush/src/data/data.h" bodystart="47" bodyend="162"/>
    <listofallmembers>
      <member refid="d2/d36/classBrush_1_1Data_1_1Dataset_1a1a8a1e77afdecb032696bdf38e5c424c" prot="public" virt="non-virtual"><scope>Brush::Data::Dataset</scope><name>classification</name></member>
      <member refid="d2/d36/classBrush_1_1Data_1_1Dataset_1ae6546575b94db839bd256e19ad936eea" prot="public" virt="non-virtual"><scope>Brush::Data::Dataset</scope><name>Dataset</name></member>
      <member refid="d2/d36/classBrush_1_1Data_1_1Dataset_1a35960657734ec9071c6f4a7e9830d6d0" prot="public" virt="non-virtual"><scope>Brush::Data::Dataset</scope><name>Dataset</name></member>
      <member refid="d2/d36/classBrush_1_1Data_1_1Dataset_1af5283fa3ea1d1aaf543ce9b394e7bf4b" prot="public" virt="non-virtual"><scope>Brush::Data::Dataset</scope><name>Dataset</name></member>
      <member refid="d2/d36/classBrush_1_1Data_1_1Dataset_1a52d591cce797480e80f8cf1f1482702e" prot="public" virt="non-virtual"><scope>Brush::Data::Dataset</scope><name>feature_types</name></member>
      <member refid="d2/d36/classBrush_1_1Data_1_1Dataset_1a23f1c86e056b6806e7fa66c8fe6ea9ff" prot="public" virt="non-virtual"><scope>Brush::Data::Dataset</scope><name>features</name></member>
      <member refid="d2/d36/classBrush_1_1Data_1_1Dataset_1a652aba735323fddf7bf79407e7e4fc83" prot="public" virt="non-virtual"><scope>Brush::Data::Dataset</scope><name>features_of_type</name></member>
      <member refid="d2/d36/classBrush_1_1Data_1_1Dataset_1a3a5e9892d57ffee97276bbf30ede2582" prot="public" virt="non-virtual"><scope>Brush::Data::Dataset</scope><name>get_batch</name></member>
      <member refid="d2/d36/classBrush_1_1Data_1_1Dataset_1a6edc04702aee605a766f4a79c375d0c6" prot="public" virt="non-virtual"><scope>Brush::Data::Dataset</scope><name>get_n_features</name></member>
      <member refid="d2/d36/classBrush_1_1Data_1_1Dataset_1a2b7b42b1b16630554b2e49102098a170" prot="public" virt="non-virtual"><scope>Brush::Data::Dataset</scope><name>get_n_samples</name></member>
      <member refid="d2/d36/classBrush_1_1Data_1_1Dataset_1a44ebc4ada574ea7a3a843ae74810aac9" prot="public" virt="non-virtual"><scope>Brush::Data::Dataset</scope><name>get_X</name></member>
      <member refid="d2/d36/classBrush_1_1Data_1_1Dataset_1aacd5afd19b9cee9d9d84e4290eeabb6f" prot="public" virt="non-virtual"><scope>Brush::Data::Dataset</scope><name>init</name></member>
      <member refid="d2/d36/classBrush_1_1Data_1_1Dataset_1ab709f6732a1854b45418e7f14dd759ea" prot="public" virt="non-virtual"><scope>Brush::Data::Dataset</scope><name>make_features</name></member>
      <member refid="d2/d36/classBrush_1_1Data_1_1Dataset_1afa676d96150281b2384a07e4a3fcc352" prot="public" virt="non-virtual"><scope>Brush::Data::Dataset</scope><name>operator()</name></member>
      <member refid="d2/d36/classBrush_1_1Data_1_1Dataset_1a86f779c55c96ff7182b4e649f87fbf24" prot="public" virt="non-virtual"><scope>Brush::Data::Dataset</scope><name>operator[]</name></member>
      <member refid="d2/d36/classBrush_1_1Data_1_1Dataset_1a59ec8554d617a4a99ba7feec09bdc62c" prot="public" virt="non-virtual"><scope>Brush::Data::Dataset</scope><name>print</name></member>
      <member refid="d2/d36/classBrush_1_1Data_1_1Dataset_1ace534b17622ccb93170c74f99f30c7fa" prot="public" virt="non-virtual"><scope>Brush::Data::Dataset</scope><name>set_validation</name></member>
      <member refid="d2/d36/classBrush_1_1Data_1_1Dataset_1ade5da9269ebc099385d6f79cf4a53f9f" prot="public" virt="non-virtual"><scope>Brush::Data::Dataset</scope><name>split</name></member>
      <member refid="d2/d36/classBrush_1_1Data_1_1Dataset_1a96fc30b35f152f425377e1ae34398779" prot="public" virt="non-virtual"><scope>Brush::Data::Dataset</scope><name>unique_data_types</name></member>
      <member refid="d2/d36/classBrush_1_1Data_1_1Dataset_1a8a1a428f46a5c80322000f4bef0a09d4" prot="public" virt="non-virtual"><scope>Brush::Data::Dataset</scope><name>Xref</name></member>
      <member refid="d2/d36/classBrush_1_1Data_1_1Dataset_1ade105f069d4f745d44374b7b8a3a9b0d" prot="public" virt="non-virtual"><scope>Brush::Data::Dataset</scope><name>y</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
