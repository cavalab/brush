<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="df/d62/nsga2_8py" kind="file" language="Python">
    <compoundname>nsga2.py</compoundname>
    <innernamespace refid="d1/d49/namespacebrush_1_1deap__api_1_1nsga2">brush::deap_api::nsga2</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="d1/d49/namespacebrush_1_1deap__api_1_1nsga2" refkind="compound"><highlight class="keyword">from</highlight><highlight class="normal"><sp/>deap<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>tools<sp/></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>deap.benchmarks.tools<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>diversity,<sp/>convergence,<sp/>hypervolume</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>random</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6" refid="d1/d49/namespacebrush_1_1deap__api_1_1nsga2_1a28c2ecf4b42f4456d964b7a6adce55e0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d1/d49/namespacebrush_1_1deap__api_1_1nsga2_1a28c2ecf4b42f4456d964b7a6adce55e0" kindref="member">nsga2</ref>(toolbox,<sp/>NGEN,<sp/>MU,<sp/>CXPB,<sp/>verbosity):</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>NGEN<sp/>=<sp/>250</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>MU<sp/>=<sp/>100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>CXPB<sp/>=<sp/>0.9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>stats<sp/>=<sp/>tools.Statistics(</highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>ind:<sp/>ind.fitness.values)</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>stats.register(</highlight><highlight class="stringliteral">&quot;ave&quot;</highlight><highlight class="normal">,<sp/>np.mean,<sp/>axis=0)</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>stats.register(</highlight><highlight class="stringliteral">&quot;std&quot;</highlight><highlight class="normal">,<sp/>np.std,<sp/>axis=0)</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>stats.register(</highlight><highlight class="stringliteral">&quot;min&quot;</highlight><highlight class="normal">,<sp/>np.min,<sp/>axis=0)</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>stats.register(&quot;max&quot;,<sp/>np.max,<sp/>axis=0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>logbook<sp/>=<sp/>tools.Logbook()</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>logbook.header<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;gen&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;evals&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ave&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;std&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;min&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>pop<sp/>=<sp/>toolbox.population(n=MU)</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Evaluate<sp/>the<sp/>individuals<sp/>with<sp/>an<sp/>invalid<sp/>fitness</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>invalid_ind<sp/>=<sp/>[ind<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ind<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>pop<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>ind.fitness.valid]</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>fitnesses<sp/>=<sp/>toolbox.map(toolbox.evaluate,<sp/>invalid_ind)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ind,<sp/>fit<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>zip(invalid_ind,<sp/>fitnesses):</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ind.fitness.values<sp/>=<sp/>fit</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>This<sp/>is<sp/>just<sp/>to<sp/>assign<sp/>the<sp/>crowding<sp/>distance<sp/>to<sp/>the<sp/>individuals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>no<sp/>actual<sp/>selection<sp/>is<sp/>done</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>pop<sp/>=<sp/>toolbox.survive(pop,<sp/>len(pop))</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>record<sp/>=<sp/>stats.compile(pop)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>logbook.record(gen=0,<sp/>evals=len(invalid_ind),<sp/>**record)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>verbosity<sp/>&gt;<sp/>0:<sp/></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d6/d2e/namespaceBrush_1_1Util_1a0fca88a717680a76c4b7b9b082675f89" kindref="member">print</ref>(logbook.stream)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Begin<sp/>the<sp/>generational<sp/>process</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>gen<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(1,<sp/>NGEN):</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Vary<sp/>the<sp/>population</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>offspring<sp/>=<sp/>tools.selTournamentDCD(pop,<sp/>len(pop))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parents<sp/>=<sp/>toolbox.select(pop,<sp/>len(pop))</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>offspring<sp/>=<sp/>[toolbox.clone(ind)<sp/>for<sp/>ind<sp/>in<sp/>offspring]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offspring<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ind1,<sp/>ind2<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>zip(parents[::2],<sp/>parents[1::2]):</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>random.random()<sp/>&lt;=<sp/>CXPB:</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ind1,<sp/>ind2<sp/>=<sp/>toolbox.mate(ind1,<sp/>ind2)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>off1<sp/>=<sp/>toolbox.mutate(ind1)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>off2<sp/>=<sp/>toolbox.mutate(ind2)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>del<sp/>ind1.fitness.values,<sp/>ind2.fitness.values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offspring.extend([off2,<sp/>off2])</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>archive.update(offspring)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Evaluate<sp/>the<sp/>individuals<sp/>with<sp/>an<sp/>invalid<sp/>fitness</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>invalid_ind<sp/>=<sp/>[ind<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ind<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>offspring<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>ind.fitness.valid]</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fitnesses<sp/>=<sp/>toolbox.map(toolbox.evaluate,<sp/>invalid_ind)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ind,<sp/>fit<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>zip(invalid_ind,<sp/>fitnesses):</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ind.fitness.values<sp/>=<sp/>fit</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Select<sp/>the<sp/>next<sp/>generation<sp/>population</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pop<sp/>=<sp/>toolbox.survive(pop<sp/>+<sp/>offspring,<sp/>MU)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>record<sp/>=<sp/>stats.compile(pop)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logbook.record(gen=gen,<sp/>evals=len(invalid_ind),<sp/>**record)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>verbosity<sp/>&gt;<sp/>0:<sp/></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d6/d2e/namespaceBrush_1_1Util_1a0fca88a717680a76c4b7b9b082675f89" kindref="member">print</ref>(logbook.stream)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>verbosity<sp/>&gt;<sp/>0:<sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d6/d2e/namespaceBrush_1_1Util_1a0fca88a717680a76c4b7b9b082675f89" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;Final<sp/>population<sp/>hypervolume<sp/>is<sp/>%f&quot;</highlight><highlight class="normal"><sp/>%<sp/>hypervolume(pop,<sp/>[1000.0,<sp/>50.0]))</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>archive<sp/>=<sp/>tools.ParetoFront()<sp/></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>archive.update(pop)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>archive,<sp/>logbook</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/brush/brush/src/brush/deap_api/nsga2.py"/>
  </compounddef>
</doxygen>
