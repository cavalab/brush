<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="d1/da6/tree__node_8h" kind="file" language="C++">
    <compoundname>tree_node.h</compoundname>
    <includes local="no">tuple</includes>
    <includes local="no">unordered_map</includes>
    <includes refid="d8/dc0/init_8h" local="yes">../init.h</includes>
    <includes refid="d2/dbd/data_8h" local="yes">../data/data.h</includes>
    <includes refid="d1/d77/node_8h" local="yes">node.h</includes>
    <includes refid="d8/d5c/functions_8h" local="yes">functions.h</includes>
    <includes refid="de/d26/nodetype_8h" local="yes">nodetype.h</includes>
    <includes local="yes">../../thirdparty/tree.hh</includes>
    <includes refid="df/d61/dispatch__table_8h" local="yes">dispatch_table.h</includes>
    <includedby refid="d7/de0/operator_8h" local="yes">operator.h</includedby>
    <includedby refid="d1/dea/program_8h" local="yes">program.h</includedby>
    <includedby refid="dd/d06/tree__node_8cpp" local="yes">tree_node.cpp</includedby>
    <includedby refid="d9/d99/search__space_8h" local="yes">search_space.h</includedby>
    <incdepgraph>
      <node id="31">
        <label>../util/logger.h</label>
        <link refid="d1/d8c/logger_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>functional</label>
      </node>
      <node id="16">
        <label>fmt/format.h</label>
      </node>
      <node id="34">
        <label>limits</label>
      </node>
      <node id="29">
        <label>iterator</label>
      </node>
      <node id="27">
        <label>error.h</label>
        <link refid="da/d41/error_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>stdint.h</label>
      </node>
      <node id="20">
        <label>variant</label>
      </node>
      <node id="35">
        <label>timeseries.h</label>
        <link refid="d9/df7/timeseries_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>cmath</label>
      </node>
      <node id="15">
        <label>fmt/ostream.h</label>
      </node>
      <node id="10">
        <label>numeric</label>
      </node>
      <node id="14">
        <label>string</label>
      </node>
      <node id="11">
        <label>map</label>
      </node>
      <node id="32">
        <label>../util/rnd.h</label>
        <link refid="d2/da9/rnd_8h"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>signatures.h</label>
        <link refid="d8/d8b/signatures_8h"/>
      </node>
      <node id="9">
        <label>fstream</label>
      </node>
      <node id="26">
        <label>ostream</label>
      </node>
      <node id="19">
        <label>types.h</label>
        <link refid="d9/d49/types_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>random</label>
      </node>
      <node id="6">
        <label>Eigen/Dense</label>
      </node>
      <node id="39">
        <label>bitset</label>
      </node>
      <node id="2">
        <label>tuple</label>
      </node>
      <node id="17">
        <label>fmt/ranges.h</label>
      </node>
      <node id="36">
        <label>optional</label>
      </node>
      <node id="13">
        <label>vector</label>
      </node>
      <node id="23">
        <label>../data/data.h</label>
        <link refid="d2/dbd/data_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>../init.h</label>
        <link refid="d8/dc0/init_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>utility</label>
      </node>
      <node id="47">
        <label>dispatch_table.h</label>
        <link refid="df/d61/dispatch__table_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>iostream</label>
      </node>
      <node id="48">
        <label>cstddef</label>
      </node>
      <node id="24">
        <label>../util/utils.h</label>
        <link refid="d5/d60/utils_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>unordered_map</label>
      </node>
      <node id="21">
        <label>ceres/jet.h</label>
      </node>
      <node id="37">
        <label>node.h</label>
        <link refid="d1/d77/node_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>execution</label>
      </node>
      <node id="25">
        <label>chrono</label>
      </node>
      <node id="46">
        <label>../../thirdparty/tree.hh</label>
      </node>
      <node id="22">
        <label>concepts</label>
      </node>
      <node id="40">
        <label>type_traits</label>
      </node>
      <node id="12">
        <label>set</label>
      </node>
      <node id="18">
        <label>nlohmann/json.hpp</label>
      </node>
      <node id="43">
        <label>functions.h</label>
        <link refid="d8/d5c/functions_8h"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>tree_node.h</label>
        <link refid="d1/da6/tree__node_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>nodetype.h</label>
        <link refid="de/d26/nodetype_8h"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>memory</label>
      </node>
      <node id="28">
        <label>typeindex</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="6">
        <label>bind_programs.h</label>
        <link refid="d6/d3f/bind__programs_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>tree_node.cpp</label>
        <link refid="dd/d06/tree__node_8cpp"/>
      </node>
      <node id="4">
        <label>split.cpp</label>
        <link refid="d4/d59/split_8cpp"/>
      </node>
      <node id="8">
        <label>bind_search_space.cpp</label>
        <link refid="d0/d94/bind__search__space_8cpp"/>
      </node>
      <node id="11">
        <label>search_space.h</label>
        <link refid="d9/d99/search__space_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>dispatch_table.cpp</label>
        <link refid="df/d47/dispatch__table_8cpp"/>
      </node>
      <node id="9">
        <label>search_space.cpp</label>
        <link refid="da/d48/search__space_8cpp"/>
      </node>
      <node id="7">
        <label>bind_programs.cpp</label>
        <link refid="d9/d26/bind__programs_8cpp"/>
      </node>
      <node id="5">
        <label>program.h</label>
        <link refid="d1/dea/program_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>tree_node.h</label>
        <link refid="d1/da6/tree__node_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>operator.h</label>
        <link refid="d7/de0/operator_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="dc/d90/classtree__node___3_01Node_01_4" prot="public">tree_node_&lt; Node &gt;</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="d1/da6/tree__node_8h_1a5d0d9e773ca46763fb1b1152cafc4179" prot="public" static="no">
        <type>class <ref refid="d0/d0e/classtree__node__" kindref="compound">tree_node_</ref>&lt; <ref refid="d1/d3a/structBrush_1_1Node" kindref="compound">Node</ref> &gt;</type>
        <definition>using TreeNode =  class tree_node_&lt;Node&gt;</definition>
        <argsstring></argsstring>
        <name>TreeNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/program/tree_node.h" line="53" column="1" bodyfile="/home/runner/work/brush/brush/src/program/tree_node.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="d1/da6/tree__node_8h_1a4b537f5026a687f8a9c19df48f05cf79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void to_json</definition>
        <argsstring>(json &amp;j, const tree&lt; Node &gt; &amp;t)</argsstring>
        <name>to_json</name>
        <param>
          <type>json &amp;</type>
          <declname>j</declname>
        </param>
        <param>
          <type>const tree&lt; <ref refid="d1/d3a/structBrush_1_1Node" kindref="compound">Node</ref> &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/program/tree_node.h" line="82" column="6" bodyfile="/home/runner/work/brush/brush/src/program/tree_node.cpp" bodystart="47" bodyend="55" declfile="/home/runner/work/brush/brush/src/program/tree_node.h" declline="82" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="d1/da6/tree__node_8h_1a3fc3c974a33ae40a1182f771a9a4c7d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void from_json</definition>
        <argsstring>(const json &amp;j, tree&lt; Node &gt; &amp;t)</argsstring>
        <name>from_json</name>
        <param>
          <type>const json &amp;</type>
          <declname>j</declname>
        </param>
        <param>
          <type>tree&lt; <ref refid="d1/d3a/structBrush_1_1Node" kindref="compound">Node</ref> &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>load a tree from json. uses a stack. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>json version of tree. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>tree into which data is loaded. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/program/tree_node.h" line="83" column="6" bodyfile="/home/runner/work/brush/brush/src/program/tree_node.cpp" bodystart="60" bodyend="78" declfile="/home/runner/work/brush/brush/src/program/tree_node.h" declline="83" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>TREE_NODE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TREE_NODE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tuple&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../init.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../data/data.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d1/d77/node_8h" kindref="compound">node.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d8/d5c/functions_8h" kindref="compound">functions.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="de/d26/nodetype_8h" kindref="compound">nodetype.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../thirdparty/tree.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::string;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="d2/d36/classBrush_1_1Data_1_1Dataset" kindref="compound">Brush::Data::Dataset</ref>;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="d1/d3a/structBrush_1_1Node" kindref="compound">Brush::Node</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="22" refid="dc/d90/classtree__node___3_01Node_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d0/d0e/classtree__node__" kindref="compound">tree_node_</ref>&lt;<ref refid="d1/d3a/structBrush_1_1Node" kindref="compound">Node</ref>&gt;<sp/>{<sp/></highlight><highlight class="comment">//<sp/>size:<sp/>5*4=20<sp/>bytes<sp/>(on<sp/>32<sp/>bit<sp/>arch),<sp/>can<sp/>be<sp/>reduced<sp/>by<sp/>8.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="24" refid="dc/d90/classtree__node___3_01Node_01_4_1abb8174df1cf1bcc656c4177226bfb354" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/d90/classtree__node___3_01Node_01_4_1abb8174df1cf1bcc656c4177226bfb354" kindref="member">tree_node_</ref>()</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>parent(0),<sp/>first_child(0),<sp/>last_child(0),<sp/>prev_sibling(0),<sp/>next_sibling(0)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="dc/d90/classtree__node___3_01Node_01_4_1a593c13bec5f05c5f9d418240ef7db3cb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/d90/classtree__node___3_01Node_01_4_1a593c13bec5f05c5f9d418240ef7db3cb" kindref="member">tree_node_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/d3a/structBrush_1_1Node" kindref="compound">Node</ref>&amp;<sp/>val)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>parent(0),<sp/>first_child(0),<sp/>last_child(0),<sp/>prev_sibling(0),<sp/>next_sibling(0),<sp/>data(val)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="dc/d90/classtree__node___3_01Node_01_4_1aaf4dfc44e325680e2aaecc6f795944de" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/d90/classtree__node___3_01Node_01_4_1aaf4dfc44e325680e2aaecc6f795944de" kindref="member">tree_node_</ref>(<ref refid="d1/d3a/structBrush_1_1Node" kindref="compound">Node</ref>&amp;&amp;<sp/>val)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>parent(0),<sp/>first_child(0),<sp/>last_child(0),<sp/>prev_sibling(0),<sp/>next_sibling(0),<sp/>data(val)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="dc/d90/classtree__node___3_01Node_01_4_1a94e2e33eea46345ef22d714e8d6b535f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/d90/classtree__node___3_01Node_01_4" kindref="compound">tree_node_&lt;Node&gt;</ref><sp/>*<ref refid="dc/d90/classtree__node___3_01Node_01_4_1a94e2e33eea46345ef22d714e8d6b535f" kindref="member">parent</ref>;</highlight></codeline>
<codeline lineno="37" refid="dc/d90/classtree__node___3_01Node_01_4_1ae7284cff9353b8dd4d599a21130ac432" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/d90/classtree__node___3_01Node_01_4" kindref="compound">tree_node_&lt;Node&gt;</ref><sp/>*<ref refid="dc/d90/classtree__node___3_01Node_01_4_1ae7284cff9353b8dd4d599a21130ac432" kindref="member">first_child</ref>,<sp/>*last_child;</highlight></codeline>
<codeline lineno="38" refid="dc/d90/classtree__node___3_01Node_01_4_1af6a613c4ca33bb0da349f2f25e857beb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/d90/classtree__node___3_01Node_01_4" kindref="compound">tree_node_&lt;Node&gt;</ref><sp/>*prev_sibling,<sp/>*<ref refid="dc/d90/classtree__node___3_01Node_01_4_1af6a613c4ca33bb0da349f2f25e857beb" kindref="member">next_sibling</ref>;</highlight></codeline>
<codeline lineno="39" refid="dc/d90/classtree__node___3_01Node_01_4_1a868879d19d0ba329bcf2996ffd71e740" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/d3a/structBrush_1_1Node" kindref="compound">Node</ref><sp/><ref refid="dc/d90/classtree__node___3_01Node_01_4_1a868879d19d0ba329bcf2996ffd71e740" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="42" refid="dc/d90/classtree__node___3_01Node_01_4_1a0dfec2ce7f43ba74641899bcd3e3ffed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="dc/d90/classtree__node___3_01Node_01_4_1a0dfec2ce7f43ba74641899bcd3e3ffed" kindref="member">fit</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d2/d36/classBrush_1_1Data_1_1Dataset" kindref="compound">Dataset</ref>&amp;<sp/>d);<sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight></codeline>
<codeline lineno="45" refid="dc/d90/classtree__node___3_01Node_01_4_1a461ca791befcd51a9c3d6edb1fe5a620" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="dc/d90/classtree__node___3_01Node_01_4_1a461ca791befcd51a9c3d6edb1fe5a620" kindref="member">predict</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d2/d36/classBrush_1_1Data_1_1Dataset" kindref="compound">Dataset</ref>&amp;<sp/>d,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">**<sp/>weights=</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>W&gt;</highlight></codeline>
<codeline lineno="48" refid="dc/d90/classtree__node___3_01Node_01_4_1a66eee7995ee557a45519f6e8e6f830ca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="dc/d90/classtree__node___3_01Node_01_4_1a66eee7995ee557a45519f6e8e6f830ca" kindref="member">predict</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d2/d36/classBrush_1_1Data_1_1Dataset" kindref="compound">Dataset</ref>&amp;<sp/>d,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>W**<sp/>weights);<sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="dc/d90/classtree__node___3_01Node_01_4_1a4419d3fd481991863578783f286eab93" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="dc/d90/classtree__node___3_01Node_01_4_1a4419d3fd481991863578783f286eab93" kindref="member">get_model</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pretty=</highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51" refid="dc/d90/classtree__node___3_01Node_01_4_1a60f975dbb46739a9aaf7a7466ab13eda" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="dc/d90/classtree__node___3_01Node_01_4_1a60f975dbb46739a9aaf7a7466ab13eda" kindref="member">get_tree_model</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pretty=</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>offset=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal">};<sp/></highlight></codeline>
<codeline lineno="53" refid="d1/da6/tree__node_8h_1a5d0d9e773ca46763fb1b1152cafc4179" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="df/d61/dispatch__table_8h_1a5d0d9e773ca46763fb1b1152cafc4179" kindref="member">TreeNode</ref><sp/>=<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d0/d0e/classtree__node__" kindref="compound">tree_node_</ref>&lt;<ref refid="d1/d3a/structBrush_1_1Node" kindref="compound">Node</ref>&gt;;<sp/></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="comment">//<sp/>fit,<sp/>eval,<sp/>predict</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="df/d61/dispatch__table_8h" kindref="compound">dispatch_table.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>TreeNode::fit(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d2/d36/classBrush_1_1Data_1_1Dataset" kindref="compound">Dataset</ref>&amp;<sp/>d)</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>F<sp/>=<sp/><ref refid="dc/d5c/namespaceBrush_1ab00cdf5cac845f372ec06d02f7a316b5" kindref="member">dtable_fit</ref>.template<sp/>Get&lt;T&gt;(data.node_type,<sp/>data.sig_hash);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>F(d,<sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="65"><highlight class="normal">};</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>TreeNode::predict(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d2/d36/classBrush_1_1Data_1_1Dataset" kindref="compound">Dataset</ref>&amp;<sp/>d,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">**<sp/>weights)</highlight></codeline>
<codeline lineno="69"><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>F<sp/>=<sp/><ref refid="dc/d5c/namespaceBrush_1a175d0497be0c922c453075fed37ecec0" kindref="member">dtable_predict</ref>.template<sp/>Get&lt;T&gt;(data.node_type,<sp/>data.sig_hash);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>F(d,<sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">),<sp/>weights);</highlight></codeline>
<codeline lineno="72"><highlight class="normal">};</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>W&gt;<sp/></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>TreeNode::predict(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d2/d36/classBrush_1_1Data_1_1Dataset" kindref="compound">Dataset</ref>&amp;<sp/>d,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>W**<sp/>weights)</highlight></codeline>
<codeline lineno="76"><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>F<sp/>=<sp/><ref refid="dc/d5c/namespaceBrush_1a175d0497be0c922c453075fed37ecec0" kindref="member">dtable_predict</ref>.template<sp/>Get&lt;T&gt;(data.node_type,<sp/>data.sig_dual_hash);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>F(d,<sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">),<sp/>weights);</highlight></codeline>
<codeline lineno="79"><highlight class="normal">};</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">//<sp/>serialization<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d1/da6/tree__node_8h_1a4b537f5026a687f8a9c19df48f05cf79" kindref="member">to_json</ref>(json<sp/>&amp;j,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tree&lt;Node&gt;<sp/>&amp;t);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d1/da6/tree__node_8h_1a3fc3c974a33ae40a1182f771a9a4c7d1" kindref="member">from_json</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>json<sp/>&amp;j,<sp/>tree&lt;Node&gt;<sp/>&amp;t);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">//<sp/>namespace<sp/>node{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>template&lt;NodeType<sp/>NT=0&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>string<sp/>get_model(const<sp/>Node&amp;<sp/>data,<sp/>const<sp/>vector&lt;string&gt;&amp;<sp/>children)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>string<sp/>args<sp/>=<sp/>&quot;&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>children.size();<sp/>++i){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args<sp/>+=<sp/>children.at(i);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(i<sp/>&lt;<sp/>children.size()-1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args<sp/>+=<sp/>&quot;,&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>fmt::format(&quot;{}({})&quot;,<sp/>data.get_name(),<sp/>args);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>template&lt;&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>string<sp/>get_model&lt;NodeType::SplitBest&gt;(const<sp/>Node&amp;<sp/>data,<sp/>const<sp/>vector&lt;string&gt;&amp;<sp/>children)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>fmt::format(&quot;IF-THEN-ELSE({}&gt;{:.3f},{},{})&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.get_feature(),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.W,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>children.at(0),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>children.at(1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>template&lt;&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>string<sp/>get_model&lt;NodeType::SplitOn&gt;(const<sp/>Node&amp;<sp/>data,<sp/>const<sp/>vector&lt;string&gt;&amp;<sp/>children)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>fmt::format(&quot;IF-THEN-ELSE({}&gt;{:.3f},{},{})&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>children.at(0),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.W,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>children.at(1),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>children.at(2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/brush/brush/src/program/tree_node.h"/>
  </compounddef>
</doxygen>
