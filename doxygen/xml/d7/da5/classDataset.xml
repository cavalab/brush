<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="d7/da5/classDataset" kind="class" language="C++" prot="public">
    <compoundname>Dataset</compoundname>
    <includes refid="d2/dbd/data_8h" local="no">data.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d7/da5/classDataset_1a4112a2cb86ce4138c3c4bea966c96b65" prot="private" static="no" mutable="no">
        <type><ref refid="d7/dfc/classvector" kindref="compound">vector</ref>&lt; size_t &gt;</type>
        <definition>vector&lt;size_t&gt; Brush::Data::Dataset::training_data_idx</definition>
        <argsstring></argsstring>
        <name>training_data_idx</name>
        <qualifiedname>Dataset::training_data_idx</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="57" column="16" bodyfile="/home/runner/work/brush/brush/src/data/data.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d7/da5/classDataset_1ab8f3010fa3099efe3aac8fcd3140faf6" prot="private" static="no" mutable="no">
        <type><ref refid="d7/dfc/classvector" kindref="compound">vector</ref>&lt; size_t &gt;</type>
        <definition>vector&lt;size_t&gt; Brush::Data::Dataset::validation_data_idx</definition>
        <argsstring></argsstring>
        <name>validation_data_idx</name>
        <qualifiedname>Dataset::validation_data_idx</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="58" column="16" bodyfile="/home/runner/work/brush/brush/src/data/data.h" bodystart="58" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="d7/da5/classDataset_1a96fc30b35f152f425377e1ae34398779" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="dc/d5c/namespaceBrush_1a3f2c9b744330ba4a561ac72f048a1a5f" kindref="member">DataType</ref> &gt;</type>
        <definition>std::vector&lt;DataType&gt; Brush::Data::Dataset::unique_data_types</definition>
        <argsstring></argsstring>
        <name>unique_data_types</name>
        <qualifiedname>Dataset::unique_data_types</qualifiedname>
        <briefdescription>
<para>keeps track of the unique data types in the dataset. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="62" column="21" bodyfile="/home/runner/work/brush/brush/src/data/data.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d7/da5/classDataset_1a52d591cce797480e80f8cf1f1482702e" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="dc/d5c/namespaceBrush_1a3f2c9b744330ba4a561ac72f048a1a5f" kindref="member">DataType</ref> &gt;</type>
        <definition>std::vector&lt;DataType&gt; Brush::Data::Dataset::feature_types</definition>
        <argsstring></argsstring>
        <name>feature_types</name>
        <qualifiedname>Dataset::feature_types</qualifiedname>
        <briefdescription>
<para>types of data in the features. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="65" column="21" bodyfile="/home/runner/work/brush/brush/src/data/data.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d7/da5/classDataset_1a8b9d0d635516aa675f9783d7c6ab1b72" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="d5/d92/classstring" kindref="compound">string</ref> &gt;</type>
        <definition>std::vector&lt;string&gt; Brush::Data::Dataset::feature_names</definition>
        <argsstring></argsstring>
        <name>feature_names</name>
        <qualifiedname>Dataset::feature_names</qualifiedname>
        <briefdescription>
<para>names of the feature types as string representations. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="68" column="21" bodyfile="/home/runner/work/brush/brush/src/data/data.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d7/da5/classDataset_1a652aba735323fddf7bf79407e7e4fc83" prot="public" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="dc/d5c/namespaceBrush_1a3f2c9b744330ba4a561ac72f048a1a5f" kindref="member">DataType</ref>, <ref refid="d7/dfc/classvector" kindref="compound">vector</ref>&lt; <ref refid="d5/d92/classstring" kindref="compound">string</ref> &gt; &gt;</type>
        <definition>std::unordered_map&lt;DataType,vector&lt;string&gt; &gt; Brush::Data::Dataset::features_of_type</definition>
        <argsstring></argsstring>
        <name>features_of_type</name>
        <qualifiedname>Dataset::features_of_type</qualifiedname>
        <briefdescription>
<para>map from data types to features having that type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="71" column="28" bodyfile="/home/runner/work/brush/brush/src/data/data.h" bodystart="71" bodyend="-1"/>
        <referencedby refid="de/dd1/namespaceSplit_1aafc092b8203061cdffb0278bc56ac377" compoundref="d4/df2/split_8h" startline="118" endline="153">Split::get_best_threshold_by_type</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d7/da5/classDataset_1a23f1c86e056b6806e7fa66c8fe6ea9ff" prot="public" static="no" mutable="no">
        <type>std::map&lt; <ref refid="d5/d92/classstring" kindref="compound">string</ref>, <ref refid="d4/d59/split_8cpp_1aeec1ea0d55dd44db207801471be4f09c" kindref="member">State</ref> &gt;</type>
        <definition>std::map&lt;string, State&gt; Brush::Data::Dataset::features</definition>
        <argsstring></argsstring>
        <name>features</name>
        <qualifiedname>Dataset::features</qualifiedname>
        <briefdescription>
<para>dataset features, as key value pairs </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="74" column="18" bodyfile="/home/runner/work/brush/brush/src/data/data.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d7/da5/classDataset_1ade105f069d4f745d44374b7b8a3a9b0d" prot="public" static="no" mutable="no">
        <type>ArrayXf</type>
        <definition>ArrayXf Brush::Data::Dataset::y</definition>
        <argsstring></argsstring>
        <name>y</name>
        <qualifiedname>Dataset::y</qualifiedname>
        <briefdescription>
<para>length N array, the target label </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="80" column="17" bodyfile="/home/runner/work/brush/brush/src/data/data.h" bodystart="80" bodyend="-1"/>
        <referencedby refid="d3/df2/structOperator_3_01NT_00_01S_00_01Fit_00_01enable__if__t_3_01is__in__v_3_01NT_00_01NodeType_1_1Se4750a8ecc1d24ba81c8da2bd5c73a14_1a771c7574933c9720bdb9fb2e51571bbd" compoundref="d4/df2/split_8h" startline="228" endline="266">Operator&lt; NT, S, Fit, enable_if_t&lt; is_in_v&lt; NT, NodeType::SplitOn, NodeType::SplitBest &gt; &gt; &gt;::fit</referencedby>
        <referencedby refid="de/dd1/namespaceSplit_1aafc092b8203061cdffb0278bc56ac377" compoundref="d4/df2/split_8h" startline="118" endline="153">Split::get_best_threshold_by_type</referencedby>
        <referencedby refid="da/d4c/classBrush_1_1Eval_1_1Scorer_1a3797d5ee458a9b91b165b53a8e53cbf6" compoundref="da/d3b/scorer_8h" startline="63" endline="68">Brush::Eval::Scorer&lt; P &gt;::score</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d7/da5/classDataset_1a1a8a1e77afdecb032696bdf38e5c424c" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Brush::Data::Dataset::classification</definition>
        <argsstring></argsstring>
        <name>classification</name>
        <qualifiedname>Dataset::classification</qualifiedname>
        <briefdescription>
<para>whether this is a classification problem </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="83" column="14" bodyfile="/home/runner/work/brush/brush/src/data/data.h" bodystart="83" bodyend="-1"/>
        <referencedby refid="d3/df2/structOperator_3_01NT_00_01S_00_01Fit_00_01enable__if__t_3_01is__in__v_3_01NT_00_01NodeType_1_1Se4750a8ecc1d24ba81c8da2bd5c73a14_1a771c7574933c9720bdb9fb2e51571bbd" compoundref="d4/df2/split_8h" startline="228" endline="266">Operator&lt; NT, S, Fit, enable_if_t&lt; is_in_v&lt; NT, NodeType::SplitOn, NodeType::SplitBest &gt; &gt; &gt;::fit</referencedby>
        <referencedby refid="de/dd1/namespaceSplit_1aafc092b8203061cdffb0278bc56ac377" compoundref="d4/df2/split_8h" startline="118" endline="153">Split::get_best_threshold_by_type</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d7/da5/classDataset_1a8a1a428f46a5c80322000f4bef0a09d4" prot="public" static="no" mutable="no">
        <type>std::optional&lt; std::reference_wrapper&lt; const ArrayXXf &gt; &gt;</type>
        <definition>std::optional&lt;std::reference_wrapper&lt;const ArrayXXf&gt; &gt; Brush::Data::Dataset::Xref</definition>
        <argsstring></argsstring>
        <name>Xref</name>
        <qualifiedname>Dataset::Xref</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="84" column="23" bodyfile="/home/runner/work/brush/brush/src/data/data.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d7/da5/classDataset_1aae2b4b532ccc55a95f65b75a5cd9e176" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float Brush::Data::Dataset::validation_size</definition>
        <argsstring></argsstring>
        <name>validation_size</name>
        <qualifiedname>Dataset::validation_size</qualifiedname>
        <briefdescription>
<para>percentage of original data used for train. if 0.0, then all data is used for train and validation </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="87" column="15" bodyfile="/home/runner/work/brush/brush/src/data/data.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d7/da5/classDataset_1a6cadfbd9f8a4700361e63defb7d6f6e0" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Brush::Data::Dataset::use_validation</definition>
        <argsstring></argsstring>
        <name>use_validation</name>
        <qualifiedname>Dataset::use_validation</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="88" column="14" bodyfile="/home/runner/work/brush/brush/src/data/data.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d7/da5/classDataset_1a47efbb19e4ca04538d4ef04f0a87d856" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Brush::Data::Dataset::shuffle_split</definition>
        <argsstring></argsstring>
        <name>shuffle_split</name>
        <qualifiedname>Dataset::shuffle_split</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="89" column="14" bodyfile="/home/runner/work/brush/brush/src/data/data.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d7/da5/classDataset_1a6ac1f4f56991e43a782dd519c414916a" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float Brush::Data::Dataset::batch_size</definition>
        <argsstring></argsstring>
        <name>batch_size</name>
        <qualifiedname>Dataset::batch_size</qualifiedname>
        <briefdescription>
<para>percentage of training data size to use in each batch. if 1.0, then all data is used </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="92" column="15" bodyfile="/home/runner/work/brush/brush/src/data/data.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d7/da5/classDataset_1a8cba7a5f962538d67012264fb6c97ed4" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Brush::Data::Dataset::use_batch</definition>
        <argsstring></argsstring>
        <name>use_batch</name>
        <qualifiedname>Dataset::use_batch</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="93" column="14" bodyfile="/home/runner/work/brush/brush/src/data/data.h" bodystart="93" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="d7/da5/classDataset_1afa676d96150281b2384a07e4a3fcc352" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/d36/classBrush_1_1Data_1_1Dataset" kindref="compound">Dataset</ref></type>
        <definition>Dataset Brush::Data::Dataset::operator()</definition>
        <argsstring>(const vector&lt; size_t &gt; &amp;idx) const</argsstring>
        <name>operator()</name>
        <qualifiedname>Dataset::operator()</qualifiedname>
        <param>
          <type>const <ref refid="d7/dfc/classvector" kindref="compound">vector</ref>&lt; size_t &gt; &amp;</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
<para>return a slice of the data using indices idx </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="95" column="17" bodyfile="/home/runner/work/brush/brush/src/data/data.cpp" bodystart="139" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="d7/da5/classDataset_1aacd5afd19b9cee9d9d84e4290eeabb6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Brush::Data::Dataset::init</definition>
        <argsstring>()</argsstring>
        <name>init</name>
        <qualifiedname>Dataset::init</qualifiedname>
        <briefdescription>
<para>call init at the end of constructors to define metafeatures of the data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="99" column="14" bodyfile="/home/runner/work/brush/brush/src/data/data.cpp" bodystart="202" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="d7/da5/classDataset_1aa9e841d2f28f1466b82428dddba49227" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d28/classmap" kindref="compound">map</ref>&lt; <ref refid="d5/d92/classstring" kindref="compound">string</ref>, <ref refid="d4/d59/split_8cpp_1aeec1ea0d55dd44db207801471be4f09c" kindref="member">State</ref> &gt;</type>
        <definition>map&lt; string, State &gt; Brush::Data::Dataset::make_features</definition>
        <argsstring>(const ArrayXXf &amp;X, const map&lt; string, State &gt; &amp;Z={}, const vector&lt; string &gt; &amp;vn={}, const vector&lt; string &gt; &amp;ft={})</argsstring>
        <name>make_features</name>
        <qualifiedname>Dataset::make_features</qualifiedname>
        <param>
          <type>const ArrayXXf &amp;</type>
          <declname>X</declname>
        </param>
        <param>
          <type>const <ref refid="d9/d28/classmap" kindref="compound">map</ref>&lt; <ref refid="d5/d92/classstring" kindref="compound">string</ref>, <ref refid="d4/d59/split_8cpp_1aeec1ea0d55dd44db207801471be4f09c" kindref="member">State</ref> &gt; &amp;</type>
          <declname>Z</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>const <ref refid="d7/dfc/classvector" kindref="compound">vector</ref>&lt; <ref refid="d5/d92/classstring" kindref="compound">string</ref> &gt; &amp;</type>
          <declname>vn</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>const <ref refid="d7/dfc/classvector" kindref="compound">vector</ref>&lt; <ref refid="d5/d92/classstring" kindref="compound">string</ref> &gt; &amp;</type>
          <declname>ft</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
<para>turns input data into a feature map </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="102" column="13" bodyfile="/home/runner/work/brush/brush/src/data/data.cpp" bodystart="326" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="d7/da5/classDataset_1aa09045b1736581575ec928a7eba7dd98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d28/classmap" kindref="compound">map</ref>&lt; <ref refid="d5/d92/classstring" kindref="compound">string</ref>, <ref refid="d4/d59/split_8cpp_1aeec1ea0d55dd44db207801471be4f09c" kindref="member">State</ref> &gt;</type>
        <definition>map&lt; string, State &gt; Brush::Data::Dataset::copy_and_make_features</definition>
        <argsstring>(const ArrayXXf &amp;X, const Dataset &amp;ref_dataset, const vector&lt; string &gt; &amp;vn={})</argsstring>
        <name>copy_and_make_features</name>
        <qualifiedname>Dataset::copy_and_make_features</qualifiedname>
        <param>
          <type>const ArrayXXf &amp;</type>
          <declname>X</declname>
        </param>
        <param>
          <type>const <ref refid="d2/d36/classBrush_1_1Data_1_1Dataset" kindref="compound">Dataset</ref> &amp;</type>
          <declname>ref_dataset</declname>
        </param>
        <param>
          <type>const <ref refid="d7/dfc/classvector" kindref="compound">vector</ref>&lt; <ref refid="d5/d92/classstring" kindref="compound">string</ref> &gt; &amp;</type>
          <declname>vn</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
<para>turns input into a feature map, with feature types copied from a reference </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="109" column="13" bodyfile="/home/runner/work/brush/brush/src/data/data.cpp" bodystart="391" bodyend="439"/>
      </memberdef>
      <memberdef kind="function" id="d7/da5/classDataset_1a2b8f61c5fb8f2128ddbe82108e7644d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Brush::Data::Dataset::Dataset</definition>
        <argsstring>(std::map&lt; string, State &gt; &amp;d, const Ref&lt; const ArrayXf &gt; &amp;y_=ArrayXf(), bool c=false, float validation_size=0.0, float batch_size=1.0, bool shuffle_split=false)</argsstring>
        <name>Dataset</name>
        <qualifiedname>Dataset::Dataset</qualifiedname>
        <param>
          <type>std::map&lt; <ref refid="d5/d92/classstring" kindref="compound">string</ref>, <ref refid="d4/d59/split_8cpp_1aeec1ea0d55dd44db207801471be4f09c" kindref="member">State</ref> &gt; &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type>const Ref&lt; const ArrayXf &gt; &amp;</type>
          <declname>y_</declname>
          <defval>ArrayXf()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>c</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>float</type>
          <declname>validation_size</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>float</type>
          <declname>batch_size</declname>
          <defval>1.0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>shuffle_split</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><orderedlist>
<listitem><para>initialize data from a map. </para>
</listitem></orderedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="115" column="9" bodyfile="/home/runner/work/brush/brush/src/data/data.h" bodystart="115" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="d7/da5/classDataset_1ad017496e1ae05e52999af69f409e19b1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Brush::Data::Dataset::Dataset</definition>
        <argsstring>(const ArrayXXf &amp;X, const Ref&lt; const ArrayXf &gt; &amp;y_=ArrayXf(), const vector&lt; string &gt; &amp;vn={}, const map&lt; string, State &gt; &amp;Z={}, const vector&lt; string &gt; &amp;ft={}, bool c=false, float validation_size=0.0, float batch_size=1.0, bool shuffle_split=false)</argsstring>
        <name>Dataset</name>
        <qualifiedname>Dataset::Dataset</qualifiedname>
        <param>
          <type>const ArrayXXf &amp;</type>
          <declname>X</declname>
        </param>
        <param>
          <type>const Ref&lt; const ArrayXf &gt; &amp;</type>
          <declname>y_</declname>
          <defval>ArrayXf()</defval>
        </param>
        <param>
          <type>const <ref refid="d7/dfc/classvector" kindref="compound">vector</ref>&lt; <ref refid="d5/d92/classstring" kindref="compound">string</ref> &gt; &amp;</type>
          <declname>vn</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>const <ref refid="d9/d28/classmap" kindref="compound">map</ref>&lt; <ref refid="d5/d92/classstring" kindref="compound">string</ref>, <ref refid="d4/d59/split_8cpp_1aeec1ea0d55dd44db207801471be4f09c" kindref="member">State</ref> &gt; &amp;</type>
          <declname>Z</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>const <ref refid="d7/dfc/classvector" kindref="compound">vector</ref>&lt; <ref refid="d5/d92/classstring" kindref="compound">string</ref> &gt; &amp;</type>
          <declname>ft</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>c</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>float</type>
          <declname>validation_size</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>float</type>
          <declname>batch_size</declname>
          <defval>1.0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>shuffle_split</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><orderedlist>
<listitem><para>initialize data from a matrix with feature columns. </para>
</listitem></orderedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="133" column="9" bodyfile="/home/runner/work/brush/brush/src/data/data.h" bodystart="133" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="d7/da5/classDataset_1a00560cec5545ae35e9e9dd838647b883" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Brush::Data::Dataset::Dataset</definition>
        <argsstring>(const ArrayXXf &amp;X, const vector&lt; string &gt; &amp;vn, const vector&lt; string &gt; &amp;ft={}, bool c=false, float validation_size=0.0, float batch_size=1.0, bool shuffle_split=false)</argsstring>
        <name>Dataset</name>
        <qualifiedname>Dataset::Dataset</qualifiedname>
        <param>
          <type>const ArrayXXf &amp;</type>
          <declname>X</declname>
        </param>
        <param>
          <type>const <ref refid="d7/dfc/classvector" kindref="compound">vector</ref>&lt; <ref refid="d5/d92/classstring" kindref="compound">string</ref> &gt; &amp;</type>
          <declname>vn</declname>
        </param>
        <param>
          <type>const <ref refid="d7/dfc/classvector" kindref="compound">vector</ref>&lt; <ref refid="d5/d92/classstring" kindref="compound">string</ref> &gt; &amp;</type>
          <declname>ft</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>c</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>float</type>
          <declname>validation_size</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>float</type>
          <declname>batch_size</declname>
          <defval>1.0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>shuffle_split</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><orderedlist>
<listitem><para>initialize data from X and feature names </para>
</listitem></orderedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="157" column="9" bodyfile="/home/runner/work/brush/brush/src/data/data.h" bodystart="157" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="d7/da5/classDataset_1a8401b18d80d94ca2e4a47e80bc130ec4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Brush::Data::Dataset::Dataset</definition>
        <argsstring>(const ArrayXXf &amp;X, const Dataset &amp;ref_dataset, const vector&lt; string &gt; &amp;vn)</argsstring>
        <name>Dataset</name>
        <qualifiedname>Dataset::Dataset</qualifiedname>
        <param>
          <type>const ArrayXXf &amp;</type>
          <declname>X</declname>
        </param>
        <param>
          <type>const <ref refid="d2/d36/classBrush_1_1Data_1_1Dataset" kindref="compound">Dataset</ref> &amp;</type>
          <declname>ref_dataset</declname>
        </param>
        <param>
          <type>const <ref refid="d7/dfc/classvector" kindref="compound">vector</ref>&lt; <ref refid="d5/d92/classstring" kindref="compound">string</ref> &gt; &amp;</type>
          <declname>vn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="179" column="9" bodyfile="/home/runner/work/brush/brush/src/data/data.h" bodystart="179" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="d7/da5/classDataset_1a59ec8554d617a4a99ba7feec09bdc62c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Brush::Data::Dataset::print</definition>
        <argsstring>() const</argsstring>
        <name>print</name>
        <qualifiedname>Dataset::print</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="194" column="14" bodyfile="/home/runner/work/brush/brush/src/data/data.h" bodystart="194" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="d7/da5/classDataset_1a44ebc4ada574ea7a3a843ae74810aac9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Brush::Data::Dataset::get_X</definition>
        <argsstring>() const</argsstring>
        <name>get_X</name>
        <qualifiedname>Dataset::get_X</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="210" column="14" bodyfile="/home/runner/work/brush/brush/src/data/data.h" bodystart="210" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="d7/da5/classDataset_1ae69087b8c020840f254e3679cd324ba5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/d36/classBrush_1_1Data_1_1Dataset" kindref="compound">Dataset</ref></type>
        <definition>Dataset Brush::Data::Dataset::get_training_data</definition>
        <argsstring>() const</argsstring>
        <name>get_training_data</name>
        <qualifiedname>Dataset::get_training_data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="219" column="17" bodyfile="/home/runner/work/brush/brush/src/data/data.cpp" bodystart="197" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="d7/da5/classDataset_1a1ddb847fd1ceff63e60ffd79542409d9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/d36/classBrush_1_1Data_1_1Dataset" kindref="compound">Dataset</ref></type>
        <definition>Dataset Brush::Data::Dataset::get_validation_data</definition>
        <argsstring>() const</argsstring>
        <name>get_validation_data</name>
        <qualifiedname>Dataset::get_validation_data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="220" column="17" bodyfile="/home/runner/work/brush/brush/src/data/data.cpp" bodystart="198" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="d7/da5/classDataset_1a2b7b42b1b16630554b2e49102098a170" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Brush::Data::Dataset::get_n_samples</definition>
        <argsstring>() const</argsstring>
        <name>get_n_samples</name>
        <qualifiedname>Dataset::get_n_samples</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="222" column="20" bodyfile="/home/runner/work/brush/brush/src/data/data.h" bodystart="222" bodyend="227"/>
        <referencedby refid="d3/df2/structOperator_3_01NT_00_01S_00_01Fit_00_01enable__if__t_3_01is__in__v_3_01NT_00_01NodeType_1_1Se4750a8ecc1d24ba81c8da2bd5c73a14_1af103a8ad8b7580d3c3a82b5c997b26c0" compoundref="d4/df2/split_8h" startline="268" endline="298">Operator&lt; NT, S, Fit, enable_if_t&lt; is_in_v&lt; NT, NodeType::SplitOn, NodeType::SplitBest &gt; &gt; &gt;::predict</referencedby>
      </memberdef>
      <memberdef kind="function" id="d7/da5/classDataset_1a6edc04702aee605a766f4a79c375d0c6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Brush::Data::Dataset::get_n_features</definition>
        <argsstring>() const</argsstring>
        <name>get_n_features</name>
        <qualifiedname>Dataset::get_n_features</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="228" column="20" bodyfile="/home/runner/work/brush/brush/src/data/data.h" bodystart="228" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="d7/da5/classDataset_1a5020e43def6267598be0ba3d2b46e616" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/d36/classBrush_1_1Data_1_1Dataset" kindref="compound">Dataset</ref></type>
        <definition>Dataset Brush::Data::Dataset::get_batch</definition>
        <argsstring>() const</argsstring>
        <name>get_batch</name>
        <qualifiedname>Dataset::get_batch</qualifiedname>
        <briefdescription>
<para>select random subset of data for training weights. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="230" column="17" bodyfile="/home/runner/work/brush/brush/src/data/data.cpp" bodystart="170" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="d7/da5/classDataset_1ade358be2a762f2a6df738a41fe1095b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Brush::Data::Dataset::get_batch_size</definition>
        <argsstring>()</argsstring>
        <name>get_batch_size</name>
        <qualifiedname>Dataset::get_batch_size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="232" column="15" bodyfile="/home/runner/work/brush/brush/src/data/data.cpp" bodystart="319" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="d7/da5/classDataset_1afa07fa8dff0f8e01293509d6b7cc0dc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Brush::Data::Dataset::set_batch_size</definition>
        <argsstring>(float new_size)</argsstring>
        <name>set_batch_size</name>
        <qualifiedname>Dataset::set_batch_size</qualifiedname>
        <param>
          <type>float</type>
          <declname>new_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="233" column="14" bodyfile="/home/runner/work/brush/brush/src/data/data.cpp" bodystart="320" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="d7/da5/classDataset_1a2923e87bfc5d20fc3b45b9f72ca71de2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="dc/d5c/namespaceBrush_1a3f2c9b744330ba4a561ac72f048a1a5f" kindref="member">DataType</ref></type>
        <definition>DataType Brush::Data::Dataset::get_feature_type</definition>
        <argsstring>(const string &amp;name) const</argsstring>
        <name>get_feature_type</name>
        <qualifiedname>Dataset::get_feature_type</qualifiedname>
        <param>
          <type>const <ref refid="d5/d92/classstring" kindref="compound">string</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="235" column="18" bodyfile="/home/runner/work/brush/brush/src/data/data.h" bodystart="235" bodyend="256"/>
        <referencedby refid="d3/df2/structOperator_3_01NT_00_01S_00_01Fit_00_01enable__if__t_3_01is__in__v_3_01NT_00_01NodeType_1_1Se4750a8ecc1d24ba81c8da2bd5c73a14_1a771c7574933c9720bdb9fb2e51571bbd" compoundref="d4/df2/split_8h" startline="228" endline="266">Operator&lt; NT, S, Fit, enable_if_t&lt; is_in_v&lt; NT, NodeType::SplitOn, NodeType::SplitBest &gt; &gt; &gt;::fit</referencedby>
      </memberdef>
      <memberdef kind="function" id="d7/da5/classDataset_1ade5da9269ebc099385d6f79cf4a53f9f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::array&lt; <ref refid="d2/d36/classBrush_1_1Data_1_1Dataset" kindref="compound">Dataset</ref>, 2 &gt;</type>
        <definition>array&lt; Dataset, 2 &gt; Brush::Data::Dataset::split</definition>
        <argsstring>(const ArrayXb &amp;mask) const</argsstring>
        <name>split</name>
        <qualifiedname>Dataset::split</qualifiedname>
        <param>
          <type>const <ref refid="dc/d5c/namespaceBrush_1a1c0079df772d6e050857327591514810" kindref="member">ArrayXb</ref> &amp;</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="258" column="20" bodyfile="/home/runner/work/brush/brush/src/data/data.cpp" bodystart="186" bodyend="195"/>
        <referencedby refid="d3/df2/structOperator_3_01NT_00_01S_00_01Fit_00_01enable__if__t_3_01is__in__v_3_01NT_00_01NodeType_1_1Se4750a8ecc1d24ba81c8da2bd5c73a14_1af103a8ad8b7580d3c3a82b5c997b26c0" compoundref="d4/df2/split_8h" startline="268" endline="298">Operator&lt; NT, S, Fit, enable_if_t&lt; is_in_v&lt; NT, NodeType::SplitOn, NodeType::SplitBest &gt; &gt; &gt;::predict</referencedby>
      </memberdef>
      <memberdef kind="function" id="d7/da5/classDataset_1a86f779c55c96ff7182b4e649f87fbf24" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d4/d59/split_8cpp_1aeec1ea0d55dd44db207801471be4f09c" kindref="member">State</ref></type>
        <definition>State Brush::Data::Dataset::operator[]</definition>
        <argsstring>(std::string name) const</argsstring>
        <name>operator[]</name>
        <qualifiedname>Dataset::operator[]</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/data/data.h" line="260" column="15" bodyfile="/home/runner/work/brush/brush/src/data/data.h" bodystart="260" bodyend="265"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>holds variable type data. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>Dataset</label>
        <link refid="d7/da5/classDataset"/>
        <childnode refid="2" relation="usage">
          <edgelabel>training_data_idx</edgelabel>
          <edgelabel>validation_data_idx</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>feature_types</edgelabel>
          <edgelabel>unique_data_types</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>feature_names</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>features_of_type</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>features</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="8">
        <label>std::map&lt; string, State &gt;</label>
        <childnode refid="5" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>std::string</label>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>std::unordered_map&lt; DataType, vector&lt; string &gt; &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>std::vector&lt; DataType &gt;</label>
      </node>
      <node id="2">
        <label>std::vector&lt; size_t &gt;</label>
      </node>
      <node id="4">
        <label>std::vector&lt; string &gt;</label>
        <childnode refid="5" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/brush/brush/src/data/data.h" line="50" column="1" bodyfile="/home/runner/work/brush/brush/src/data/data.h" bodystart="51" bodyend="268"/>
    <listofallmembers>
      <member refid="d7/da5/classDataset_1a6ac1f4f56991e43a782dd519c414916a" prot="public" virt="non-virtual"><scope>Dataset</scope><name>batch_size</name></member>
      <member refid="d7/da5/classDataset_1a1a8a1e77afdecb032696bdf38e5c424c" prot="public" virt="non-virtual"><scope>Dataset</scope><name>classification</name></member>
      <member refid="d7/da5/classDataset_1aa09045b1736581575ec928a7eba7dd98" prot="public" virt="non-virtual"><scope>Dataset</scope><name>copy_and_make_features</name></member>
      <member refid="d7/da5/classDataset_1a2b8f61c5fb8f2128ddbe82108e7644d6" prot="public" virt="non-virtual"><scope>Dataset</scope><name>Dataset</name></member>
      <member refid="d7/da5/classDataset_1ad017496e1ae05e52999af69f409e19b1" prot="public" virt="non-virtual"><scope>Dataset</scope><name>Dataset</name></member>
      <member refid="d7/da5/classDataset_1a00560cec5545ae35e9e9dd838647b883" prot="public" virt="non-virtual"><scope>Dataset</scope><name>Dataset</name></member>
      <member refid="d7/da5/classDataset_1a8401b18d80d94ca2e4a47e80bc130ec4" prot="public" virt="non-virtual"><scope>Dataset</scope><name>Dataset</name></member>
      <member refid="d7/da5/classDataset_1a8b9d0d635516aa675f9783d7c6ab1b72" prot="public" virt="non-virtual"><scope>Dataset</scope><name>feature_names</name></member>
      <member refid="d7/da5/classDataset_1a52d591cce797480e80f8cf1f1482702e" prot="public" virt="non-virtual"><scope>Dataset</scope><name>feature_types</name></member>
      <member refid="d7/da5/classDataset_1a23f1c86e056b6806e7fa66c8fe6ea9ff" prot="public" virt="non-virtual"><scope>Dataset</scope><name>features</name></member>
      <member refid="d7/da5/classDataset_1a652aba735323fddf7bf79407e7e4fc83" prot="public" virt="non-virtual"><scope>Dataset</scope><name>features_of_type</name></member>
      <member refid="d7/da5/classDataset_1a5020e43def6267598be0ba3d2b46e616" prot="public" virt="non-virtual"><scope>Dataset</scope><name>get_batch</name></member>
      <member refid="d7/da5/classDataset_1ade358be2a762f2a6df738a41fe1095b5" prot="public" virt="non-virtual"><scope>Dataset</scope><name>get_batch_size</name></member>
      <member refid="d7/da5/classDataset_1a2923e87bfc5d20fc3b45b9f72ca71de2" prot="public" virt="non-virtual"><scope>Dataset</scope><name>get_feature_type</name></member>
      <member refid="d7/da5/classDataset_1a6edc04702aee605a766f4a79c375d0c6" prot="public" virt="non-virtual"><scope>Dataset</scope><name>get_n_features</name></member>
      <member refid="d7/da5/classDataset_1a2b7b42b1b16630554b2e49102098a170" prot="public" virt="non-virtual"><scope>Dataset</scope><name>get_n_samples</name></member>
      <member refid="d7/da5/classDataset_1ae69087b8c020840f254e3679cd324ba5" prot="public" virt="non-virtual"><scope>Dataset</scope><name>get_training_data</name></member>
      <member refid="d7/da5/classDataset_1a1ddb847fd1ceff63e60ffd79542409d9" prot="public" virt="non-virtual"><scope>Dataset</scope><name>get_validation_data</name></member>
      <member refid="d7/da5/classDataset_1a44ebc4ada574ea7a3a843ae74810aac9" prot="public" virt="non-virtual"><scope>Dataset</scope><name>get_X</name></member>
      <member refid="d7/da5/classDataset_1aacd5afd19b9cee9d9d84e4290eeabb6f" prot="public" virt="non-virtual"><scope>Dataset</scope><name>init</name></member>
      <member refid="d7/da5/classDataset_1aa9e841d2f28f1466b82428dddba49227" prot="public" virt="non-virtual"><scope>Dataset</scope><name>make_features</name></member>
      <member refid="d7/da5/classDataset_1afa676d96150281b2384a07e4a3fcc352" prot="public" virt="non-virtual"><scope>Dataset</scope><name>operator()</name></member>
      <member refid="d7/da5/classDataset_1a86f779c55c96ff7182b4e649f87fbf24" prot="public" virt="non-virtual"><scope>Dataset</scope><name>operator[]</name></member>
      <member refid="d7/da5/classDataset_1a59ec8554d617a4a99ba7feec09bdc62c" prot="public" virt="non-virtual"><scope>Dataset</scope><name>print</name></member>
      <member refid="d7/da5/classDataset_1afa07fa8dff0f8e01293509d6b7cc0dc3" prot="public" virt="non-virtual"><scope>Dataset</scope><name>set_batch_size</name></member>
      <member refid="d7/da5/classDataset_1a47efbb19e4ca04538d4ef04f0a87d856" prot="public" virt="non-virtual"><scope>Dataset</scope><name>shuffle_split</name></member>
      <member refid="d7/da5/classDataset_1ade5da9269ebc099385d6f79cf4a53f9f" prot="public" virt="non-virtual"><scope>Dataset</scope><name>split</name></member>
      <member refid="d7/da5/classDataset_1a4112a2cb86ce4138c3c4bea966c96b65" prot="private" virt="non-virtual"><scope>Dataset</scope><name>training_data_idx</name></member>
      <member refid="d7/da5/classDataset_1a96fc30b35f152f425377e1ae34398779" prot="public" virt="non-virtual"><scope>Dataset</scope><name>unique_data_types</name></member>
      <member refid="d7/da5/classDataset_1a8cba7a5f962538d67012264fb6c97ed4" prot="public" virt="non-virtual"><scope>Dataset</scope><name>use_batch</name></member>
      <member refid="d7/da5/classDataset_1a6cadfbd9f8a4700361e63defb7d6f6e0" prot="public" virt="non-virtual"><scope>Dataset</scope><name>use_validation</name></member>
      <member refid="d7/da5/classDataset_1ab8f3010fa3099efe3aac8fcd3140faf6" prot="private" virt="non-virtual"><scope>Dataset</scope><name>validation_data_idx</name></member>
      <member refid="d7/da5/classDataset_1aae2b4b532ccc55a95f65b75a5cd9e176" prot="public" virt="non-virtual"><scope>Dataset</scope><name>validation_size</name></member>
      <member refid="d7/da5/classDataset_1a8a1a428f46a5c80322000f4bef0a09d4" prot="public" virt="non-virtual"><scope>Dataset</scope><name>Xref</name></member>
      <member refid="d7/da5/classDataset_1ade105f069d4f745d44374b7b8a3a9b0d" prot="public" virt="non-virtual"><scope>Dataset</scope><name>y</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
