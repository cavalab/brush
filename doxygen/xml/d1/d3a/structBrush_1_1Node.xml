<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="d1/d3a/structBrush_1_1Node" kind="struct" language="C++" prot="public">
    <compoundname>Brush::Node</compoundname>
    <includes refid="d1/d77/node_8h" local="no">node.h</includes>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="d1/d3a/structBrush_1_1Node_1abd1037d20f96e122bc1305d70aab418a" prot="public" static="no">
        <type>std::tuple&lt; <ref refid="dc/d5c/namespaceBrush_1a03de66d0fd6edab4d8a8ab5281e74dc3" kindref="member">UnderlyingNodeType</ref>, size_t, bool, <ref refid="d5/d92/classstring" kindref="compound">string</ref>, bool, int &gt;</type>
        <definition>using Brush::Node::HashTuple =  std::tuple&lt; 
        UnderlyingNodeType,     
        size_t,                 
        bool,                   
        string,                 
        bool,                   
        int                     
        
    &gt;</definition>
        <argsstring></argsstring>
        <name>HashTuple</name>
        <qualifiedname>Brush::Node::HashTuple</qualifiedname>
        <briefdescription>
<para>tuple type for hashing </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/program/node.h" line="115" column="5" bodyfile="/home/runner/work/brush/brush/src/program/node.h" bodystart="115" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="d1/d3a/structBrush_1_1Node_1ad6b3fd4a54c813d066370defc8a85af1" prot="public" static="no" mutable="no">
        <type><ref refid="d5/d92/classstring" kindref="compound">string</ref></type>
        <definition>string Brush::Node::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <qualifiedname>Brush::Node::name</qualifiedname>
        <briefdescription>
<para>full name of the node, with types </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/program/node.h" line="87" column="12" bodyfile="/home/runner/work/brush/brush/src/program/node.h" bodystart="87" bodyend="-1"/>
        <referencedby refid="dc/d5c/namespaceBrush_1ad36f62c73493c032059be8cd18590d0e" compoundref="d7/d70/node_8cpp" startline="226" endline="306">Brush::from_json</referencedby>
        <referencedby refid="d1/d3a/structBrush_1_1Node_1aaddaf7903795dfdcad487234d6dc380e" compoundref="d7/d70/node_8cpp" startline="20" endline="51">get_name</referencedby>
        <referencedby refid="d1/d3a/structBrush_1_1Node_1a62f7ba79b38e86e54488e5dd9a6bdc93" compoundref="d1/d77/node_8h" startline="135" endline="146">Node</referencedby>
        <referencedby refid="dc/d5c/namespaceBrush_1a2277345e299e6d41c9573c59b32ad0aa" compoundref="d7/d70/node_8cpp" startline="115" endline="133">Brush::to_json</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d1/d3a/structBrush_1_1Node_1a522791afe93c92442564356ff19ff55a" prot="public" static="no" mutable="no">
        <type><ref refid="dc/d5c/namespaceBrush_1a051322bb9fd1db4638b6eccd399a29c8" kindref="member">NodeType</ref></type>
        <definition>NodeType Brush::Node::node_type</definition>
        <argsstring></argsstring>
        <name>node_type</name>
        <qualifiedname>Brush::Node::node_type</qualifiedname>
        <briefdescription>
<para>the node type </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/program/node.h" line="89" column="14" bodyfile="/home/runner/work/brush/brush/src/program/node.h" bodystart="89" bodyend="-1"/>
        <referencedby refid="d5/d14/classBrush_1_1Var_1_1Variation_1aee4d051cf57caab64e694bdb70622913" compoundref="d4/d1f/variation_8h" startline="466" endline="502">Brush::Var::Variation&lt; T &gt;::bandit_get_node_like</referencedby>
        <referencedby refid="dc/d5c/namespaceBrush_1ad36f62c73493c032059be8cd18590d0e" compoundref="d7/d70/node_8cpp" startline="226" endline="306">Brush::from_json</referencedby>
        <referencedby refid="d1/d3a/structBrush_1_1Node_1af621eb9463a3ed3434841565a849c03b" compoundref="d7/d70/node_8cpp" startline="53" endline="108">get_model</referencedby>
        <referencedby refid="d1/d3a/structBrush_1_1Node_1aaddaf7903795dfdcad487234d6dc380e" compoundref="d7/d70/node_8cpp" startline="20" endline="51">get_name</referencedby>
        <referencedby refid="d1/d3a/structBrush_1_1Node_1a1aef5137dca5171a150c6d26ca43d9bc" compoundref="d1/d77/node_8h" startline="197" endline="206">get_node_hash</referencedby>
        <referencedby refid="d4/dc3/structBrush_1_1SearchSpace_1ac51e5e0acb3a880ffd0f3b7fba2fd68f" compoundref="d9/d99/search__space_8h" startline="562" endline="581">Brush::SearchSpace::get_node_like</referencedby>
        <referencedby refid="d1/d3a/structBrush_1_1Node_1a99e9db58c89646c630fb9d54b41ff2ba" compoundref="d1/d77/node_8h" startline="158" endline="171">init</referencedby>
        <referencedby refid="dc/d5c/namespaceBrush_1a8f1ed90f7962fef5764e7be14845aa34" compoundref="d7/d70/node_8cpp" startline="136" endline="224">Brush::init_node_with_default_signature</referencedby>
        <referencedby refid="d1/d3a/structBrush_1_1Node_1a62f7ba79b38e86e54488e5dd9a6bdc93" compoundref="d1/d77/node_8h" startline="135" endline="146">Node</referencedby>
        <referencedby refid="d4/dc3/structBrush_1_1SearchSpace_1ab1e6afddd1375b0f8cbd40f0033b32b1" compoundref="da/d48/search__space_8cpp" startline="299" endline="443">Brush::SearchSpace::PTC2</referencedby>
        <referencedby refid="d6/df2/classBrush_1_1Simpl_1_1Constants__simplifier_1a1967ec4e50c83b4a7890959d9f6e145f" compoundref="d2/d6f/constants_8h" startline="24" endline="84">Brush::Simpl::Constants_simplifier::simplify_tree</referencedby>
        <referencedby refid="dc/d5c/namespaceBrush_1a2277345e299e6d41c9573c59b32ad0aa" compoundref="d7/d70/node_8cpp" startline="115" endline="133">Brush::to_json</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d1/d3a/structBrush_1_1Node_1a65b283648fe779d81ac11f9e4714d920" prot="public" static="no" mutable="no">
        <type><ref refid="dc/d5c/namespaceBrush_1a3f2c9b744330ba4a561ac72f048a1a5f" kindref="member">DataType</ref></type>
        <definition>DataType Brush::Node::ret_type</definition>
        <argsstring></argsstring>
        <name>ret_type</name>
        <qualifiedname>Brush::Node::ret_type</qualifiedname>
        <briefdescription>
<para>return data type </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/program/node.h" line="92" column="14" bodyfile="/home/runner/work/brush/brush/src/program/node.h" bodystart="92" bodyend="-1"/>
        <referencedby refid="d5/d14/classBrush_1_1Var_1_1Variation_1aee4d051cf57caab64e694bdb70622913" compoundref="d4/d1f/variation_8h" startline="466" endline="502">Brush::Var::Variation&lt; T &gt;::bandit_get_node_like</referencedby>
        <referencedby refid="dc/d5c/namespaceBrush_1ad36f62c73493c032059be8cd18590d0e" compoundref="d7/d70/node_8cpp" startline="226" endline="306">Brush::from_json</referencedby>
        <referencedby refid="d4/dc3/structBrush_1_1SearchSpace_1ac51e5e0acb3a880ffd0f3b7fba2fd68f" compoundref="d9/d99/search__space_8h" startline="562" endline="581">Brush::SearchSpace::get_node_like</referencedby>
        <referencedby refid="d1/d3a/structBrush_1_1Node_1a2d4b7a1f21f80ce980f4748432911964" compoundref="d1/d77/node_8h" startline="180" endline="180">get_ret_type</referencedby>
        <referencedby refid="d1/d3a/structBrush_1_1Node_1a62f7ba79b38e86e54488e5dd9a6bdc93" compoundref="d1/d77/node_8h" startline="135" endline="146">Node</referencedby>
        <referencedby refid="d4/dc3/structBrush_1_1SearchSpace_1aed45d3d8adbee89f02e709472fe88280" compoundref="da/d48/search__space_8cpp" startline="264" endline="297">Brush::SearchSpace::sample_subtree</referencedby>
        <referencedby refid="d1/d3a/structBrush_1_1Node_1a24ab653c36833ab9cd301efe99b39d5f" compoundref="d1/d77/node_8h" startline="149" endline="156">set_signature</referencedby>
        <referencedby refid="d6/df2/classBrush_1_1Simpl_1_1Constants__simplifier_1a1967ec4e50c83b4a7890959d9f6e145f" compoundref="d2/d6f/constants_8h" startline="24" endline="84">Brush::Simpl::Constants_simplifier::simplify_tree</referencedby>
        <referencedby refid="dc/d5c/namespaceBrush_1a2277345e299e6d41c9573c59b32ad0aa" compoundref="d7/d70/node_8cpp" startline="115" endline="133">Brush::to_json</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d1/d3a/structBrush_1_1Node_1a237b9208864ace5209edca01623f6b1e" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="dc/d5c/namespaceBrush_1a3f2c9b744330ba4a561ac72f048a1a5f" kindref="member">DataType</ref> &gt;</type>
        <definition>std::vector&lt;DataType&gt; Brush::Node::arg_types</definition>
        <argsstring></argsstring>
        <name>arg_types</name>
        <qualifiedname>Brush::Node::arg_types</qualifiedname>
        <briefdescription>
<para>argument data types </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/program/node.h" line="94" column="17" bodyfile="/home/runner/work/brush/brush/src/program/node.h" bodystart="94" bodyend="-1"/>
        <referencedby refid="dc/d5c/namespaceBrush_1ad36f62c73493c032059be8cd18590d0e" compoundref="d7/d70/node_8cpp" startline="226" endline="306">Brush::from_json</referencedby>
        <referencedby refid="d1/d3a/structBrush_1_1Node_1ac2f0913b7a3e238d879722eb7f62aee2" compoundref="d1/d77/node_8h" startline="183" endline="183">get_arg_count</referencedby>
        <referencedby refid="d1/d3a/structBrush_1_1Node_1a754e5efb828686e30ebfa2174d56e37a" compoundref="d1/d77/node_8h" startline="182" endline="182">get_arg_types</referencedby>
        <referencedby refid="d1/d3a/structBrush_1_1Node_1af621eb9463a3ed3434841565a849c03b" compoundref="d7/d70/node_8cpp" startline="53" endline="108">get_model</referencedby>
        <referencedby refid="d1/d3a/structBrush_1_1Node_1a62f7ba79b38e86e54488e5dd9a6bdc93" compoundref="d1/d77/node_8h" startline="135" endline="146">Node</referencedby>
        <referencedby refid="d4/dc3/structBrush_1_1SearchSpace_1ab1e6afddd1375b0f8cbd40f0033b32b1" compoundref="da/d48/search__space_8cpp" startline="299" endline="443">Brush::SearchSpace::PTC2</referencedby>
        <referencedby refid="d1/d3a/structBrush_1_1Node_1a24ab653c36833ab9cd301efe99b39d5f" compoundref="d1/d77/node_8h" startline="149" endline="156">set_signature</referencedby>
        <referencedby refid="dc/d5c/namespaceBrush_1a2277345e299e6d41c9573c59b32ad0aa" compoundref="d7/d70/node_8cpp" startline="115" endline="133">Brush::to_json</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d1/d3a/structBrush_1_1Node_1a889e0361b55a63a4510a3edabd2fa57c" prot="public" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t Brush::Node::sig_hash</definition>
        <argsstring></argsstring>
        <name>sig_hash</name>
        <qualifiedname>Brush::Node::sig_hash</qualifiedname>
        <briefdescription>
<para>a hash of the signature </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/program/node.h" line="96" column="17" bodyfile="/home/runner/work/brush/brush/src/program/node.h" bodystart="96" bodyend="-1"/>
        <referencedby refid="d1/d3a/structBrush_1_1Node_1a9ec6ba08b0baebc0cd105e4ef774b7fb" compoundref="d1/d77/node_8h" startline="181" endline="181">args_type</referencedby>
        <referencedby refid="dc/d5c/namespaceBrush_1ad36f62c73493c032059be8cd18590d0e" compoundref="d7/d70/node_8cpp" startline="226" endline="306">Brush::from_json</referencedby>
        <referencedby refid="d1/d3a/structBrush_1_1Node_1a1aef5137dca5171a150c6d26ca43d9bc" compoundref="d1/d77/node_8h" startline="197" endline="206">get_node_hash</referencedby>
        <referencedby refid="d1/d3a/structBrush_1_1Node_1a62f7ba79b38e86e54488e5dd9a6bdc93" compoundref="d1/d77/node_8h" startline="135" endline="146">Node</referencedby>
        <referencedby refid="d1/d3a/structBrush_1_1Node_1a24ab653c36833ab9cd301efe99b39d5f" compoundref="d1/d77/node_8h" startline="149" endline="156">set_signature</referencedby>
        <referencedby refid="dc/d5c/namespaceBrush_1a2277345e299e6d41c9573c59b32ad0aa" compoundref="d7/d70/node_8cpp" startline="115" endline="133">Brush::to_json</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d1/d3a/structBrush_1_1Node_1aed6c2af0fae3dd8e5a8aa2fab77479fd" prot="public" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t Brush::Node::sig_dual_hash</definition>
        <argsstring></argsstring>
        <name>sig_dual_hash</name>
        <qualifiedname>Brush::Node::sig_dual_hash</qualifiedname>
        <briefdescription>
<para>a hash of the dual of the signature (for NLS) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/program/node.h" line="98" column="17" bodyfile="/home/runner/work/brush/brush/src/program/node.h" bodystart="98" bodyend="-1"/>
        <referencedby refid="dc/d5c/namespaceBrush_1ad36f62c73493c032059be8cd18590d0e" compoundref="d7/d70/node_8cpp" startline="226" endline="306">Brush::from_json</referencedby>
        <referencedby refid="d1/d3a/structBrush_1_1Node_1a62f7ba79b38e86e54488e5dd9a6bdc93" compoundref="d1/d77/node_8h" startline="135" endline="146">Node</referencedby>
        <referencedby refid="d1/d3a/structBrush_1_1Node_1a24ab653c36833ab9cd301efe99b39d5f" compoundref="d1/d77/node_8h" startline="149" endline="156">set_signature</referencedby>
        <referencedby refid="dc/d5c/namespaceBrush_1a2277345e299e6d41c9573c59b32ad0aa" compoundref="d7/d70/node_8cpp" startline="115" endline="133">Brush::to_json</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d1/d3a/structBrush_1_1Node_1a32c73293ee4e02b6d828c2c213e06154" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Brush::Node::fixed</definition>
        <argsstring></argsstring>
        <name>fixed</name>
        <qualifiedname>Brush::Node::fixed</qualifiedname>
        <briefdescription>
<para>whether node is modifiable </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/program/node.h" line="101" column="10" bodyfile="/home/runner/work/brush/brush/src/program/node.h" bodystart="101" bodyend="-1"/>
        <referencedby refid="dc/d5c/namespaceBrush_1ad36f62c73493c032059be8cd18590d0e" compoundref="d7/d70/node_8cpp" startline="226" endline="306">Brush::from_json</referencedby>
        <referencedby refid="d1/d3a/structBrush_1_1Node_1a1aef5137dca5171a150c6d26ca43d9bc" compoundref="d1/d77/node_8h" startline="197" endline="206">get_node_hash</referencedby>
        <referencedby refid="d1/d3a/structBrush_1_1Node_1a4fcf7feccb71d538f8614d3c51247eb4" compoundref="d1/d77/node_8h" startline="246" endline="246">get_prob_change</referencedby>
        <referencedby refid="d1/d3a/structBrush_1_1Node_1a087a9c51b46b3e801506415376cd0518" compoundref="d1/d77/node_8h" startline="248" endline="248">get_prob_keep</referencedby>
        <referencedby refid="d1/d3a/structBrush_1_1Node_1a99e9db58c89646c630fb9d54b41ff2ba" compoundref="d1/d77/node_8h" startline="158" endline="171">init</referencedby>
        <referencedby refid="d4/dc3/structBrush_1_1SearchSpace_1a810403a87eef0baded2aed2bb4f1979e" compoundref="d9/d99/search__space_8h" startline="715" endline="801">Brush::SearchSpace::make_program</referencedby>
        <referencedby refid="dc/d5c/namespaceBrush_1a2277345e299e6d41c9573c59b32ad0aa" compoundref="d7/d70/node_8cpp" startline="115" endline="133">Brush::to_json</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d1/d3a/structBrush_1_1Node_1ab72b791f57011a032c6c89238db85845" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Brush::Node::is_weighted</definition>
        <argsstring></argsstring>
        <name>is_weighted</name>
        <qualifiedname>Brush::Node::is_weighted</qualifiedname>
        <briefdescription>
<para>whether this node is weighted </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/program/node.h" line="103" column="10" bodyfile="/home/runner/work/brush/brush/src/program/node.h" bodystart="103" bodyend="-1"/>
        <referencedby refid="dc/d5c/namespaceBrush_1ad36f62c73493c032059be8cd18590d0e" compoundref="d7/d70/node_8cpp" startline="226" endline="306">Brush::from_json</referencedby>
        <referencedby refid="d1/d3a/structBrush_1_1Node_1af621eb9463a3ed3434841565a849c03b" compoundref="d7/d70/node_8cpp" startline="53" endline="108">get_model</referencedby>
        <referencedby refid="d1/d3a/structBrush_1_1Node_1aaddaf7903795dfdcad487234d6dc380e" compoundref="d7/d70/node_8cpp" startline="20" endline="51">get_name</referencedby>
        <referencedby refid="d1/d3a/structBrush_1_1Node_1a62f7ba79b38e86e54488e5dd9a6bdc93" compoundref="d1/d77/node_8h" startline="135" endline="146">Node</referencedby>
        <referencedby refid="d1/d3a/structBrush_1_1Node_1a70fb9b583f72b67f6c24c2bbaae55267" compoundref="d1/d77/node_8h" startline="263" endline="266">set_is_weighted</referencedby>
        <referencedby refid="dc/d5c/namespaceBrush_1a2277345e299e6d41c9573c59b32ad0aa" compoundref="d7/d70/node_8cpp" startline="115" endline="133">Brush::to_json</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d1/d3a/structBrush_1_1Node_1a9f5b2e34d8ba752e0f6bffebec8afdc0" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float Brush::Node::prob_change</definition>
        <argsstring></argsstring>
        <name>prob_change</name>
        <qualifiedname>Brush::Node::prob_change</qualifiedname>
        <briefdescription>
<para>chance of node being selected for variation </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/program/node.h" line="105" column="11" bodyfile="/home/runner/work/brush/brush/src/program/node.h" bodystart="105" bodyend="-1"/>
        <referencedby refid="dc/d5c/namespaceBrush_1ad36f62c73493c032059be8cd18590d0e" compoundref="d7/d70/node_8cpp" startline="226" endline="306">Brush::from_json</referencedby>
        <referencedby refid="dc/d5c/namespaceBrush_1a2277345e299e6d41c9573c59b32ad0aa" compoundref="d7/d70/node_8cpp" startline="115" endline="133">Brush::to_json</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d1/d3a/structBrush_1_1Node_1ab719e64b13753515be49327d98bf2224" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float Brush::Node::W</definition>
        <argsstring></argsstring>
        <name>W</name>
        <qualifiedname>Brush::Node::W</qualifiedname>
        <briefdescription>
<para>the weights of the node. also used for splitting thresholds. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/program/node.h" line="107" column="11" bodyfile="/home/runner/work/brush/brush/src/program/node.h" bodystart="107" bodyend="-1"/>
        <referencedby refid="dc/d5c/namespaceBrush_1ad36f62c73493c032059be8cd18590d0e" compoundref="d7/d70/node_8cpp" startline="226" endline="306">Brush::from_json</referencedby>
        <referencedby refid="d1/d3a/structBrush_1_1Node_1af621eb9463a3ed3434841565a849c03b" compoundref="d7/d70/node_8cpp" startline="53" endline="108">get_model</referencedby>
        <referencedby refid="d1/d3a/structBrush_1_1Node_1aaddaf7903795dfdcad487234d6dc380e" compoundref="d7/d70/node_8cpp" startline="20" endline="51">get_name</referencedby>
        <referencedby refid="d1/d3a/structBrush_1_1Node_1a1aef5137dca5171a150c6d26ca43d9bc" compoundref="d1/d77/node_8h" startline="197" endline="206">get_node_hash</referencedby>
        <referencedby refid="d1/d3a/structBrush_1_1Node_1a99e9db58c89646c630fb9d54b41ff2ba" compoundref="d1/d77/node_8h" startline="158" endline="171">init</referencedby>
        <referencedby refid="d6/df2/classBrush_1_1Simpl_1_1Constants__simplifier_1a1967ec4e50c83b4a7890959d9f6e145f" compoundref="d2/d6f/constants_8h" startline="24" endline="84">Brush::Simpl::Constants_simplifier::simplify_tree</referencedby>
        <referencedby refid="dc/d5c/namespaceBrush_1a2277345e299e6d41c9573c59b32ad0aa" compoundref="d7/d70/node_8cpp" startline="115" endline="133">Brush::to_json</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d1/d3a/structBrush_1_1Node_1a0971012cfb2ae944f4bea0ea0dc9e5a3" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Brush::Node::center_op</definition>
        <argsstring></argsstring>
        <name>center_op</name>
        <qualifiedname>Brush::Node::center_op</qualifiedname>
        <briefdescription>
<para>whether to center the operator in pretty printing </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/program/node.h" line="110" column="10" bodyfile="/home/runner/work/brush/brush/src/program/node.h" bodystart="110" bodyend="-1"/>
        <referencedby refid="dc/d5c/namespaceBrush_1ad36f62c73493c032059be8cd18590d0e" compoundref="d7/d70/node_8cpp" startline="226" endline="306">Brush::from_json</referencedby>
        <referencedby refid="dc/d5c/namespaceBrush_1a2277345e299e6d41c9573c59b32ad0aa" compoundref="d7/d70/node_8cpp" startline="115" endline="133">Brush::to_json</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d1/d3a/structBrush_1_1Node_1ac5f37d638625468ed68de599a2a7d968" prot="public" static="no" mutable="no">
        <type><ref refid="d5/d92/classstring" kindref="compound">string</ref></type>
        <definition>string Brush::Node::feature</definition>
        <argsstring></argsstring>
        <name>feature</name>
        <qualifiedname>Brush::Node::feature</qualifiedname>
        <briefdescription>
<para>feature name for terminals or splitting nodes </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/program/node.h" line="270" column="16" bodyfile="/home/runner/work/brush/brush/src/program/node.h" bodystart="270" bodyend="-1"/>
        <referencedby refid="dc/d5c/namespaceBrush_1ad36f62c73493c032059be8cd18590d0e" compoundref="d7/d70/node_8cpp" startline="226" endline="306">Brush::from_json</referencedby>
        <referencedby refid="d1/d3a/structBrush_1_1Node_1a85a62efd4f1f99fa45eb52e4c0a1a26f" compoundref="d1/d77/node_8h" startline="251" endline="251">get_feature</referencedby>
        <referencedby refid="d1/d3a/structBrush_1_1Node_1af621eb9463a3ed3434841565a849c03b" compoundref="d7/d70/node_8cpp" startline="53" endline="108">get_model</referencedby>
        <referencedby refid="d1/d3a/structBrush_1_1Node_1aaddaf7903795dfdcad487234d6dc380e" compoundref="d7/d70/node_8cpp" startline="20" endline="51">get_name</referencedby>
        <referencedby refid="d1/d3a/structBrush_1_1Node_1a1aef5137dca5171a150c6d26ca43d9bc" compoundref="d1/d77/node_8h" startline="197" endline="206">get_node_hash</referencedby>
        <referencedby refid="d1/d3a/structBrush_1_1Node_1a62f7ba79b38e86e54488e5dd9a6bdc93" compoundref="d1/d77/node_8h" startline="135" endline="146">Node</referencedby>
        <referencedby refid="d1/d3a/structBrush_1_1Node_1a7e8460b645f3d58c3093eda1d5d3166c" compoundref="d1/d77/node_8h" startline="250" endline="250">set_feature</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d1/d3a/structBrush_1_1Node_1a2875e5aa77054658c071f7b0d7103e68" prot="public" static="no" mutable="no">
        <type><ref refid="dc/d5c/namespaceBrush_1a3f2c9b744330ba4a561ac72f048a1a5f" kindref="member">DataType</ref></type>
        <definition>DataType Brush::Node::feature_type</definition>
        <argsstring></argsstring>
        <name>feature_type</name>
        <qualifiedname>Brush::Node::feature_type</qualifiedname>
        <initializer>= <ref refid="dc/d5c/namespaceBrush_1a3f2c9b744330ba4a561ac72f048a1a5fa2edbf6aa916089ab4f236b106fe413f3" kindref="member">DataType::ArrayF</ref></initializer>
        <briefdescription>
<para>feature type for terminals or splitting nodes </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/program/node.h" line="273" column="18" bodyfile="/home/runner/work/brush/brush/src/program/node.h" bodystart="273" bodyend="-1"/>
        <referencedby refid="dc/d5c/namespaceBrush_1ad36f62c73493c032059be8cd18590d0e" compoundref="d7/d70/node_8cpp" startline="226" endline="306">Brush::from_json</referencedby>
        <referencedby refid="d1/d3a/structBrush_1_1Node_1a5d3a467bbb0b2fa914594c735579926d" compoundref="d1/d77/node_8h" startline="254" endline="254">get_feature_type</referencedby>
        <referencedby refid="d1/d3a/structBrush_1_1Node_1a9ceebb9b686a6f6784ae90c558385410" compoundref="d1/d77/node_8h" startline="253" endline="253">set_feature_type</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="d1/d3a/structBrush_1_1Node_1adcd17b2d50bd124218a1ed472369d461" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Brush::Node::Node</definition>
        <argsstring>()=default</argsstring>
        <name>Node</name>
        <qualifiedname>Brush::Node::Node</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/program/node.h" line="126" column="5"/>
        <referencedby refid="d1/d3a/structBrush_1_1Node_1ac854a6c4b96a0524e1371397c6fba4b1" compoundref="d1/d77/node_8h" startline="216" endline="219">operator!=</referencedby>
        <referencedby refid="d1/d3a/structBrush_1_1Node_1aea5769142b80b211a53eb20d8a14507b" compoundref="d1/d77/node_8h" startline="221" endline="226">operator&lt;</referencedby>
        <referencedby refid="d1/d3a/structBrush_1_1Node_1a62ae8b64fc43f5f13d697c481efb6588" compoundref="d1/d77/node_8h" startline="228" endline="231">operator&lt;=</referencedby>
        <referencedby refid="d1/d3a/structBrush_1_1Node_1a7c46bb16fb006691be230d29b6e731fe" compoundref="d1/d77/node_8h" startline="209" endline="214">operator==</referencedby>
        <referencedby refid="d1/d3a/structBrush_1_1Node_1a6dabaf6f3fcd362ff8fbc9e0bd37756f" compoundref="d1/d77/node_8h" startline="233" endline="236">operator&gt;</referencedby>
        <referencedby refid="d1/d3a/structBrush_1_1Node_1aa020471209858e31cb4cf26453033929" compoundref="d1/d77/node_8h" startline="238" endline="241">operator&gt;=</referencedby>
      </memberdef>
      <memberdef kind="function" id="d1/d3a/structBrush_1_1Node_1a62f7ba79b38e86e54488e5dd9a6bdc93" prot="public" static="no" const="no" explicit="yes" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename S</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>Brush::Node::Node</definition>
        <argsstring>(NodeType type, S signature, bool weighted=false, string feature_name=&quot;&quot;) noexcept</argsstring>
        <name>Node</name>
        <qualifiedname>Brush::Node::Node</qualifiedname>
        <param>
          <type><ref refid="dc/d5c/namespaceBrush_1a051322bb9fd1db4638b6eccd399a29c8" kindref="member">NodeType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>S</type>
          <declname>signature</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>weighted</declname>
          <defval>false</defval>
        </param>
        <param>
          <type><ref refid="d5/d92/classstring" kindref="compound">string</ref></type>
          <declname>feature_name</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
<para>Constructor used by search space. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>S</parametername>
</parameternamelist>
<parameterdescription>
<para>signature </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>node type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>feature_name</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the terminal </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>signature</parametername>
</parameternamelist>
<parameterdescription>
<para>signature </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/program/node.h" line="135" column="14" bodyfile="/home/runner/work/brush/brush/src/program/node.h" bodystart="135" bodyend="146"/>
        <references refid="d1/d3a/structBrush_1_1Node_1a237b9208864ace5209edca01623f6b1e" compoundref="d1/d77/node_8h" startline="94">arg_types</references>
        <references refid="d1/d3a/structBrush_1_1Node_1ac5f37d638625468ed68de599a2a7d968" compoundref="d1/d77/node_8h" startline="270">feature</references>
        <references refid="d1/d3a/structBrush_1_1Node_1a754e5efb828686e30ebfa2174d56e37a" compoundref="d1/d77/node_8h" startline="182" endline="182">get_arg_types</references>
        <references refid="d1/d3a/structBrush_1_1Node_1a2d4b7a1f21f80ce980f4748432911964" compoundref="d1/d77/node_8h" startline="180" endline="180">get_ret_type</references>
        <references refid="d1/d3a/structBrush_1_1Node_1a99e9db58c89646c630fb9d54b41ff2ba" compoundref="d1/d77/node_8h" startline="158" endline="171">init</references>
        <references refid="d1/d3a/structBrush_1_1Node_1ab72b791f57011a032c6c89238db85845" compoundref="d1/d77/node_8h" startline="103">is_weighted</references>
        <references refid="d1/d3a/structBrush_1_1Node_1ad6b3fd4a54c813d066370defc8a85af1" compoundref="d1/d77/node_8h" startline="87">name</references>
        <references refid="d1/d3a/structBrush_1_1Node_1a522791afe93c92442564356ff19ff55a" compoundref="d1/d77/node_8h" startline="89">node_type</references>
        <references refid="dc/d5c/namespaceBrush_1abfd0b15e0aacec494262585ad04fd79b" compoundref="df/dfe/nodetype_8cpp" startline="81">Brush::NodeTypeName</references>
        <references refid="d1/d3a/structBrush_1_1Node_1a65b283648fe779d81ac11f9e4714d920" compoundref="d1/d77/node_8h" startline="92">ret_type</references>
        <references refid="d1/d3a/structBrush_1_1Node_1aed6c2af0fae3dd8e5a8aa2fab77479fd" compoundref="d1/d77/node_8h" startline="98">sig_dual_hash</references>
        <references refid="d1/d3a/structBrush_1_1Node_1a889e0361b55a63a4510a3edabd2fa57c" compoundref="d1/d77/node_8h" startline="96">sig_hash</references>
      </memberdef>
      <memberdef kind="function" id="d1/d3a/structBrush_1_1Node_1a24ab653c36833ab9cd301efe99b39d5f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename S</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Brush::Node::set_signature</definition>
        <argsstring>()</argsstring>
        <name>set_signature</name>
        <qualifiedname>Brush::Node::set_signature</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/program/node.h" line="149" column="10" bodyfile="/home/runner/work/brush/brush/src/program/node.h" bodystart="149" bodyend="156"/>
        <references refid="d1/d3a/structBrush_1_1Node_1a237b9208864ace5209edca01623f6b1e" compoundref="d1/d77/node_8h" startline="94">arg_types</references>
        <references refid="d1/d3a/structBrush_1_1Node_1a65b283648fe779d81ac11f9e4714d920" compoundref="d1/d77/node_8h" startline="92">ret_type</references>
        <references refid="d1/d3a/structBrush_1_1Node_1aed6c2af0fae3dd8e5a8aa2fab77479fd" compoundref="d1/d77/node_8h" startline="98">sig_dual_hash</references>
        <references refid="d1/d3a/structBrush_1_1Node_1a889e0361b55a63a4510a3edabd2fa57c" compoundref="d1/d77/node_8h" startline="96">sig_hash</references>
        <referencedby refid="dc/d5c/namespaceBrush_1a8f1ed90f7962fef5764e7be14845aa34" compoundref="d7/d70/node_8cpp" startline="136" endline="224">Brush::init_node_with_default_signature</referencedby>
      </memberdef>
      <memberdef kind="function" id="d1/d3a/structBrush_1_1Node_1a99e9db58c89646c630fb9d54b41ff2ba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Brush::Node::init</definition>
        <argsstring>()</argsstring>
        <name>init</name>
        <qualifiedname>Brush::Node::init</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/program/node.h" line="158" column="10" bodyfile="/home/runner/work/brush/brush/src/program/node.h" bodystart="158" bodyend="171"/>
        <references refid="d1/d3a/structBrush_1_1Node_1a32c73293ee4e02b6d828c2c213e06154" compoundref="d1/d77/node_8h" startline="101">fixed</references>
        <references refid="dc/d5c/namespaceBrush_1a1d5a63450bcdb77bd08283c9f74ca53f" compoundref="d1/d77/node_8h" startline="46" endline="53">Brush::IsWeighable</references>
        <references refid="d1/d3a/structBrush_1_1Node_1a522791afe93c92442564356ff19ff55a" compoundref="d1/d77/node_8h" startline="89">node_type</references>
        <references refid="dc/d5c/namespaceBrush_1a051322bb9fd1db4638b6eccd399a29c8a4d83dec288ae3948fe9a8e21a3c3c734" compoundref="de/d26/nodetype_8h" startline="67">Brush::OffsetSum</references>
        <references refid="d1/d3a/structBrush_1_1Node_1ad9e4f8654978a40e8266b20a4bb0950f" compoundref="d1/d77/node_8h" startline="247" endline="247">set_prob_change</references>
        <references refid="d1/d3a/structBrush_1_1Node_1ab719e64b13753515be49327d98bf2224" compoundref="d1/d77/node_8h" startline="107">W</references>
        <referencedby refid="dc/d5c/namespaceBrush_1ad36f62c73493c032059be8cd18590d0e" compoundref="d7/d70/node_8cpp" startline="226" endline="306">Brush::from_json</referencedby>
        <referencedby refid="d1/d3a/structBrush_1_1Node_1a62f7ba79b38e86e54488e5dd9a6bdc93" compoundref="d1/d77/node_8h" startline="135" endline="146">Node</referencedby>
      </memberdef>
      <memberdef kind="function" id="d1/d3a/structBrush_1_1Node_1aaddaf7903795dfdcad487234d6dc380e" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="d5/d92/classstring" kindref="compound">string</ref></type>
        <definition>auto Brush::Node::get_name</definition>
        <argsstring>(bool include_weight=true) const noexcept</argsstring>
        <name>get_name</name>
        <qualifiedname>Brush::Node::get_name</qualifiedname>
        <param>
          <type>bool</type>
          <declname>include_weight</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>gets a string version of the node for printing. </para>
        </briefdescription>
        <detaileddescription>
<para>get the name of the node.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>include_weight</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to include the node&apos;s weight in the output. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>string version of the node.</para>
</simplesect>
<simplesect kind="return"><para>name </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/program/node.h" line="176" column="12" bodyfile="/home/runner/work/brush/brush/src/program/node.cpp" bodystart="20" bodyend="51"/>
        <references refid="d1/d3a/structBrush_1_1Node_1ac5f37d638625468ed68de599a2a7d968" compoundref="d1/d77/node_8h" startline="270">feature</references>
        <references refid="dc/d5c/namespaceBrush_1a4f135739df5fe55a0ff81d943bec8be2" compoundref="d1/d77/node_8h" startline="278" endline="278">Brush::Is</references>
        <references refid="d1/d3a/structBrush_1_1Node_1ab72b791f57011a032c6c89238db85845" compoundref="d1/d77/node_8h" startline="103">is_weighted</references>
        <references refid="d1/d3a/structBrush_1_1Node_1ad6b3fd4a54c813d066370defc8a85af1" compoundref="d1/d77/node_8h" startline="87">name</references>
        <references refid="d1/d3a/structBrush_1_1Node_1a522791afe93c92442564356ff19ff55a" compoundref="d1/d77/node_8h" startline="89">node_type</references>
        <references refid="d1/d3a/structBrush_1_1Node_1ab719e64b13753515be49327d98bf2224" compoundref="d1/d77/node_8h" startline="107">W</references>
        <referencedby refid="d4/d63/structfmt_1_1formatter_3_01Brush_1_1Node_01_4_1a3fbb52e5e3acf82d886c5c2f10a24df2" compoundref="d1/d77/node_8h" startline="357" endline="359">fmt::formatter&lt; Brush::Node &gt;::format</referencedby>
        <referencedby refid="d1/d3a/structBrush_1_1Node_1af621eb9463a3ed3434841565a849c03b" compoundref="d7/d70/node_8cpp" startline="53" endline="108">get_model</referencedby>
        <referencedby refid="dc/d5c/namespaceBrush_1a9f9e092d833b2604cd38086f8b344a10" compoundref="d7/d70/node_8cpp" startline="12" endline="16">Brush::operator&lt;&lt;</referencedby>
      </memberdef>
      <memberdef kind="function" id="d1/d3a/structBrush_1_1Node_1af621eb9463a3ed3434841565a849c03b" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="d5/d92/classstring" kindref="compound">string</ref></type>
        <definition>string Brush::Node::get_model</definition>
        <argsstring>(const vector&lt; string &gt; &amp;) const noexcept</argsstring>
        <name>get_model</name>
        <qualifiedname>Brush::Node::get_model</qualifiedname>
        <param>
          <type>const <ref refid="d7/dfc/classvector" kindref="compound">vector</ref>&lt; <ref refid="d5/d92/classstring" kindref="compound">string</ref> &gt; &amp;</type>
          <defname>children</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/program/node.h" line="177" column="12" bodyfile="/home/runner/work/brush/brush/src/program/node.cpp" bodystart="53" bodyend="108"/>
        <references refid="d1/d3a/structBrush_1_1Node_1a237b9208864ace5209edca01623f6b1e" compoundref="d1/d77/node_8h" startline="94">arg_types</references>
        <references refid="dc/d5c/namespaceBrush_1a3f2c9b744330ba4a561ac72f048a1a5fa3c119844524e715e16e6c9b36e6516f0" compoundref="d9/d49/types_8h" startline="144">Brush::ArrayB</references>
        <references refid="d1/d3a/structBrush_1_1Node_1ac5f37d638625468ed68de599a2a7d968" compoundref="d1/d77/node_8h" startline="270">feature</references>
        <references refid="d1/d3a/structBrush_1_1Node_1aaddaf7903795dfdcad487234d6dc380e" compoundref="d7/d70/node_8cpp" startline="20" endline="51">get_name</references>
        <references refid="dc/d5c/namespaceBrush_1a4f135739df5fe55a0ff81d943bec8be2" compoundref="d1/d77/node_8h" startline="278" endline="278">Brush::Is</references>
        <references refid="d1/d3a/structBrush_1_1Node_1ab72b791f57011a032c6c89238db85845" compoundref="d1/d77/node_8h" startline="103">is_weighted</references>
        <references refid="d1/d3a/structBrush_1_1Node_1a522791afe93c92442564356ff19ff55a" compoundref="d1/d77/node_8h" startline="89">node_type</references>
        <references refid="d1/d3a/structBrush_1_1Node_1ab719e64b13753515be49327d98bf2224" compoundref="d1/d77/node_8h" startline="107">W</references>
      </memberdef>
      <memberdef kind="function" id="d1/d3a/structBrush_1_1Node_1a2d4b7a1f21f80ce980f4748432911964" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="dc/d5c/namespaceBrush_1a3f2c9b744330ba4a561ac72f048a1a5f" kindref="member">DataType</ref></type>
        <definition>DataType Brush::Node::get_ret_type</definition>
        <argsstring>() const</argsstring>
        <name>get_ret_type</name>
        <qualifiedname>Brush::Node::get_ret_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/program/node.h" line="180" column="21" bodyfile="/home/runner/work/brush/brush/src/program/node.h" bodystart="180" bodyend="180"/>
        <references refid="d1/d3a/structBrush_1_1Node_1a2d4b7a1f21f80ce980f4748432911964" compoundref="d1/d77/node_8h" startline="180" endline="180">get_ret_type</references>
        <references refid="d1/d3a/structBrush_1_1Node_1a65b283648fe779d81ac11f9e4714d920" compoundref="d1/d77/node_8h" startline="92">ret_type</references>
        <referencedby refid="d1/d3a/structBrush_1_1Node_1a2d4b7a1f21f80ce980f4748432911964" compoundref="d1/d77/node_8h" startline="180" endline="180">get_ret_type</referencedby>
        <referencedby refid="d1/d3a/structBrush_1_1Node_1a62f7ba79b38e86e54488e5dd9a6bdc93" compoundref="d1/d77/node_8h" startline="135" endline="146">Node</referencedby>
      </memberdef>
      <memberdef kind="function" id="d1/d3a/structBrush_1_1Node_1a9ec6ba08b0baebc0cd105e4ef774b7fb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t Brush::Node::args_type</definition>
        <argsstring>() const</argsstring>
        <name>args_type</name>
        <qualifiedname>Brush::Node::args_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/program/node.h" line="181" column="24" bodyfile="/home/runner/work/brush/brush/src/program/node.h" bodystart="181" bodyend="181"/>
        <references refid="d1/d3a/structBrush_1_1Node_1a889e0361b55a63a4510a3edabd2fa57c" compoundref="d1/d77/node_8h" startline="96">sig_hash</references>
        <referencedby refid="d5/d14/classBrush_1_1Var_1_1Variation_1aee4d051cf57caab64e694bdb70622913" compoundref="d4/d1f/variation_8h" startline="466" endline="502">Brush::Var::Variation&lt; T &gt;::bandit_get_node_like</referencedby>
        <referencedby refid="d4/dc3/structBrush_1_1SearchSpace_1ac51e5e0acb3a880ffd0f3b7fba2fd68f" compoundref="d9/d99/search__space_8h" startline="562" endline="581">Brush::SearchSpace::get_node_like</referencedby>
      </memberdef>
      <memberdef kind="function" id="d1/d3a/structBrush_1_1Node_1a754e5efb828686e30ebfa2174d56e37a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Brush::Node::get_arg_types</definition>
        <argsstring>() const</argsstring>
        <name>get_arg_types</name>
        <qualifiedname>Brush::Node::get_arg_types</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/program/node.h" line="182" column="17" bodyfile="/home/runner/work/brush/brush/src/program/node.h" bodystart="182" bodyend="182"/>
        <references refid="d1/d3a/structBrush_1_1Node_1a237b9208864ace5209edca01623f6b1e" compoundref="d1/d77/node_8h" startline="94">arg_types</references>
        <referencedby refid="d1/d3a/structBrush_1_1Node_1a62f7ba79b38e86e54488e5dd9a6bdc93" compoundref="d1/d77/node_8h" startline="135" endline="146">Node</referencedby>
      </memberdef>
      <memberdef kind="function" id="d1/d3a/structBrush_1_1Node_1ac2f0913b7a3e238d879722eb7f62aee2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Brush::Node::get_arg_count</definition>
        <argsstring>() const</argsstring>
        <name>get_arg_count</name>
        <qualifiedname>Brush::Node::get_arg_count</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/program/node.h" line="183" column="19" bodyfile="/home/runner/work/brush/brush/src/program/node.h" bodystart="183" bodyend="183"/>
        <references refid="d1/d3a/structBrush_1_1Node_1a237b9208864ace5209edca01623f6b1e" compoundref="d1/d77/node_8h" startline="94">arg_types</references>
      </memberdef>
      <memberdef kind="function" id="d1/d3a/structBrush_1_1Node_1a1aef5137dca5171a150c6d26ca43d9bc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Brush::Node::get_node_hash</definition>
        <argsstring>() const</argsstring>
        <name>get_node_hash</name>
        <qualifiedname>Brush::Node::get_node_hash</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/program/node.h" line="197" column="12" bodyfile="/home/runner/work/brush/brush/src/program/node.h" bodystart="197" bodyend="206"/>
        <references refid="d1/d3a/structBrush_1_1Node_1ac5f37d638625468ed68de599a2a7d968" compoundref="d1/d77/node_8h" startline="270">feature</references>
        <references refid="d1/d3a/structBrush_1_1Node_1a32c73293ee4e02b6d828c2c213e06154" compoundref="d1/d77/node_8h" startline="101">fixed</references>
        <references refid="d1/d3a/structBrush_1_1Node_1a8d884d5ad5f6825aa8f50039fb6baf9f" compoundref="d1/d77/node_8h" startline="258" endline="262">get_is_weighted</references>
        <references refid="db/d53/structBrush_1_1NodeTypes_1a560225849a640cb91ed60227d653dbfa" compoundref="de/d26/nodetype_8h" startline="126" endline="134">Brush::NodeTypes::GetIndex</references>
        <references refid="d1/d3a/structBrush_1_1Node_1a522791afe93c92442564356ff19ff55a" compoundref="d1/d77/node_8h" startline="89">node_type</references>
        <references refid="d1/d3a/structBrush_1_1Node_1a889e0361b55a63a4510a3edabd2fa57c" compoundref="d1/d77/node_8h" startline="96">sig_hash</references>
        <references refid="d1/d3a/structBrush_1_1Node_1ab719e64b13753515be49327d98bf2224" compoundref="d1/d77/node_8h" startline="107">W</references>
        <referencedby refid="d1/d3a/structBrush_1_1Node_1aea5769142b80b211a53eb20d8a14507b" compoundref="d1/d77/node_8h" startline="221" endline="226">operator&lt;</referencedby>
        <referencedby refid="d1/d3a/structBrush_1_1Node_1a7c46bb16fb006691be230d29b6e731fe" compoundref="d1/d77/node_8h" startline="209" endline="214">operator==</referencedby>
      </memberdef>
      <memberdef kind="function" id="d1/d3a/structBrush_1_1Node_1a7c46bb16fb006691be230d29b6e731fe" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Brush::Node::operator==</definition>
        <argsstring>(const Node &amp;rhs) const noexcept</argsstring>
        <name>operator==</name>
        <qualifiedname>Brush::Node::operator==</qualifiedname>
        <param>
          <type>const <ref refid="d1/d3a/structBrush_1_1Node" kindref="compound">Node</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/program/node.h" line="209" column="17" bodyfile="/home/runner/work/brush/brush/src/program/node.h" bodystart="209" bodyend="214"/>
        <references refid="d1/d3a/structBrush_1_1Node_1a1aef5137dca5171a150c6d26ca43d9bc" compoundref="d1/d77/node_8h" startline="197" endline="206">get_node_hash</references>
        <references refid="d1/d3a/structBrush_1_1Node_1adcd17b2d50bd124218a1ed472369d461">Node</references>
      </memberdef>
      <memberdef kind="function" id="d1/d3a/structBrush_1_1Node_1ac854a6c4b96a0524e1371397c6fba4b1" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Brush::Node::operator!=</definition>
        <argsstring>(const Node &amp;rhs) const noexcept</argsstring>
        <name>operator!=</name>
        <qualifiedname>Brush::Node::operator!=</qualifiedname>
        <param>
          <type>const <ref refid="d1/d3a/structBrush_1_1Node" kindref="compound">Node</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/program/node.h" line="216" column="17" bodyfile="/home/runner/work/brush/brush/src/program/node.h" bodystart="216" bodyend="219"/>
        <references refid="d1/d3a/structBrush_1_1Node_1adcd17b2d50bd124218a1ed472369d461">Node</references>
      </memberdef>
      <memberdef kind="function" id="d1/d3a/structBrush_1_1Node_1aea5769142b80b211a53eb20d8a14507b" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Brush::Node::operator&lt;</definition>
        <argsstring>(const Node &amp;rhs) const noexcept</argsstring>
        <name>operator&lt;</name>
        <qualifiedname>Brush::Node::operator&lt;</qualifiedname>
        <param>
          <type>const <ref refid="d1/d3a/structBrush_1_1Node" kindref="compound">Node</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/program/node.h" line="221" column="12" bodyfile="/home/runner/work/brush/brush/src/program/node.h" bodystart="221" bodyend="226"/>
        <references refid="d1/d3a/structBrush_1_1Node_1a1aef5137dca5171a150c6d26ca43d9bc" compoundref="d1/d77/node_8h" startline="197" endline="206">get_node_hash</references>
        <references refid="d1/d3a/structBrush_1_1Node_1adcd17b2d50bd124218a1ed472369d461">Node</references>
      </memberdef>
      <memberdef kind="function" id="d1/d3a/structBrush_1_1Node_1a62ae8b64fc43f5f13d697c481efb6588" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Brush::Node::operator&lt;=</definition>
        <argsstring>(const Node &amp;rhs) const noexcept</argsstring>
        <name>operator&lt;=</name>
        <qualifiedname>Brush::Node::operator&lt;=</qualifiedname>
        <param>
          <type>const <ref refid="d1/d3a/structBrush_1_1Node" kindref="compound">Node</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/program/node.h" line="228" column="12" bodyfile="/home/runner/work/brush/brush/src/program/node.h" bodystart="228" bodyend="231"/>
        <references refid="d1/d3a/structBrush_1_1Node_1adcd17b2d50bd124218a1ed472369d461">Node</references>
      </memberdef>
      <memberdef kind="function" id="d1/d3a/structBrush_1_1Node_1a6dabaf6f3fcd362ff8fbc9e0bd37756f" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Brush::Node::operator&gt;</definition>
        <argsstring>(const Node &amp;rhs) const noexcept</argsstring>
        <name>operator&gt;</name>
        <qualifiedname>Brush::Node::operator&gt;</qualifiedname>
        <param>
          <type>const <ref refid="d1/d3a/structBrush_1_1Node" kindref="compound">Node</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/program/node.h" line="233" column="17" bodyfile="/home/runner/work/brush/brush/src/program/node.h" bodystart="233" bodyend="236"/>
        <references refid="d1/d3a/structBrush_1_1Node_1adcd17b2d50bd124218a1ed472369d461">Node</references>
      </memberdef>
      <memberdef kind="function" id="d1/d3a/structBrush_1_1Node_1aa020471209858e31cb4cf26453033929" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Brush::Node::operator&gt;=</definition>
        <argsstring>(const Node &amp;rhs) const noexcept</argsstring>
        <name>operator&gt;=</name>
        <qualifiedname>Brush::Node::operator&gt;=</qualifiedname>
        <param>
          <type>const <ref refid="d1/d3a/structBrush_1_1Node" kindref="compound">Node</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/program/node.h" line="238" column="17" bodyfile="/home/runner/work/brush/brush/src/program/node.h" bodystart="238" bodyend="241"/>
        <references refid="d1/d3a/structBrush_1_1Node_1adcd17b2d50bd124218a1ed472369d461">Node</references>
      </memberdef>
      <memberdef kind="function" id="d1/d3a/structBrush_1_1Node_1a4fcf7feccb71d538f8614d3c51247eb4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float Brush::Node::get_prob_change</definition>
        <argsstring>() const</argsstring>
        <name>get_prob_change</name>
        <qualifiedname>Brush::Node::get_prob_change</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/program/node.h" line="246" column="11" bodyfile="/home/runner/work/brush/brush/src/program/node.h" bodystart="246" bodyend="246"/>
        <references refid="d1/d3a/structBrush_1_1Node_1a32c73293ee4e02b6d828c2c213e06154" compoundref="d1/d77/node_8h" startline="101">fixed</references>
        <referencedby refid="d6/df2/classBrush_1_1Simpl_1_1Constants__simplifier_1a1967ec4e50c83b4a7890959d9f6e145f" compoundref="d2/d6f/constants_8h" startline="24" endline="84">Brush::Simpl::Constants_simplifier::simplify_tree</referencedby>
      </memberdef>
      <memberdef kind="function" id="d1/d3a/structBrush_1_1Node_1ad9e4f8654978a40e8266b20a4bb0950f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Brush::Node::set_prob_change</definition>
        <argsstring>(float w)</argsstring>
        <name>set_prob_change</name>
        <qualifiedname>Brush::Node::set_prob_change</qualifiedname>
        <param>
          <type>float</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/program/node.h" line="247" column="10" bodyfile="/home/runner/work/brush/brush/src/program/node.h" bodystart="247" bodyend="247"/>
        <referencedby refid="dc/d5c/namespaceBrush_1a7d1315460dd7c6eb76e3ace99d4aad03" compoundref="da/d48/search__space_8cpp" startline="51" endline="169">Brush::generate_terminals</referencedby>
        <referencedby refid="d1/d3a/structBrush_1_1Node_1a99e9db58c89646c630fb9d54b41ff2ba" compoundref="d1/d77/node_8h" startline="158" endline="171">init</referencedby>
        <referencedby refid="d4/dc3/structBrush_1_1SearchSpace_1a810403a87eef0baded2aed2bb4f1979e" compoundref="d9/d99/search__space_8h" startline="715" endline="801">Brush::SearchSpace::make_program</referencedby>
      </memberdef>
      <memberdef kind="function" id="d1/d3a/structBrush_1_1Node_1a087a9c51b46b3e801506415376cd0518" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float Brush::Node::get_prob_keep</definition>
        <argsstring>() const</argsstring>
        <name>get_prob_keep</name>
        <qualifiedname>Brush::Node::get_prob_keep</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/program/node.h" line="248" column="11" bodyfile="/home/runner/work/brush/brush/src/program/node.h" bodystart="248" bodyend="248"/>
        <references refid="d1/d3a/structBrush_1_1Node_1a32c73293ee4e02b6d828c2c213e06154" compoundref="d1/d77/node_8h" startline="101">fixed</references>
      </memberdef>
      <memberdef kind="function" id="d1/d3a/structBrush_1_1Node_1a7e8460b645f3d58c3093eda1d5d3166c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Brush::Node::set_feature</definition>
        <argsstring>(string f)</argsstring>
        <name>set_feature</name>
        <qualifiedname>Brush::Node::set_feature</qualifiedname>
        <param>
          <type><ref refid="d5/d92/classstring" kindref="compound">string</ref></type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/program/node.h" line="250" column="17" bodyfile="/home/runner/work/brush/brush/src/program/node.h" bodystart="250" bodyend="250"/>
        <references refid="d1/d3a/structBrush_1_1Node_1ac5f37d638625468ed68de599a2a7d968" compoundref="d1/d77/node_8h" startline="270">feature</references>
      </memberdef>
      <memberdef kind="function" id="d1/d3a/structBrush_1_1Node_1a85a62efd4f1f99fa45eb52e4c0a1a26f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d5/d92/classstring" kindref="compound">string</ref></type>
        <definition>string Brush::Node::get_feature</definition>
        <argsstring>() const</argsstring>
        <name>get_feature</name>
        <qualifiedname>Brush::Node::get_feature</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/program/node.h" line="251" column="19" bodyfile="/home/runner/work/brush/brush/src/program/node.h" bodystart="251" bodyend="251"/>
        <references refid="d1/d3a/structBrush_1_1Node_1ac5f37d638625468ed68de599a2a7d968" compoundref="d1/d77/node_8h" startline="270">feature</references>
        <referencedby refid="dc/d5c/namespaceBrush_1a2277345e299e6d41c9573c59b32ad0aa" compoundref="d7/d70/node_8cpp" startline="115" endline="133">Brush::to_json</referencedby>
      </memberdef>
      <memberdef kind="function" id="d1/d3a/structBrush_1_1Node_1a9ceebb9b686a6f6784ae90c558385410" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Brush::Node::set_feature_type</definition>
        <argsstring>(DataType ft)</argsstring>
        <name>set_feature_type</name>
        <qualifiedname>Brush::Node::set_feature_type</qualifiedname>
        <param>
          <type><ref refid="dc/d5c/namespaceBrush_1a3f2c9b744330ba4a561ac72f048a1a5f" kindref="member">DataType</ref></type>
          <declname>ft</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/program/node.h" line="253" column="17" bodyfile="/home/runner/work/brush/brush/src/program/node.h" bodystart="253" bodyend="253"/>
        <references refid="d1/d3a/structBrush_1_1Node_1a2875e5aa77054658c071f7b0d7103e68" compoundref="d1/d77/node_8h" startline="273">feature_type</references>
      </memberdef>
      <memberdef kind="function" id="d1/d3a/structBrush_1_1Node_1a5d3a467bbb0b2fa914594c735579926d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="dc/d5c/namespaceBrush_1a3f2c9b744330ba4a561ac72f048a1a5f" kindref="member">DataType</ref></type>
        <definition>DataType Brush::Node::get_feature_type</definition>
        <argsstring>() const</argsstring>
        <name>get_feature_type</name>
        <qualifiedname>Brush::Node::get_feature_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/program/node.h" line="254" column="21" bodyfile="/home/runner/work/brush/brush/src/program/node.h" bodystart="254" bodyend="254"/>
        <references refid="d1/d3a/structBrush_1_1Node_1a2875e5aa77054658c071f7b0d7103e68" compoundref="d1/d77/node_8h" startline="273">feature_type</references>
        <referencedby refid="dc/d5c/namespaceBrush_1a2277345e299e6d41c9573c59b32ad0aa" compoundref="d7/d70/node_8cpp" startline="115" endline="133">Brush::to_json</referencedby>
      </memberdef>
      <memberdef kind="function" id="d1/d3a/structBrush_1_1Node_1a8d884d5ad5f6825aa8f50039fb6baf9f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Brush::Node::get_is_weighted</definition>
        <argsstring>() const</argsstring>
        <name>get_is_weighted</name>
        <qualifiedname>Brush::Node::get_is_weighted</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/program/node.h" line="258" column="17" bodyfile="/home/runner/work/brush/brush/src/program/node.h" bodystart="258" bodyend="262"/>
        <references refid="dc/d5c/namespaceBrush_1a1d5a63450bcdb77bd08283c9f74ca53f" compoundref="d1/d77/node_8h" startline="46" endline="53">Brush::IsWeighable</references>
        <referencedby refid="d1/d3a/structBrush_1_1Node_1a1aef5137dca5171a150c6d26ca43d9bc" compoundref="d1/d77/node_8h" startline="197" endline="206">get_node_hash</referencedby>
        <referencedby refid="d4/dc3/structBrush_1_1SearchSpace_1ab1e6afddd1375b0f8cbd40f0033b32b1" compoundref="da/d48/search__space_8cpp" startline="299" endline="443">Brush::SearchSpace::PTC2</referencedby>
      </memberdef>
      <memberdef kind="function" id="d1/d3a/structBrush_1_1Node_1a70fb9b583f72b67f6c24c2bbaae55267" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Brush::Node::set_is_weighted</definition>
        <argsstring>(bool is_weighted)</argsstring>
        <name>set_is_weighted</name>
        <qualifiedname>Brush::Node::set_is_weighted</qualifiedname>
        <param>
          <type>bool</type>
          <declname>is_weighted</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/program/node.h" line="263" column="17" bodyfile="/home/runner/work/brush/brush/src/program/node.h" bodystart="263" bodyend="266"/>
        <references refid="d1/d3a/structBrush_1_1Node_1ab72b791f57011a032c6c89238db85845" compoundref="d1/d77/node_8h" startline="103">is_weighted</references>
        <references refid="dc/d5c/namespaceBrush_1a1d5a63450bcdb77bd08283c9f74ca53f" compoundref="d1/d77/node_8h" startline="46" endline="53">Brush::IsWeighable</references>
        <referencedby refid="d4/dc3/structBrush_1_1SearchSpace_1a810403a87eef0baded2aed2bb4f1979e" compoundref="d9/d99/search__space_8h" startline="715" endline="801">Brush::SearchSpace::make_program</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>class holding the data for a node in a tree. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>Brush::Node</label>
        <link refid="d1/d3a/structBrush_1_1Node"/>
        <childnode refid="2" relation="usage">
          <edgelabel>feature</edgelabel>
          <edgelabel>name</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>arg_types</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="2">
        <label>std::string</label>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>std::vector&lt; DataType &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/brush/brush/src/program/node.h" line="84" column="1" bodyfile="/home/runner/work/brush/brush/src/program/node.h" bodystart="84" bodyend="275"/>
    <listofallmembers>
      <member refid="d1/d3a/structBrush_1_1Node_1a237b9208864ace5209edca01623f6b1e" prot="public" virt="non-virtual"><scope>Brush::Node</scope><name>arg_types</name></member>
      <member refid="d1/d3a/structBrush_1_1Node_1a9ec6ba08b0baebc0cd105e4ef774b7fb" prot="public" virt="non-virtual"><scope>Brush::Node</scope><name>args_type</name></member>
      <member refid="d1/d3a/structBrush_1_1Node_1a0971012cfb2ae944f4bea0ea0dc9e5a3" prot="public" virt="non-virtual"><scope>Brush::Node</scope><name>center_op</name></member>
      <member refid="d1/d3a/structBrush_1_1Node_1ac5f37d638625468ed68de599a2a7d968" prot="public" virt="non-virtual"><scope>Brush::Node</scope><name>feature</name></member>
      <member refid="d1/d3a/structBrush_1_1Node_1a2875e5aa77054658c071f7b0d7103e68" prot="public" virt="non-virtual"><scope>Brush::Node</scope><name>feature_type</name></member>
      <member refid="d1/d3a/structBrush_1_1Node_1a32c73293ee4e02b6d828c2c213e06154" prot="public" virt="non-virtual"><scope>Brush::Node</scope><name>fixed</name></member>
      <member refid="d1/d3a/structBrush_1_1Node_1ac2f0913b7a3e238d879722eb7f62aee2" prot="public" virt="non-virtual"><scope>Brush::Node</scope><name>get_arg_count</name></member>
      <member refid="d1/d3a/structBrush_1_1Node_1a754e5efb828686e30ebfa2174d56e37a" prot="public" virt="non-virtual"><scope>Brush::Node</scope><name>get_arg_types</name></member>
      <member refid="d1/d3a/structBrush_1_1Node_1a85a62efd4f1f99fa45eb52e4c0a1a26f" prot="public" virt="non-virtual"><scope>Brush::Node</scope><name>get_feature</name></member>
      <member refid="d1/d3a/structBrush_1_1Node_1a5d3a467bbb0b2fa914594c735579926d" prot="public" virt="non-virtual"><scope>Brush::Node</scope><name>get_feature_type</name></member>
      <member refid="d1/d3a/structBrush_1_1Node_1a8d884d5ad5f6825aa8f50039fb6baf9f" prot="public" virt="non-virtual"><scope>Brush::Node</scope><name>get_is_weighted</name></member>
      <member refid="d1/d3a/structBrush_1_1Node_1af621eb9463a3ed3434841565a849c03b" prot="public" virt="non-virtual"><scope>Brush::Node</scope><name>get_model</name></member>
      <member refid="d1/d3a/structBrush_1_1Node_1aaddaf7903795dfdcad487234d6dc380e" prot="public" virt="non-virtual"><scope>Brush::Node</scope><name>get_name</name></member>
      <member refid="d1/d3a/structBrush_1_1Node_1a1aef5137dca5171a150c6d26ca43d9bc" prot="public" virt="non-virtual"><scope>Brush::Node</scope><name>get_node_hash</name></member>
      <member refid="d1/d3a/structBrush_1_1Node_1a4fcf7feccb71d538f8614d3c51247eb4" prot="public" virt="non-virtual"><scope>Brush::Node</scope><name>get_prob_change</name></member>
      <member refid="d1/d3a/structBrush_1_1Node_1a087a9c51b46b3e801506415376cd0518" prot="public" virt="non-virtual"><scope>Brush::Node</scope><name>get_prob_keep</name></member>
      <member refid="d1/d3a/structBrush_1_1Node_1a2d4b7a1f21f80ce980f4748432911964" prot="public" virt="non-virtual"><scope>Brush::Node</scope><name>get_ret_type</name></member>
      <member refid="d1/d3a/structBrush_1_1Node_1abd1037d20f96e122bc1305d70aab418a" prot="public" virt="non-virtual"><scope>Brush::Node</scope><name>HashTuple</name></member>
      <member refid="d1/d3a/structBrush_1_1Node_1a99e9db58c89646c630fb9d54b41ff2ba" prot="public" virt="non-virtual"><scope>Brush::Node</scope><name>init</name></member>
      <member refid="d1/d3a/structBrush_1_1Node_1ab72b791f57011a032c6c89238db85845" prot="public" virt="non-virtual"><scope>Brush::Node</scope><name>is_weighted</name></member>
      <member refid="d1/d3a/structBrush_1_1Node_1ad6b3fd4a54c813d066370defc8a85af1" prot="public" virt="non-virtual"><scope>Brush::Node</scope><name>name</name></member>
      <member refid="d1/d3a/structBrush_1_1Node_1adcd17b2d50bd124218a1ed472369d461" prot="public" virt="non-virtual"><scope>Brush::Node</scope><name>Node</name></member>
      <member refid="d1/d3a/structBrush_1_1Node_1a62f7ba79b38e86e54488e5dd9a6bdc93" prot="public" virt="non-virtual"><scope>Brush::Node</scope><name>Node</name></member>
      <member refid="d1/d3a/structBrush_1_1Node_1a522791afe93c92442564356ff19ff55a" prot="public" virt="non-virtual"><scope>Brush::Node</scope><name>node_type</name></member>
      <member refid="d1/d3a/structBrush_1_1Node_1ac854a6c4b96a0524e1371397c6fba4b1" prot="public" virt="non-virtual"><scope>Brush::Node</scope><name>operator!=</name></member>
      <member refid="d1/d3a/structBrush_1_1Node_1aea5769142b80b211a53eb20d8a14507b" prot="public" virt="non-virtual"><scope>Brush::Node</scope><name>operator&lt;</name></member>
      <member refid="d1/d3a/structBrush_1_1Node_1a62ae8b64fc43f5f13d697c481efb6588" prot="public" virt="non-virtual"><scope>Brush::Node</scope><name>operator&lt;=</name></member>
      <member refid="d1/d3a/structBrush_1_1Node_1a7c46bb16fb006691be230d29b6e731fe" prot="public" virt="non-virtual"><scope>Brush::Node</scope><name>operator==</name></member>
      <member refid="d1/d3a/structBrush_1_1Node_1a6dabaf6f3fcd362ff8fbc9e0bd37756f" prot="public" virt="non-virtual"><scope>Brush::Node</scope><name>operator&gt;</name></member>
      <member refid="d1/d3a/structBrush_1_1Node_1aa020471209858e31cb4cf26453033929" prot="public" virt="non-virtual"><scope>Brush::Node</scope><name>operator&gt;=</name></member>
      <member refid="d1/d3a/structBrush_1_1Node_1a9f5b2e34d8ba752e0f6bffebec8afdc0" prot="public" virt="non-virtual"><scope>Brush::Node</scope><name>prob_change</name></member>
      <member refid="d1/d3a/structBrush_1_1Node_1a65b283648fe779d81ac11f9e4714d920" prot="public" virt="non-virtual"><scope>Brush::Node</scope><name>ret_type</name></member>
      <member refid="d1/d3a/structBrush_1_1Node_1a7e8460b645f3d58c3093eda1d5d3166c" prot="public" virt="non-virtual"><scope>Brush::Node</scope><name>set_feature</name></member>
      <member refid="d1/d3a/structBrush_1_1Node_1a9ceebb9b686a6f6784ae90c558385410" prot="public" virt="non-virtual"><scope>Brush::Node</scope><name>set_feature_type</name></member>
      <member refid="d1/d3a/structBrush_1_1Node_1a70fb9b583f72b67f6c24c2bbaae55267" prot="public" virt="non-virtual"><scope>Brush::Node</scope><name>set_is_weighted</name></member>
      <member refid="d1/d3a/structBrush_1_1Node_1ad9e4f8654978a40e8266b20a4bb0950f" prot="public" virt="non-virtual"><scope>Brush::Node</scope><name>set_prob_change</name></member>
      <member refid="d1/d3a/structBrush_1_1Node_1a24ab653c36833ab9cd301efe99b39d5f" prot="public" virt="non-virtual"><scope>Brush::Node</scope><name>set_signature</name></member>
      <member refid="d1/d3a/structBrush_1_1Node_1aed6c2af0fae3dd8e5a8aa2fab77479fd" prot="public" virt="non-virtual"><scope>Brush::Node</scope><name>sig_dual_hash</name></member>
      <member refid="d1/d3a/structBrush_1_1Node_1a889e0361b55a63a4510a3edabd2fa57c" prot="public" virt="non-virtual"><scope>Brush::Node</scope><name>sig_hash</name></member>
      <member refid="d1/d3a/structBrush_1_1Node_1ab719e64b13753515be49327d98bf2224" prot="public" virt="non-virtual"><scope>Brush::Node</scope><name>W</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
