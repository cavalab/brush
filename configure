#!/bin/bash
# ===
# Configuration Options:
# ./configure : builds a release version of feat.
# ./configure debug : builds a debug version of feat.
# ./configure profile: build a version of feat use with profiling tools. 
# ===
rm -rf build; mkdir build; cd build; 
#cmake -DCMAKE_BUILD_TYPE=Debug -DGTEST_INCLUDE_DIRS="$CONDA_PREFIX/include/" -DGTEST_LIBRARIES="$CONDA_PREFIX/lib/libgtest.so" -DEIGEN3_INCLUDE_DIR="$CONDA_PREFIX/include/eigen3/" ..
cmake .. -DCMAKE_LIBRARY_OUTPUT_DIRECTORY=/mnt/d/projects/brush/build/lib.linux-x86_64-3.7/ -DPYTHON_EXECUTABLE=/home/jdr2160/miniconda3/envs/brush/bin/python3.7 -DCMAKE_BUILD_TYPE=Debug -DGTEST_INCLUDE_DIRS=/home/jdr2160/miniconda3/envs/brush/include/ -DGTEST_LIBRARIES=/home/jdr2160/miniconda3/envs/brush/lib/libgtest.so -DEIGEN3_INCLUDE_DIR=/home/jdr2160/miniconda3/envs/brush/include/eigen3/ -DPYBIND11_FINDPYTHON=ON

# if [ "$1" == "debug" ]; then
#     rm -rf debug; mkdir debug; cd debug; 
#     cmake -DCMAKE_BUILD_TYPE=Debug ..
#     cd ..
# elif [ "$1" == "profile" ]; then
#     rm -rf profile; mkdir profile; cd profile;    
#     cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS=-p -DCMAKE_CXX_FLAGS=-O2 ..
#     cd ..
# elif [ "$1" == "lpc" ] ; then
#     # set up LPC environment
#     module load cmake/3.4.3
#     module load gcc/5.2.0
#     export EIGEN3_INCLUDE_DIR="$HOME/eigen-3.3.4/"
#     rm -rf build; mkdir build; cd build; 
#     cmake -DEIGEN_DIR=ON -DOMP=OFF ..
#     cd ..
# elif [ "$1" == "lpc_cuda" ] ; then
#     # set up LPC environment
#     module load cmake/3.4.3
#     module load gcc/5.2.0
#     export EIGEN3_INCLUDE_DIR="$HOME/eigen-3.3.4/"
#     rm -rf buildGPU; mkdir buildGPU; cd buildGPU; 
#     cmake -DEIGEN_DIR=ON -DOMP=OFF -DCORE_USE_CUDA=ON ..
#     cd ..
# elif [ "$1" == "tests" ] ; then 
#     rm -rf build; mkdir build; cd build; 
#     cmake .. -DTEST=ON ..
#     cd ..
# elif [ "$1" == "gpu" ] ; then
#     rm -rf buildGPU; mkdir buildGPU; cd buildGPU; 
#     cmake -DCORE_USE_CUDA=ON ..
#     cd ..
# else
#     rm -rf build; mkdir build; cd build; 
#     cmake ..
#     cd ..
# fi
