<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="de/dd1/namespaceSplit" kind="namespace" language="C++">
    <compoundname>Split</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="de/dd1/namespaceSplit_1a32d9e8db103f509738ced38619513853" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="d8/d5c/functions_8h_1a6a33354c51ab1e4986b2a222aac825a7" kindref="member">ArrayXb</ref></type>
        <definition>ArrayXb Split::threshold_mask</definition>
        <argsstring>(const T &amp;x, const float &amp;threshold)</argsstring>
        <name>threshold_mask</name>
        <param>
          <type>const T &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const float &amp;</type>
          <declname>threshold</declname>
        </param>
        <briefdescription>
<para>Applies a learned threshold to a feature, returning a mask. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/program/split.h" line="12" column="13" bodyfile="/home/runner/work/brush/brush/src/program/split.h" bodystart="15" bodyend="17" declfile="/home/runner/work/brush/brush/src/program/split.h" declline="12" declcolumn="13"/>
        <referencedby refid="de/dd1/namespaceSplit_1ac6e151bf63086d9df8979e0064236399" compoundref="d4/df2/split_8h" startline="61" endline="112">best_threshold</referencedby>
        <referencedby refid="d3/df2/structOperator_3_01NT_00_01S_00_01Fit_00_01enable__if__t_3_01is__in__v_3_01NT_00_01NodeType_1_1Se4750a8ecc1d24ba81c8da2bd5c73a14_1af103a8ad8b7580d3c3a82b5c997b26c0" compoundref="d4/df2/split_8h" startline="245" endline="275">Operator&lt; NT, S, Fit, enable_if_t&lt; is_in_v&lt; NT, NodeType::SplitOn, NodeType::SplitBest &gt; &gt; &gt;::predict</referencedby>
        <referencedby refid="d7/da9/namespaceBrush_1_1Split_1a31a254e869c995a17b22b0bd5adf9aa4" compoundref="d4/d59/split_8cpp" startline="54" endline="65">Brush::Split::threshold_mask&lt; State &gt;</referencedby>
      </memberdef>
      <memberdef kind="function" id="de/dd1/namespaceSplit_1a1454d3ec46af0302c1df7a6c57b69c6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>requires same_as&lt; typename T::Scalar, bool &gt; <ref refid="d8/d5c/functions_8h_1a6a33354c51ab1e4986b2a222aac825a7" kindref="member">ArrayXb</ref></type>
        <definition>requires same_as&lt;typename T::Scalar, bool&gt; ArrayXb Split::threshold_mask</definition>
        <argsstring>(const T &amp;x, const float &amp;threshold)</argsstring>
        <name>threshold_mask</name>
        <param>
          <type>const T &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const float &amp;</type>
          <declname>threshold</declname>
        </param>
        <briefdescription>
<para>Applies a learned threshold to a feature, returning a mask. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/program/split.h" line="15" column="13" bodyfile="/home/runner/work/brush/brush/src/program/split.h" bodystart="15" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="de/dd1/namespaceSplit_1a3e27c2b2a7e71d7cc6588fd2e66f1f13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>requires same_as&lt; typename T::Scalar, bJet &gt; <ref refid="d8/d5c/functions_8h_1a6a33354c51ab1e4986b2a222aac825a7" kindref="member">ArrayXb</ref></type>
        <definition>requires same_as&lt;typename T::Scalar, bJet&gt; ArrayXb Split::threshold_mask</definition>
        <argsstring>(const T &amp;x, const float &amp;threshold)</argsstring>
        <name>threshold_mask</name>
        <param>
          <type>const T &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const float &amp;</type>
          <declname>threshold</declname>
        </param>
        <briefdescription>
<para>Applies a learned threshold to a feature, returning a mask. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/program/split.h" line="19" column="13" bodyfile="/home/runner/work/brush/brush/src/program/split.h" bodystart="19" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="de/dd1/namespaceSplit_1ad36b7cd99bc88f509ac098514103f7bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>requires same_as&lt; typename T::Scalar, float &gt; <ref refid="d8/d5c/functions_8h_1a6a33354c51ab1e4986b2a222aac825a7" kindref="member">ArrayXb</ref></type>
        <definition>requires same_as&lt;typename T::Scalar, float&gt; ArrayXb Split::threshold_mask</definition>
        <argsstring>(const T &amp;x, const float &amp;threshold)</argsstring>
        <name>threshold_mask</name>
        <param>
          <type>const T &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const float &amp;</type>
          <declname>threshold</declname>
        </param>
        <briefdescription>
<para>Applies a learned threshold to a feature, returning a mask. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/program/split.h" line="26" column="13" bodyfile="/home/runner/work/brush/brush/src/program/split.h" bodystart="26" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="de/dd1/namespaceSplit_1a128af7e2817f9772eb252b6df9895461" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>requires same_as&lt; typename T::Scalar, fJet &gt; <ref refid="d8/d5c/functions_8h_1a6a33354c51ab1e4986b2a222aac825a7" kindref="member">ArrayXb</ref></type>
        <definition>requires same_as&lt;typename T::Scalar, fJet&gt; ArrayXb Split::threshold_mask</definition>
        <argsstring>(const T &amp;x, const float &amp;threshold)</argsstring>
        <name>threshold_mask</name>
        <param>
          <type>const T &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const float &amp;</type>
          <declname>threshold</declname>
        </param>
        <briefdescription>
<para>Applies a learned threshold to a feature, returning a mask. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/program/split.h" line="30" column="13" bodyfile="/home/runner/work/brush/brush/src/program/split.h" bodystart="30" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="de/dd1/namespaceSplit_1a12e0cfcbaeba447fa692e6963224e5a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>requires same_as&lt; typename T::Scalar, int &gt; <ref refid="d8/d5c/functions_8h_1a6a33354c51ab1e4986b2a222aac825a7" kindref="member">ArrayXb</ref></type>
        <definition>requires same_as&lt;typename T::Scalar, int&gt; ArrayXb Split::threshold_mask</definition>
        <argsstring>(const T &amp;x, const float &amp;threshold)</argsstring>
        <name>threshold_mask</name>
        <param>
          <type>const T &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const float &amp;</type>
          <declname>threshold</declname>
        </param>
        <briefdescription>
<para>Applies a learned threshold to a feature, returning a mask. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/program/split.h" line="39" column="13" bodyfile="/home/runner/work/brush/brush/src/program/split.h" bodystart="39" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="de/dd1/namespaceSplit_1a33da774c1f21aba4cfcfcafa8c929379" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>requires same_as&lt; typename T::Scalar, iJet &gt; <ref refid="d8/d5c/functions_8h_1a6a33354c51ab1e4986b2a222aac825a7" kindref="member">ArrayXb</ref></type>
        <definition>requires same_as&lt;typename T::Scalar, iJet&gt; ArrayXb Split::threshold_mask</definition>
        <argsstring>(const T &amp;x, const float &amp;threshold)</argsstring>
        <name>threshold_mask</name>
        <param>
          <type>const T &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const float &amp;</type>
          <declname>threshold</declname>
        </param>
        <briefdescription>
<para>Applies a learned threshold to a feature, returning a mask. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/program/split.h" line="44" column="13" bodyfile="/home/runner/work/brush/brush/src/program/split.h" bodystart="44" bodyend="52"/>
        <referencedby refid="de/dd1/namespaceSplit_1ac6e151bf63086d9df8979e0064236399" compoundref="d4/df2/split_8h" startline="61" endline="112">best_threshold</referencedby>
        <referencedby refid="d3/df2/structOperator_3_01NT_00_01S_00_01Fit_00_01enable__if__t_3_01is__in__v_3_01NT_00_01NodeType_1_1Se4750a8ecc1d24ba81c8da2bd5c73a14_1af103a8ad8b7580d3c3a82b5c997b26c0" compoundref="d4/df2/split_8h" startline="245" endline="275">Operator&lt; NT, S, Fit, enable_if_t&lt; is_in_v&lt; NT, NodeType::SplitOn, NodeType::SplitBest &gt; &gt; &gt;::predict</referencedby>
        <referencedby refid="d7/da9/namespaceBrush_1_1Split_1a31a254e869c995a17b22b0bd5adf9aa4" compoundref="d4/d59/split_8cpp" startline="54" endline="65">Brush::Split::threshold_mask&lt; State &gt;</referencedby>
      </memberdef>
      <memberdef kind="function" id="de/dd1/namespaceSplit_1acd99d8ce752cff6548bd895f2a3e619f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Split::gini_impurity_index</definition>
        <argsstring>(const ArrayXf &amp;classes, const vector&lt; float &gt; &amp;uc)</argsstring>
        <name>gini_impurity_index</name>
        <param>
          <type>const ArrayXf &amp;</type>
          <declname>classes</declname>
        </param>
        <param>
          <type>const vector&lt; float &gt; &amp;</type>
          <declname>uc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/program/split.h" line="53" column="11" declfile="/home/runner/work/brush/brush/src/program/split.h" declline="53" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="de/dd1/namespaceSplit_1a80c2d566bfead7fb604689467324b611" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Split::gain</definition>
        <argsstring>(const ArrayXf &amp;lsplit, const ArrayXf &amp;rsplit, bool classification, vector&lt; float &gt; unique_classes)</argsstring>
        <name>gain</name>
        <param>
          <type>const ArrayXf &amp;</type>
          <declname>lsplit</declname>
        </param>
        <param>
          <type>const ArrayXf &amp;</type>
          <declname>rsplit</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>classification</declname>
        </param>
        <param>
          <type>vector&lt; float &gt;</type>
          <declname>unique_classes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/program/split.h" line="54" column="11" declfile="/home/runner/work/brush/brush/src/program/split.h" declline="54" declcolumn="11"/>
        <referencedby refid="de/dd1/namespaceSplit_1ac6e151bf63086d9df8979e0064236399" compoundref="d4/df2/split_8h" startline="61" endline="112">best_threshold</referencedby>
      </memberdef>
      <memberdef kind="function" id="de/dd1/namespaceSplit_1ad36a434d5bbab7259dede23f324463a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>vector&lt; float &gt;</type>
        <definition>vector&lt;float&gt; Split::get_thresholds</definition>
        <argsstring>(const T &amp;x)</argsstring>
        <name>get_thresholds</name>
        <param>
          <type>const T &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/program/split.h" line="57" column="23" declfile="/home/runner/work/brush/brush/src/program/split.h" declline="57" declcolumn="23"/>
        <referencedby refid="de/dd1/namespaceSplit_1ac6e151bf63086d9df8979e0064236399" compoundref="d4/df2/split_8h" startline="61" endline="112">best_threshold</referencedby>
      </memberdef>
      <memberdef kind="function" id="de/dd1/namespaceSplit_1a1183d3e2827fc428a8d5243ad29e01e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>tuple&lt; string, float &gt;</type>
        <definition>tuple&lt;string,float&gt; Split::get_best_variable_and_threshold</definition>
        <argsstring>(const Dataset &amp;d, TreeNode &amp;tn)</argsstring>
        <name>get_best_variable_and_threshold</name>
        <param>
          <type>const Dataset &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type><ref refid="df/d61/dispatch__table_8h_1a5d0d9e773ca46763fb1b1152cafc4179" kindref="member">TreeNode</ref> &amp;</type>
          <declname>tn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/program/split.h" line="58" column="11" declfile="/home/runner/work/brush/brush/src/program/split.h" declline="58" declcolumn="11"/>
        <referencedby refid="d3/df2/structOperator_3_01NT_00_01S_00_01Fit_00_01enable__if__t_3_01is__in__v_3_01NT_00_01NodeType_1_1Se4750a8ecc1d24ba81c8da2bd5c73a14_1a771c7574933c9720bdb9fb2e51571bbd" compoundref="d4/df2/split_8h" startline="224" endline="243">Operator&lt; NT, S, Fit, enable_if_t&lt; is_in_v&lt; NT, NodeType::SplitOn, NodeType::SplitBest &gt; &gt; &gt;::fit</referencedby>
      </memberdef>
      <memberdef kind="function" id="de/dd1/namespaceSplit_1ac6e151bf63086d9df8979e0064236399" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>tuple&lt; float, float &gt;</type>
        <definition>tuple&lt;float,float&gt; Split::best_threshold</definition>
        <argsstring>(const T &amp;x, const ArrayXf &amp;y, bool classification)</argsstring>
        <name>best_threshold</name>
        <param>
          <type>const T &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const ArrayXf &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>classification</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/program/split.h" line="61" column="11" bodyfile="/home/runner/work/brush/brush/src/program/split.h" bodystart="61" bodyend="112"/>
        <references refid="de/dd1/namespaceSplit_1a80c2d566bfead7fb604689467324b611">gain</references>
        <references refid="de/dd1/namespaceSplit_1ad36a434d5bbab7259dede23f324463a0">get_thresholds</references>
        <references refid="d6/d2e/namespaceBrush_1_1Util_1a43f8d9d4ac086fe1166492d0751eb2db" compoundref="de/d06/utils_8cpp" startline="417" endline="428">Brush::Util::mask_to_indices</references>
        <references refid="d8/dc0/init_8h_1a0c86fe7dc09ca580e891580bf302e659" compoundref="d8/dc0/init_8h" startline="61">MAX_FLT</references>
        <references refid="de/dd1/namespaceSplit_1a32d9e8db103f509738ced38619513853" compoundref="d4/df2/split_8h" startline="15" endline="17">threshold_mask</references>
        <references refid="d6/d2e/namespaceBrush_1_1Util_1aa39c5ad4672ff451d1e8a1f464883943" compoundref="d5/d60/utils_8h" startline="286" endline="293">Brush::Util::unique</references>
        <referencedby refid="d3/df2/structOperator_3_01NT_00_01S_00_01Fit_00_01enable__if__t_3_01is__in__v_3_01NT_00_01NodeType_1_1Se4750a8ecc1d24ba81c8da2bd5c73a14_1a771c7574933c9720bdb9fb2e51571bbd" compoundref="d4/df2/split_8h" startline="224" endline="243">Operator&lt; NT, S, Fit, enable_if_t&lt; is_in_v&lt; NT, NodeType::SplitOn, NodeType::SplitBest &gt; &gt; &gt;::fit</referencedby>
        <referencedby refid="de/dd1/namespaceSplit_1aafc092b8203061cdffb0278bc56ac377" compoundref="d4/df2/split_8h" startline="115" endline="150">get_best_threshold_by_type</referencedby>
      </memberdef>
      <memberdef kind="function" id="de/dd1/namespaceSplit_1aafc092b8203061cdffb0278bc56ac377" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Split::get_best_threshold_by_type</definition>
        <argsstring>(const Dataset &amp;d, auto &amp;results)</argsstring>
        <name>get_best_threshold_by_type</name>
        <param>
          <type>const Dataset &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type>auto &amp;</type>
          <declname>results</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/program/split.h" line="115" column="10" bodyfile="/home/runner/work/brush/brush/src/program/split.h" bodystart="115" bodyend="150"/>
        <references refid="de/dd1/namespaceSplit_1ac6e151bf63086d9df8979e0064236399" compoundref="d4/df2/split_8h" startline="61" endline="112">best_threshold</references>
        <references refid="d8/dc0/init_8h_1a0c86fe7dc09ca580e891580bf302e659" compoundref="d8/dc0/init_8h" startline="61">MAX_FLT</references>
      </memberdef>
      <memberdef kind="function" id="de/dd1/namespaceSplit_1a48dabad3e3171cc9169551e1e9f37cf3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Ts</type>
          </param>
          <param>
            <type>std::size_t...</type>
            <declname>Is</declname>
            <defname>Is</defname>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Split::get_best_thresholds</definition>
        <argsstring>(const Dataset &amp;d, std::index_sequence&lt; Is... &gt;)</argsstring>
        <name>get_best_thresholds</name>
        <param>
          <type>const Dataset &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type>std::index_sequence&lt; Is... &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/program/split.h" line="153" column="10" bodyfile="/home/runner/work/brush/brush/src/program/split.h" bodystart="153" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="de/dd1/namespaceSplit_1ad6013220c481c0b8720207da6814d690" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T Split::stitch</definition>
        <argsstring>(array&lt; T, 2 &gt; &amp;child_outputs, const ArrayXb &amp;mask)</argsstring>
        <name>stitch</name>
        <param>
          <type>array&lt; T, 2 &gt; &amp;</type>
          <declname>child_outputs</declname>
        </param>
        <param>
          <type>const <ref refid="d8/d5c/functions_8h_1a6a33354c51ab1e4986b2a222aac825a7" kindref="member">ArrayXb</ref> &amp;</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Stitches together outputs from left or right child based on threshold. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/brush/brush/src/program/split.h" line="172" column="7" bodyfile="/home/runner/work/brush/brush/src/program/split.h" bodystart="172" bodyend="182"/>
        <references refid="d6/d2e/namespaceBrush_1_1Util_1a43f8d9d4ac086fe1166492d0751eb2db" compoundref="de/d06/utils_8cpp" startline="417" endline="428">Brush::Util::mask_to_indices</references>
        <referencedby refid="d3/df2/structOperator_3_01NT_00_01S_00_01Fit_00_01enable__if__t_3_01is__in__v_3_01NT_00_01NodeType_1_1Se4750a8ecc1d24ba81c8da2bd5c73a14_1af103a8ad8b7580d3c3a82b5c997b26c0" compoundref="d4/df2/split_8h" startline="245" endline="275">Operator&lt; NT, S, Fit, enable_if_t&lt; is_in_v&lt; NT, NodeType::SplitOn, NodeType::SplitBest &gt; &gt; &gt;::predict</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/brush/brush/src/program/split.h" line="10" column="1"/>
  </compounddef>
</doxygen>
